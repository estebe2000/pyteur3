{"version":3,"file":"assets/412.1ba9cb195f3d9dd23037.js","mappings":"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","sources":["webpack://@basthon/basthon-console/webpack/runtime/chunk loaded","webpack://@basthon/basthon-console/webpack/runtime/create fake namespace object","webpack://@basthon/basthon-console/webpack/runtime/startup chunk dependencies","webpack://@basthon/basthon-console/./node_modules/@basthon/kernel-base/lib/worker/kernel-main.js","webpack://@basthon/basthon-console/./node_modules/@basthon/kernel-python3/lib/worker.js","webpack://@basthon/basthon-console/./node_modules/@basthon/kernel-python3/lib/comlink-worker.js","webpack://@basthon/basthon-console/./node_modules/promise-delegate/dist/es/PromiseDelegate.js","webpack://@basthon/basthon-console/webpack/bootstrap","webpack://@basthon/basthon-console/webpack/runtime/define property getters","webpack://@basthon/basthon-console/webpack/runtime/ensure chunk","webpack://@basthon/basthon-console/webpack/runtime/get javascript chunk filename","webpack://@basthon/basthon-console/webpack/runtime/get mini-css chunk filename","webpack://@basthon/basthon-console/webpack/runtime/global","webpack://@basthon/basthon-console/webpack/runtime/hasOwnProperty shorthand","webpack://@basthon/basthon-console/webpack/runtime/make namespace object","webpack://@basthon/basthon-console/webpack/runtime/publicPath","webpack://@basthon/basthon-console/webpack/runtime/importScripts chunk loading","webpack://@basthon/basthon-console/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([\n\t\t__webpack_require__.e(900),\n\t\t__webpack_require__.e(577)\n\t]).then(next);\n};","import { wrap, createEndpoint, transfer } from \"comlink\";\nimport { NotImplementedError, mockWorker, mockHTMLImageSrc } from \"../commons\";\nimport { KernelBase } from \"../kernel\";\nimport { PromiseDelegate } from \"promise-delegate\";\n// mock Worker to support sandboxing and keep webpack compatibility\nmockWorker();\n// mock HTMLImageElement.src to support localfs access\nmockHTMLImageSrc();\nexport class KernelMainBase extends KernelBase {\n    constructor(options) {\n        super(options);\n        // synchronise comlink and communication channels\n        this._channelSyncer = new PromiseDelegate();\n        this._encrypt = (s) => s;\n        this._legacy = options?.legacy === true;\n        // synchronous wait on SAB cannot be used in a legacy context\n        // (atomic wait will block the main thread)\n        if (!this.isLegacy()) {\n            if (globalThis.crossOriginIsolated)\n                this._sab = new SharedArrayBuffer(1024);\n            else\n                this._fallbackKey = globalThis.crypto.randomUUID();\n        }\n    }\n    /**\n     * Is this a legacy worker? i.e. not runing in a worker.\n     */\n    isLegacy() {\n        return this._legacy;\n    }\n    /**\n     * Is synchrnous communication with worker available?\n     * (through SharedArrayBuffer atomic waits)\n     */\n    syncCommSupport() {\n        return this._sab != null;\n    }\n    /**\n     * Is this kernel safe? (loaded in an isolated web worker)\n     */\n    safeKernel() {\n        return !this.isLegacy();\n    }\n    /**\n     * Get a new worker (should be overloaded).\n     */\n    newWorker() {\n        throw new NotImplementedError(\"newWorker\");\n    }\n    /**\n     * Import the code for a legacy worker (running in the main thread).\n     */\n    async importLegacyWorker() {\n        throw new NotImplementedError(\"importLegacyWorker\");\n    }\n    /**\n     * Create the kernel webworker and setup communication.\n     */\n    async setupWorker() {\n        const comlinkChannel = new MessageChannel();\n        if (this.isLegacy()) {\n            // running in main thread via message channel (fake worker)\n            //@ts-ignore\n            self._commPort = comlinkChannel.port1;\n            // this global variable will be removed by worker\n            self._assetsURL = this.assetsURL(true);\n            await this.importLegacyWorker();\n        }\n        else {\n            // setup the kernel worker\n            const worker = this.newWorker();\n            // send communication port\n            worker.postMessage(comlinkChannel.port1, [comlinkChannel.port1]);\n            this._worker = worker;\n        }\n        const KernelWorker = wrap(comlinkChannel.port2);\n        // why typescript complains about this call? yet, this is advertised in\n        // https://github.com/GoogleChromeLabs/comlink/blob/dffe9050f63b1b39f30213adeb1dd4b9ed7d2594/docs/examples/03-classes-example/index.html#L15\n        //@ts-ignore\n        this._remote = await new KernelWorker(this._options);\n        // setup the communication channel\n        const { port1, port2 } = new MessageChannel();\n        port2.onmessage = (e) => this.processWorkerMessage(e.data);\n        this.postMessageToWorker = port2.postMessage.bind(port2);\n        await this.remote?.setCommPort(transfer(port1, [port1]));\n        // WARNING: without the setCommPort call, KernelWorker (proxy)\n        // is garbage collected and comlink releases the proxy,\n        // breaking all the communications... (don't know really why)\n        // If you experience this, just keep a ref on the proxy with e.g.\n        // this.PROXY = KernelWorker\n    }\n    /**\n     * Start the worker.\n     */\n    async _start() {\n        await super._start();\n        // kernel restart in legacy mode is lazy, not a full restart\n        if (this.isLegacy() && this.remote != null) {\n            await this.remote?.legacyStart();\n            return;\n        }\n        // setup the proxy worker\n        const proxyWorker = new Worker(new URL(\"./comlink-proxy.js\", import.meta.url));\n        const proxy = wrap(proxyWorker);\n        // setup the kernel worker\n        await this.setupWorker();\n        if (this.syncCommSupport()) {\n            console.log(\"Using SharedArrayBuffer for synchronous worker communication.\");\n            await this._remote?.setSAB(this._sab);\n        }\n        else if (this._fallbackKey != null) {\n            console.warn(\"SharedArrayBuffer not available, falling back to \" +\n                \"using third-party server for synchronous worker communication.\");\n            const pass = globalThis.crypto.randomUUID();\n            await this.remote?.setFallbackKeyAndPass(this._fallbackKey, pass);\n            const AES = await import(\"crypto-js/aes\");\n            this._encrypt = (message) => AES.encrypt(message, pass).toString();\n        }\n        // bind ports\n        const port = await proxy[createEndpoint]();\n        await this.remote?.setProxyPort(transfer(port, [port]));\n        // init remote\n        await this.remote?.init();\n    }\n    /**\n     * Comlink remote getter.\n     */\n    get remote() {\n        return this._remote;\n    }\n    /**\n     * Stop the worker.\n     */\n    async _stop() {\n        if (this.isLegacy()) {\n            await this.remote?.legacyStop();\n        }\n        else {\n            this._worker?.terminate();\n            this._worker = undefined;\n            this._remote = undefined;\n        }\n        await super._stop();\n    }\n    /**\n     * Process messages from worker (if any).\n     */\n    async processWorkerMessage(msg) {\n        switch (msg.type) {\n            case \"eval-end\":\n                this._channelSyncer.resolve();\n                this._channelSyncer = new PromiseDelegate();\n                break;\n            case \"stream\":\n                const { stream, text } = msg.content;\n                const dataEvent = this.clone(msg.data);\n                dataEvent.stream = stream;\n                dataEvent.content = text;\n                this.dispatchEvent(\"eval.output\", dataEvent);\n                break;\n            case \"download\":\n                const { content, filename } = msg.content;\n                this.download(content, filename);\n                break;\n            case \"display\":\n                if (msg.data?.display_type === \"dom-node\") {\n                    // we should be in legacy mode here\n                    if (!this.isLegacy())\n                        throw new Error(\"internal error\");\n                    const id = msg.data?.content;\n                    //@ts-ignore\n                    msg.data.content = await self.basthon?.popDOMNode(id);\n                }\n                this.dispatchEvent(\"eval.display\", msg.data);\n                break;\n            case \"clear_output\":\n                this.dispatchEvent(\"eval.clear-output\", msg.data);\n                break;\n            case \"input\":\n                const { prompt, password, data } = msg.content;\n                const res = (await this.inputAsync(prompt, password, data));\n                if (msg.content.toplevel === true) {\n                    this.postMessageToWorker({\n                        type: \"toplevel-input\",\n                        content: res,\n                        data,\n                    });\n                }\n                else if (this.syncCommSupport()) {\n                    const encodedRes = new TextEncoder().encode(res);\n                    new Uint8Array(this._sab).set(encodedRes.subarray(0, this._sab.byteLength));\n                    Atomics.notify(new Int32Array(this._sab), 0, 1);\n                }\n                else {\n                    const response = await fetch(\"https://api.basthon.fr/ephemeral\", {\n                        method: \"POST\",\n                        headers: {\n                            \"X-API-Referer\": self.location.href,\n                        },\n                        body: JSON.stringify({\n                            action: \"post\",\n                            key: this._fallbackKey,\n                            payload: this._encrypt(res),\n                        }),\n                    });\n                    if (!response.ok)\n                        throw new Error(`Basthon's network API error: ${response.status}`);\n                }\n                break;\n            case \"breakpoint-move-on\":\n                //@ts-ignore\n                const notebook = Jupyter?.notebook;\n                const msg_id = msg.content.data?.parent_msg?.header?.msg_id;\n                const index = notebook?.last_msg_id_to_cell_index?.(msg_id);\n                notebook?.next_breakpoint_cell?.(index);\n                break;\n            default: // ignoring (probably a comlink message)\n        }\n    }\n    async evalAsync(code, outCallback, errCallback, data = null) {\n        // force interactivity in all modes\n        data.interactive = true;\n        this._execution_count++;\n        // to be sure we do not miss communications\n        const syncChannels = this._channelSyncer.promise;\n        // evaluation\n        const execResult = (await this.remote?.eval(data, code));\n        // wait for all communications to end\n        await syncChannels;\n        // return result\n        let result;\n        switch (execResult?.status) {\n            case \"ok\":\n                result = execResult.result;\n                break;\n            case \"error\":\n                break;\n        }\n        return [result, this._execution_count];\n    }\n    /**\n     * Put a file on the local (emulated) filesystem.\n     */\n    async putFile(filename, content) {\n        await super.putFile(filename, content);\n        await this.remote?.putFile(filename, content);\n    }\n    /**\n     * Put an importable module on the local (emulated) filesystem\n     * and load dependencies.\n     */\n    async putModule(filename, content) {\n        await super.putModule(filename, content);\n        await this.remote?.putModule(filename, content);\n    }\n    /**\n     * Complete a code at the end (usefull for tab completion).\n     *\n     * Returns an array of two elements: the list of completions\n     * and the start index.\n     */\n    async complete(code) {\n        return (await this.remote?.complete(code)) ?? [];\n    }\n    /**\n     * Tell wether we should wait for more code or if it can\n     * be run as is.\n     *\n     * Useful to set ps1/ps2 in console prompt.\n     */\n    async more(code) {\n        return (await this.remote?.more(code)) ?? false;\n    }\n}\n","import { KernelWorkerBase, loadScript } from \"@basthon/kernel-base/worker\";\nconst PYODIDE_VERSION = \"0.23.2\";\nexport class Python3KernelWorker extends KernelWorkerBase {\n    constructor(options) {\n        // do not forget to call the parent constructor\n        super(options);\n        /**\n         * Where to find pyodide.js (private).\n         */\n        this._pyodideURLs = [\n            `https://cdn.jsdelivr.net/pyodide/v{PYODIDE_VERSION}/full/pyodide.js`,\n        ];\n        this.__kernel__ = null;\n        this.pythonVersion = \"\";\n        // for locally installed Pyodide\n        this._pyodideURLs.unshift(`${this.basthonRoot()}/pyodide/pyodide.js`);\n        this._pyodideURLs = options?.pyodideURLs ?? this._pyodideURLs;\n    }\n    language() {\n        return \"python3\";\n    }\n    /**\n     * Get the URL of Basthon modules dir.\n     */\n    basthonModulesRoot() {\n        return this.basthonRoot() + \"/modules\";\n    }\n    /**\n     * What to do when loaded (private).\n     */\n    async _onload() {\n        const pyodide = self.pyodide;\n        // reformat repodata\n        const packages = pyodide._api.repodata_packages;\n        for (let p of Object.keys(packages)) {\n            const item = packages[p];\n            item.file_name = item.file_name.replace(\"{basthonRoot}\", this.basthonRoot());\n        }\n        // get the version of Python from Python\n        this.pythonVersion = pyodide.runPython(\"import platform ; platform.python_version()\");\n        // load basthon and get kernel\n        await pyodide.loadPackage(\"basthon\");\n        this.__kernel__ = pyodide.pyimport(\"basthon\").__kernel__;\n        this.__kernel__.start();\n    }\n    /*\n     * Initialize the kernel.\n     */\n    async _init() {\n        let pyodideURL = this._pyodideURLs[0];\n        for (let url of this._pyodideURLs) {\n            url = url.replace(\"{PYODIDE_VERSION}\", PYODIDE_VERSION);\n            try {\n                const response = await fetch(url, { method: \"HEAD\" });\n                if (response.ok) {\n                    pyodideURL = url;\n                    break;\n                }\n            }\n            catch (e) { }\n        }\n        try {\n            await loadScript(pyodideURL);\n        }\n        catch (error) {\n            console.log(error);\n            console.error(\"Can't load pyodide.js\");\n            throw error;\n        }\n        if (self.loadPyodide == null) {\n            console.log(\"self.loadPyodide is null!\");\n            throw new Error(\"Can't load pyodide.js\");\n        }\n        try {\n            // loading with custom repodata.json\n            self.pyodide = await self.loadPyodide({\n                lockFileURL: this.basthonRoot() + \"/repodata.json\",\n            });\n        }\n        catch (error) {\n            console.log(error);\n            console.error(\"Can't load Python from Pyodide\");\n            throw error;\n        }\n        await this._onload();\n    }\n    /**\n     * Execution count getter overload.\n     */\n    get execution_count() {\n        return this.__kernel__.execution_count();\n    }\n    /**\n     * Basthon async code evaluation function.\n     */\n    async _eval(data, code) {\n        const outCallback = (msg) => this.sendStdoutStream(data, msg);\n        const errCallback = (msg) => this.sendStderrStream(data, msg);\n        // dependencies are loaded by eval\n        const proxy = await this.__kernel__.eval(code, outCallback, errCallback, data);\n        // when an error occures, proxy should be the error message\n        if (!(proxy instanceof self.pyodide.ffi.PyProxy))\n            throw proxy;\n        const res = proxy.toJs({\n            create_proxies: false,\n            dict_converter: Object.fromEntries,\n        });\n        proxy.destroy();\n        return res[0];\n    }\n    /**\n     * Special case of starting a legacy kernel.\n     */\n    async legacyStart() {\n        this.__kernel__.start();\n    }\n    /**\n     * Special case of stoping a legacy kernel.\n     */\n    async legacyStop() {\n        this.__kernel__.stop();\n    }\n    /**\n     * Complete a code at the end (usefull for tab completion).\n     *\n     * Returns an array of two elements: the list of completions\n     * and the start index.\n     */\n    async complete(code) {\n        const proxy = this.__kernel__.complete(code);\n        if (!(proxy instanceof self.pyodide.ffi.PyProxy))\n            return proxy;\n        const res = proxy.toJs();\n        proxy.destroy();\n        return res;\n    }\n    /**\n     * Is the source ready to be evaluated or want we more?\n     * Usefull to set ps1/ps2 for teminal prompt.\n     */\n    async more(source) {\n        return this.__kernel__.more(source);\n    }\n    /**\n     * List content of directory (Python's virtual FS).\n     */\n    readdir(path) {\n        return self.pyodide._module.FS.readdir(path);\n    }\n    /**\n     * Change current directory (Python's virtual FS).\n     */\n    chdir(path) {\n        self.pyodide._module.FS.chdir(path);\n    }\n    /**\n     * Create directory (Python's virtual FS).\n     */\n    mkdir(path) {\n        self.pyodide._module.FS.mkdir(path);\n    }\n    /**\n     * Put a file on the local (emulated) filesystem.\n     */\n    async putFile(filename, content) {\n        this.__kernel__.put_file(filename, content);\n    }\n    /**\n     * Get a file content from the VFS.\n     */\n    async getFile(path) {\n        return this.__kernel__.get_file(path).toJs();\n    }\n    /**\n     * Put an importable module on the local (emulated) filesystem\n     * and load dependencies.\n     */\n    async putModule(filename, content) {\n        return await this.__kernel__.put_module(filename, content);\n    }\n    /**\n     * Get a user module file content.\n     */\n    async getUserModuleFile(filename) {\n        return this.__kernel__.get_user_module_file(filename).toJs();\n    }\n    /**\n     * List modules launched via putModule.\n     */\n    async userModules() {\n        const proxy = this.__kernel__.user_modules();\n        if (!(proxy instanceof self.pyodide.ffi.PyProxy))\n            return proxy;\n        const res = proxy.toJs();\n        proxy.destroy();\n        return res;\n    }\n    /**\n     * Display a matplotlib kernel iframe from its html code.\n     */\n    async displayMatplotlibIFrame(iframeHTML) {\n        const port = this.displayKernelIFrame(iframeHTML);\n        port.onmessage = (event) => {\n            console.log(\"Kernel Worker says: 'Message received from iframe: \" +\n                event.data +\n                \"'\");\n            port.postMessage(\"hello from kernel worker\");\n        };\n    }\n}\n","import { expose } from \"@basthon/kernel-base/worker\";\nimport { Python3KernelWorker } from \"./worker\";\nexpose(Python3KernelWorker);\n","var PromiseDelegate = (function () {\r\n    function PromiseDelegate(ignoreMultipleSettles) {\r\n        var _this = this;\r\n        if (ignoreMultipleSettles === void 0) { ignoreMultipleSettles = false; }\r\n        this.ignoreMultipleSettles = ignoreMultipleSettles;\r\n        this.isSettled = false;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolveCallback = resolve;\r\n            _this.rejectCallback = reject;\r\n        });\r\n    }\r\n    PromiseDelegate.prototype.markAsSettled = function () {\r\n        var wasSettled = this.isSettled;\r\n        if (wasSettled && !this.ignoreMultipleSettles) {\r\n            throw new Error(\"PromiseDelegate is already settled!\");\r\n        }\r\n        this.isSettled = true;\r\n        return !wasSettled;\r\n    };\r\n    Object.defineProperty(PromiseDelegate.prototype, \"settled\", {\r\n        get: function () {\r\n            return this.isSettled;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    PromiseDelegate.prototype.resolve = function (value) {\r\n        if (this.markAsSettled()) {\r\n            this.resolveCallback(value);\r\n        }\r\n    };\r\n    PromiseDelegate.prototype.reject = function (reason) {\r\n        if (this.markAsSettled()) {\r\n            this.rejectCallback(reason);\r\n        }\r\n    };\r\n    return PromiseDelegate;\r\n}());\r\nexport { PromiseDelegate };\r\n//# sourceMappingURL=PromiseDelegate.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [900,577], () => (__webpack_require__(6412)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"assets/\" + chunkId + \".\" + {\"396\":\"a864d0dc5998863445a3\",\"450\":\"174a8e21ae2619db936e\",\"477\":\"8de5a5249a40897ea67b\",\"577\":\"5b10c005bcaeaf71279d\",\"858\":\"8de5a5249a40897ea67b\",\"900\":\"857db25ab265fcf5e2aa\",\"955\":\"e3969fbdefa22cd1fb6b\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","__webpack_require__.b = self.location + \"/../../\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t31: 1,\n\t412: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk_basthon_basthon_console\"] = self[\"webpackChunk_basthon_basthon_console\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","leafPrototypes","getProto","next","Python3KernelWorker","constructor","options","super","this","_pyodideURLs","__kernel__","pythonVersion","unshift","basthonRoot","pyodideURLs","language","basthonModulesRoot","_onload","pyodide","self","packages","_api","repodata_packages","p","Object","keys","item","file_name","replace","runPython","loadPackage","pyimport","start","_init","pyodideURL","url","fetch","method","ok","e","error","console","log","loadPyodide","Error","lockFileURL","execution_count","_eval","data","code","proxy","eval","msg","sendStdoutStream","sendStderrStream","ffi","PyProxy","res","toJs","create_proxies","dict_converter","fromEntries","destroy","legacyStart","legacyStop","stop","complete","more","source","readdir","path","_module","FS","chdir","mkdir","putFile","filename","content","put_file","getFile","get_file","putModule","put_module","getUserModuleFile","get_user_module_file","userModules","user_modules","displayMatplotlibIFrame","iframeHTML","port","displayKernelIFrame","onmessage","event","postMessage","PromiseDelegate","ignoreMultipleSettles","_this","isSettled","promise","Promise","resolve","reject","resolveCallback","rejectCallback","prototype","markAsSettled","wasSettled","defineProperty","get","enumerable","configurable","value","reason","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","x","__webpack_exports__","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","every","key","splice","r","getPrototypeOf","obj","t","mode","__esModule","then","ns","create","def","current","indexOf","getOwnPropertyNames","forEach","d","definition","o","f","chunkId","all","reduce","promises","u","miniCssF","g","globalThis","Function","window","prop","hasOwnProperty","Symbol","toStringTag","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","test","b","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","push","bind","moreModules","runtime","pop"],"sourceRoot":""}