{"version":3,"file":"assets/766.2b586c8e6234b2e6028c.js","mappings":"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","sources":["webpack://@basthon/basthon-console/./node_modules/ace-builds/src-noconflict/mode-javascript.js"],"sourcesContent":["ace.define(\"ace/mode/jsdoc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar JsDocCommentHighlightRules = function () {\n    this.$rules = {\n        \"start\": [\n            {\n                token: [\"comment.doc.tag\", \"comment.doc.text\", \"lparen.doc\"],\n                regex: \"(@(?:param|member|typedef|property|namespace|var|const|callback))(\\\\s*)({)\",\n                push: [\n                    {\n                        token: \"lparen.doc\",\n                        regex: \"{\",\n                        push: [\n                            {\n                                include: \"doc-syntax\"\n                            }, {\n                                token: \"rparen.doc\",\n                                regex: \"}|(?=$)\",\n                                next: \"pop\"\n                            }\n                        ]\n                    }, {\n                        token: [\"rparen.doc\", \"text.doc\", \"variable.parameter.doc\", \"lparen.doc\", \"variable.parameter.doc\", \"rparen.doc\"],\n                        regex: /(})(\\s*)(?:([\\w=:\\/\\.]+)|(?:(\\[)([\\w=:\\/\\.\\-\\'\\\" ]+)(\\])))/,\n                        next: \"pop\"\n                    }, {\n                        token: \"rparen.doc\",\n                        regex: \"}|(?=$)\",\n                        next: \"pop\"\n                    }, {\n                        include: \"doc-syntax\"\n                    }, {\n                        defaultToken: \"text.doc\"\n                    }\n                ]\n            }, {\n                token: [\"comment.doc.tag\", \"text.doc\", \"lparen.doc\"],\n                regex: \"(@(?:returns?|yields|type|this|suppress|public|protected|private|package|modifies|\"\n                    + \"implements|external|exception|throws|enum|define|extends))(\\\\s*)({)\",\n                push: [\n                    {\n                        token: \"lparen.doc\",\n                        regex: \"{\",\n                        push: [\n                            {\n                                include: \"doc-syntax\"\n                            }, {\n                                token: \"rparen.doc\",\n                                regex: \"}|(?=$)\",\n                                next: \"pop\"\n                            }\n                        ]\n                    }, {\n                        token: \"rparen.doc\",\n                        regex: \"}|(?=$)\",\n                        next: \"pop\"\n                    }, {\n                        include: \"doc-syntax\"\n                    }, {\n                        defaultToken: \"text.doc\"\n                    }\n                ]\n            }, {\n                token: [\"comment.doc.tag\", \"text.doc\", \"variable.parameter.doc\"],\n                regex: \"(@(?:alias|memberof|instance|module|name|lends|namespace|external|this|template|\"\n                    + \"requires|param|implements|function|extends|typedef|mixes|constructor|var|\"\n                    + \"memberof\\\\!|event|listens|exports|class|constructs|interface|emits|fires|\"\n                    + \"throws|const|callback|borrows|augments))(\\\\s+)(\\\\w[\\\\w#\\.:\\/~\\\"\\\\-]*)?\"\n            }, {\n                token: [\"comment.doc.tag\", \"text.doc\", \"variable.parameter.doc\"],\n                regex: \"(@method)(\\\\s+)(\\\\w[\\\\w\\.\\\\(\\\\)]*)\"\n            }, {\n                token: \"comment.doc.tag\",\n                regex: \"@access\\\\s+(?:private|public|protected)\"\n            }, {\n                token: \"comment.doc.tag\",\n                regex: \"@kind\\\\s+(?:class|constant|event|external|file|function|member|mixin|module|namespace|typedef)\"\n            }, {\n                token: \"comment.doc.tag\",\n                regex: \"@\\\\w+(?=\\\\s|$)\"\n            },\n            JsDocCommentHighlightRules.getTagRule(),\n            {\n                defaultToken: \"comment.doc.body\",\n                caseInsensitive: true\n            }\n        ],\n        \"doc-syntax\": [{\n                token: \"operator.doc\",\n                regex: /[|:]/\n            }, {\n                token: \"paren.doc\",\n                regex: /[\\[\\]]/\n            }]\n    };\n    this.normalizeRules();\n};\noop.inherits(JsDocCommentHighlightRules, TextHighlightRules);\nJsDocCommentHighlightRules.getTagRule = function (start) {\n    return {\n        token: \"comment.doc.tag.storage.type\",\n        regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\nJsDocCommentHighlightRules.getStartRule = function (start) {\n    return {\n        token: \"comment.doc\", // doc comment\n        regex: /\\/\\*\\*(?!\\/)/,\n        next: start\n    };\n};\nJsDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token: \"comment.doc\", // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: start\n    };\n};\nexports.JsDocCommentHighlightRules = JsDocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/javascript_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/jsdoc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar DocCommentHighlightRules = require(\"./jsdoc_comment_highlight_rules\").JsDocCommentHighlightRules;\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\nvar JavaScriptHighlightRules = function (options) {\n    var keywords = {\n        \"variable.language\": \"Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|Proxy|Symbol|\" + // Constructors\n            \"Namespace|QName|XML|XMLList|\" + // E4X\n            \"ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|\" +\n            \"Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|\" +\n            \"Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|\" + // Errors\n            \"SyntaxError|TypeError|URIError|\" +\n            \"decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|\" + // Non-constructor functions\n            \"isNaN|parseFloat|parseInt|\" +\n            \"JSON|Math|\" + // Other\n            \"this|arguments|prototype|window|document\", // Pseudo\n        \"keyword\": \"const|yield|import|get|set|async|await|\" +\n            \"break|case|catch|continue|default|delete|do|else|finally|for|\" +\n            \"if|in|of|instanceof|new|return|switch|throw|try|typeof|let|var|while|with|debugger|\" +\n            \"__parent__|__count__|escape|unescape|with|__proto__|\" +\n            \"class|enum|extends|super|export|implements|private|public|interface|package|protected|static|constructor\",\n        \"storage.type\": \"const|let|var|function\",\n        \"constant.language\": \"null|Infinity|NaN|undefined\",\n        \"support.function\": \"alert\",\n        \"constant.language.boolean\": \"true|false\"\n    };\n    var keywordMapper = this.createKeywordMapper(keywords, \"identifier\");\n    var kwBeforeRe = \"case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void\";\n    var escapedRe = \"\\\\\\\\(?:x[0-9a-fA-F]{2}|\" + // hex\n        \"u[0-9a-fA-F]{4}|\" + // unicode\n        \"u{[0-9a-fA-F]{1,6}}|\" + // es6 unicode\n        \"[0-2][0-7]{0,2}|\" + // oct\n        \"3[0-7][0-7]?|\" + // oct\n        \"[4-7][0-7]?|\" + //oct\n        \".)\";\n    var anonymousFunctionRe = \"(function)(\\\\s*)(\\\\*?)\";\n    var functionCallStartRule = {\n        token: [\"identifier\", \"text\", \"paren.lparen\"],\n        regex: \"(\\\\b(?!\" + Object.values(keywords).join(\"|\") + \"\\\\b)\" + identifierRe + \")(\\\\s*)(\\\\()\"\n    };\n    this.$rules = {\n        \"no_regex\": [\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            comments(\"no_regex\"),\n            functionCallStartRule,\n            {\n                token: \"string\",\n                regex: \"'(?=.)\",\n                next: \"qstring\"\n            }, {\n                token: \"string\",\n                regex: '\"(?=.)',\n                next: \"qqstring\"\n            }, {\n                token: \"constant.numeric\", // hexadecimal, octal and binary\n                regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n            }, {\n                token: \"constant.numeric\", // decimal integers and floats\n                regex: /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n            }, {\n                token: [\n                    \"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\",\n                    \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)\" + anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: [\n                    \"storage.type\", \"text\", \"storage.type\", \"text\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(function)(?:(?:(\\\\s*)(\\\\*)(\\\\s*))|(\\\\s+))(\" + identifierRe + \")(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: [\n                    \"entity.name.function\", \"text\", \"punctuation.operator\",\n                    \"text\", \"storage.type\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(\" + identifierRe + \")(\\\\s*)(:)(\\\\s*)\" + anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: [\n                    \"text\", \"text\", \"storage.type\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(:)(\\\\s*)\" + anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: \"keyword\",\n                regex: \"from(?=\\\\s*('|\\\"))\"\n            }, {\n                token: \"keyword\",\n                regex: \"(?:\" + kwBeforeRe + \")\\\\b\",\n                next: \"start\"\n            }, {\n                token: \"support.constant\",\n                regex: /that\\b/\n            }, {\n                token: [\"storage.type\", \"punctuation.operator\", \"support.function.firebug\"],\n                regex: /(console)(\\.)(warn|info|log|error|debug|time|trace|timeEnd|assert)\\b/\n            }, {\n                token: keywordMapper,\n                regex: identifierRe\n            }, {\n                token: \"punctuation.operator\",\n                regex: /[.](?![.])/,\n                next: \"property\"\n            }, {\n                token: \"storage.type\",\n                regex: /=>/,\n                next: \"start\"\n            }, {\n                token: \"keyword.operator\",\n                regex: /--|\\+\\+|\\.{3}|===|==|=|!=|!==|<+=?|>+=?|!|&&|\\|\\||\\?:|[!$%&*+\\-~\\/^]=?/,\n                next: \"start\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: /[?:,;.]/,\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: /[\\[({]/,\n                next: \"start\"\n            }, {\n                token: \"paren.rparen\",\n                regex: /[\\])}]/\n            }, {\n                token: \"comment\",\n                regex: /^#!.*$/\n            }\n        ],\n        property: [{\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }, {\n                token: \"keyword.operator\",\n                regex: /=/\n            }, {\n                token: [\n                    \"storage.type\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex: anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: [\n                    \"storage.type\", \"text\", \"storage.type\", \"text\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(function)(?:(?:(\\\\s*)(\\\\*)(\\\\s*))|(\\\\s+))(\\\\w+)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: /[.](?![.])/\n            }, {\n                token: \"support.function\",\n                regex: \"prototype\"\n            }, {\n                token: \"support.function\",\n                regex: /(s(?:h(?:ift|ow(?:Mod(?:elessDialog|alDialog)|Help))|croll(?:X|By(?:Pages|Lines)?|Y|To)?|t(?:op|rike)|i(?:n|zeToContent|debar|gnText)|ort|u(?:p|b(?:str(?:ing)?)?)|pli(?:ce|t)|e(?:nd|t(?:Re(?:sizable|questHeader)|M(?:i(?:nutes|lliseconds)|onth)|Seconds|Ho(?:tKeys|urs)|Year|Cursor|Time(?:out)?|Interval|ZOptions|Date|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(?:ome|andleEvent)|navigate|c(?:har(?:CodeAt|At)|o(?:s|n(?:cat|textual|firm)|mpile)|eil|lear(?:Timeout|Interval)?|a(?:ptureEvents|ll)|reate(?:StyleSheet|Popup|EventObject))|t(?:o(?:GMTString|S(?:tring|ource)|U(?:TCString|pperCase)|Lo(?:caleString|werCase))|est|a(?:n|int(?:Enabled)?))|i(?:s(?:NaN|Finite)|ndexOf|talics)|d(?:isableExternalCapture|ump|etachEvent)|u(?:n(?:shift|taint|escape|watch)|pdateCommands)|j(?:oin|avaEnabled)|p(?:o(?:p|w)|ush|lugins.refresh|a(?:ddings|rse(?:Int|Float)?)|r(?:int|ompt|eference))|e(?:scape|nableExternalCapture|val|lementFromPoint|x(?:p|ec(?:Script|Command)?))|valueOf|UTC|queryCommand(?:State|Indeterm|Enabled|Value)|f(?:i(?:nd|lter|le(?:ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(?:nt(?:size|color)|rward|rEach)|loor|romCharCode)|watch|l(?:ink|o(?:ad|g)|astIndexOf)|a(?:sin|nchor|cos|t(?:tachEvent|ob|an(?:2)?)|pply|lert|b(?:s|ort))|r(?:ou(?:nd|teEvents)|e(?:size(?:By|To)|calc|turnValue|place|verse|l(?:oad|ease(?:Capture|Events)))|andom)|g(?:o|et(?:ResponseHeader|M(?:i(?:nutes|lliseconds)|onth)|Se(?:conds|lection)|Hours|Year|Time(?:zoneOffset)?|Da(?:y|te)|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Da(?:y|te)|FullYear)|FullYear|A(?:ttention|llResponseHeaders)))|m(?:in|ove(?:B(?:y|elow)|To(?:Absolute)?|Above)|ergeAttributes|a(?:tch|rgins|x))|b(?:toa|ig|o(?:ld|rderWidths)|link|ack))\\b(?=\\()/\n            }, {\n                token: \"support.function.dom\",\n                regex: /(s(?:ub(?:stringData|mit)|plitText|e(?:t(?:NamedItem|Attribute(?:Node)?)|lect))|has(?:ChildNodes|Feature)|namedItem|c(?:l(?:ick|o(?:se|neNode))|reate(?:C(?:omment|DATASection|aption)|T(?:Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(?:ntityReference|lement)|Attribute))|tabIndex|i(?:nsert(?:Row|Before|Cell|Data)|tem)|open|delete(?:Row|C(?:ell|aption)|T(?:Head|Foot)|Data)|focus|write(?:ln)?|a(?:dd|ppend(?:Child|Data))|re(?:set|place(?:Child|Data)|move(?:NamedItem|Child|Attribute(?:Node)?)?)|get(?:NamedItem|Element(?:sBy(?:Name|TagName|ClassName)|ById)|Attribute(?:Node)?)|blur)\\b(?=\\()/\n            }, {\n                token: \"support.constant\",\n                regex: /(s(?:ystemLanguage|cr(?:ipts|ollbars|een(?:X|Y|Top|Left))|t(?:yle(?:Sheets)?|atus(?:Text|bar)?)|ibling(?:Below|Above)|ource|uffixes|e(?:curity(?:Policy)?|l(?:ection|f)))|h(?:istory|ost(?:name)?|as(?:h|Focus))|y|X(?:MLDocument|SLDocument)|n(?:ext|ame(?:space(?:s|URI)|Prop))|M(?:IN_VALUE|AX_VALUE)|c(?:haracterSet|o(?:n(?:structor|trollers)|okieEnabled|lorDepth|mp(?:onents|lete))|urrent|puClass|l(?:i(?:p(?:boardData)?|entInformation)|osed|asses)|alle(?:e|r)|rypto)|t(?:o(?:olbar|p)|ext(?:Transform|Indent|Decoration|Align)|ags)|SQRT(?:1_2|2)|i(?:n(?:ner(?:Height|Width)|put)|ds|gnoreCase)|zIndex|o(?:scpu|n(?:readystatechange|Line)|uter(?:Height|Width)|p(?:sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(?:i(?:splay|alog(?:Height|Top|Width|Left|Arguments)|rectories)|e(?:scription|fault(?:Status|Ch(?:ecked|arset)|View)))|u(?:ser(?:Profile|Language|Agent)|n(?:iqueID|defined)|pdateInterval)|_content|p(?:ixelDepth|ort|ersonalbar|kcs11|l(?:ugins|atform)|a(?:thname|dding(?:Right|Bottom|Top|Left)|rent(?:Window|Layer)?|ge(?:X(?:Offset)?|Y(?:Offset)?))|r(?:o(?:to(?:col|type)|duct(?:Sub)?|mpter)|e(?:vious|fix)))|e(?:n(?:coding|abledPlugin)|x(?:ternal|pando)|mbeds)|v(?:isibility|endor(?:Sub)?|Linkcolor)|URLUnencoded|P(?:I|OSITIVE_INFINITY)|f(?:ilename|o(?:nt(?:Size|Family|Weight)|rmName)|rame(?:s|Element)|gColor)|E|whiteSpace|l(?:i(?:stStyleType|n(?:eHeight|kColor))|o(?:ca(?:tion(?:bar)?|lName)|wsrc)|e(?:ngth|ft(?:Context)?)|a(?:st(?:M(?:odified|atch)|Index|Paren)|yer(?:s|X)|nguage))|a(?:pp(?:MinorVersion|Name|Co(?:deName|re)|Version)|vail(?:Height|Top|Width|Left)|ll|r(?:ity|guments)|Linkcolor|bove)|r(?:ight(?:Context)?|e(?:sponse(?:XML|Text)|adyState))|global|x|m(?:imeTypes|ultiline|enubar|argin(?:Right|Bottom|Top|Left))|L(?:N(?:10|2)|OG(?:10E|2E))|b(?:o(?:ttom|rder(?:Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(?:Color|Image)))\\b/\n            }, {\n                token: \"identifier\",\n                regex: identifierRe\n            }, {\n                regex: \"\",\n                token: \"empty\",\n                next: \"no_regex\"\n            }\n        ],\n        \"start\": [\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            comments(\"start\"),\n            {\n                token: \"string.regexp\",\n                regex: \"\\\\/\",\n                next: \"regex\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+|^$\",\n                next: \"start\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"regex\": [\n            {\n                token: \"regexp.keyword.operator\",\n                regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n            }, {\n                token: \"string.regexp\",\n                regex: \"/[sxngimy]*\",\n                next: \"no_regex\"\n            }, {\n                token: \"invalid\",\n                regex: /\\{\\d+\\b,?\\d*\\}[+*]|[+*$^?][+*]|[$^][?]|\\?{3,}/\n            }, {\n                token: \"constant.language.escape\",\n                regex: /\\(\\?[:=!]|\\)|\\{\\d+\\b,?\\d*\\}|[+*]\\?|[()$^+*?.]/\n            }, {\n                token: \"constant.language.delimiter\",\n                regex: /\\|/\n            }, {\n                token: \"constant.language.escape\",\n                regex: /\\[\\^?/,\n                next: \"regex_character_class\"\n            }, {\n                token: \"empty\",\n                regex: \"$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string.regexp\"\n            }\n        ],\n        \"regex_character_class\": [\n            {\n                token: \"regexp.charclass.keyword.operator\",\n                regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n            }, {\n                token: \"constant.language.escape\",\n                regex: \"]\",\n                next: \"regex\"\n            }, {\n                token: \"constant.language.escape\",\n                regex: \"-\"\n            }, {\n                token: \"empty\",\n                regex: \"$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string.regexp.charachterclass\"\n            }\n        ],\n        \"default_parameter\": [\n            {\n                token: \"string\",\n                regex: \"'(?=.)\",\n                push: [\n                    {\n                        token: \"string\",\n                        regex: \"'|$\",\n                        next: \"pop\"\n                    }, {\n                        include: \"qstring\"\n                    }\n                ]\n            }, {\n                token: \"string\",\n                regex: '\"(?=.)',\n                push: [\n                    {\n                        token: \"string\",\n                        regex: '\"|$',\n                        next: \"pop\"\n                    }, {\n                        include: \"qqstring\"\n                    }\n                ]\n            }, {\n                token: \"constant.language\",\n                regex: \"null|Infinity|NaN|undefined\"\n            }, {\n                token: \"constant.numeric\", // hexadecimal, octal and binary\n                regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n            }, {\n                token: \"constant.numeric\", // decimal integers and floats\n                regex: /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n            }, {\n                token: \"punctuation.operator\",\n                regex: \",\",\n                next: \"function_arguments\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"$\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"function_arguments\": [\n            comments(\"function_arguments\"),\n            {\n                token: \"variable.parameter\",\n                regex: identifierRe\n            }, {\n                token: \"punctuation.operator\",\n                regex: \",\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"$\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"qqstring\": [\n            {\n                token: \"constant.language.escape\",\n                regex: escapedRe\n            }, {\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                consumeLineEnd: true\n            }, {\n                token: \"string\",\n                regex: '\"|$',\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ],\n        \"qstring\": [\n            {\n                token: \"constant.language.escape\",\n                regex: escapedRe\n            }, {\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                consumeLineEnd: true\n            }, {\n                token: \"string\",\n                regex: \"'|$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ]\n    };\n    if (!options || !options.noES6) {\n        this.$rules.no_regex.unshift({\n            regex: \"[{}]\", onMatch: function (val, state, stack) {\n                this.next = val == \"{\" ? this.nextState : \"\";\n                if (val == \"{\" && stack.length) {\n                    stack.unshift(\"start\", state);\n                }\n                else if (val == \"}\" && stack.length) {\n                    stack.shift();\n                    this.next = stack.shift();\n                    if (this.next.indexOf(\"string\") != -1 || this.next.indexOf(\"jsx\") != -1)\n                        return \"paren.quasi.end\";\n                }\n                return val == \"{\" ? \"paren.lparen\" : \"paren.rparen\";\n            },\n            nextState: \"start\"\n        }, {\n            token: \"string.quasi.start\",\n            regex: /`/,\n            push: [{\n                    token: \"constant.language.escape\",\n                    regex: escapedRe\n                }, {\n                    token: \"paren.quasi.start\",\n                    regex: /\\${/,\n                    push: \"start\"\n                }, {\n                    token: \"string.quasi.end\",\n                    regex: /`/,\n                    next: \"pop\"\n                }, {\n                    defaultToken: \"string.quasi\"\n                }]\n        }, {\n            token: [\"variable.parameter\", \"text\"],\n            regex: \"(\" + identifierRe + \")(\\\\s*)(?=\\\\=>)\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"(\\\\()(?=[^\\\\(]+\\\\s*=>)\",\n            next: \"function_arguments\"\n        }, {\n            token: \"variable.language\",\n            regex: \"(?:(?:(?:Weak)?(?:Set|Map))|Promise)\\\\b\"\n        });\n        this.$rules[\"function_arguments\"].unshift({\n            token: \"keyword.operator\",\n            regex: \"=\",\n            next: \"default_parameter\"\n        }, {\n            token: \"keyword.operator\",\n            regex: \"\\\\.{3}\"\n        });\n        this.$rules[\"property\"].unshift({\n            token: \"support.function\",\n            regex: \"(findIndex|repeat|startsWith|endsWith|includes|isSafeInteger|trunc|cbrt|log2|log10|sign|then|catch|\"\n                + \"finally|resolve|reject|race|any|all|allSettled|keys|entries|isInteger)\\\\b(?=\\\\()\"\n        }, {\n            token: \"constant.language\",\n            regex: \"(?:MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|EPSILON)\\\\b\"\n        });\n        if (!options || options.jsx != false)\n            JSX.call(this);\n    }\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"no_regex\")]);\n    this.normalizeRules();\n};\noop.inherits(JavaScriptHighlightRules, TextHighlightRules);\nfunction JSX() {\n    var tagRegex = identifierRe.replace(\"\\\\d\", \"\\\\d\\\\-\");\n    var jsxTag = {\n        onMatch: function (val, state, stack) {\n            var offset = val.charAt(1) == \"/\" ? 2 : 1;\n            if (offset == 1) {\n                if (state != this.nextState)\n                    stack.unshift(this.next, this.nextState, 0);\n                else\n                    stack.unshift(this.next);\n                stack[2]++;\n            }\n            else if (offset == 2) {\n                if (state == this.nextState) {\n                    stack[1]--;\n                    if (!stack[1] || stack[1] < 0) {\n                        stack.shift();\n                        stack.shift();\n                    }\n                }\n            }\n            return [{\n                    type: \"meta.tag.punctuation.\" + (offset == 1 ? \"\" : \"end-\") + \"tag-open.xml\",\n                    value: val.slice(0, offset)\n                }, {\n                    type: \"meta.tag.tag-name.xml\",\n                    value: val.substr(offset)\n                }];\n        },\n        regex: \"</?(?:\" + tagRegex + \"|(?=>))\",\n        next: \"jsxAttributes\",\n        nextState: \"jsx\"\n    };\n    this.$rules.start.unshift(jsxTag);\n    var jsxJsRule = {\n        regex: \"{\",\n        token: \"paren.quasi.start\",\n        push: \"start\"\n    };\n    this.$rules.jsx = [\n        jsxJsRule,\n        jsxTag,\n        { include: \"reference\" }, { defaultToken: \"string.xml\" }\n    ];\n    this.$rules.jsxAttributes = [{\n            token: \"meta.tag.punctuation.tag-close.xml\",\n            regex: \"/?>\",\n            onMatch: function (value, currentState, stack) {\n                if (currentState == stack[0])\n                    stack.shift();\n                if (value.length == 2) {\n                    if (stack[0] == this.nextState)\n                        stack[1]--;\n                    if (!stack[1] || stack[1] < 0) {\n                        stack.splice(0, 2);\n                    }\n                }\n                this.next = stack[0] || \"start\";\n                return [{ type: this.token, value: value }];\n            },\n            nextState: \"jsx\"\n        },\n        jsxJsRule,\n        comments(\"jsxAttributes\"),\n        {\n            token: \"entity.other.attribute-name.xml\",\n            regex: tagRegex\n        }, {\n            token: \"keyword.operator.attribute-equals.xml\",\n            regex: \"=\"\n        }, {\n            token: \"text.tag-whitespace.xml\",\n            regex: \"\\\\s+\"\n        }, {\n            token: \"string.attribute-value.xml\",\n            regex: \"'\",\n            stateName: \"jsx_attr_q\",\n            push: [\n                { token: \"string.attribute-value.xml\", regex: \"'\", next: \"pop\" },\n                { include: \"reference\" },\n                { defaultToken: \"string.attribute-value.xml\" }\n            ]\n        }, {\n            token: \"string.attribute-value.xml\",\n            regex: '\"',\n            stateName: \"jsx_attr_qq\",\n            push: [\n                { token: \"string.attribute-value.xml\", regex: '\"', next: \"pop\" },\n                { include: \"reference\" },\n                { defaultToken: \"string.attribute-value.xml\" }\n            ]\n        },\n        jsxTag\n    ];\n    this.$rules.reference = [{\n            token: \"constant.language.escape.reference.xml\",\n            regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n        }];\n}\nfunction comments(next) {\n    return [\n        {\n            token: \"comment\", // multi line comment\n            regex: /\\/\\*/,\n            next: [\n                DocCommentHighlightRules.getTagRule(),\n                { token: \"comment\", regex: \"\\\\*\\\\/\", next: next || \"pop\" },\n                { defaultToken: \"comment\", caseInsensitive: true }\n            ]\n        }, {\n            token: \"comment\",\n            regex: \"\\\\/\\\\/\",\n            next: [\n                DocCommentHighlightRules.getTagRule(),\n                { token: \"comment\", regex: \"$|^\", next: next || \"pop\" },\n                { defaultToken: \"comment\", caseInsensitive: true }\n            ]\n        }\n    ];\n}\nexports.JavaScriptHighlightRules = JavaScriptHighlightRules;\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar Range = require(\"../range\").Range;\nvar MatchingBraceOutdent = function () { };\n(function () {\n    this.checkOutdent = function (line, input) {\n        if (!/^\\s+$/.test(line))\n            return false;\n        return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n        if (!match)\n            return 0;\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({ row: row, column: column });\n        if (!openBracePos || openBracePos.row == row)\n            return 0;\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n        return line.match(/^\\s*/)[0];\n    };\n}).call(MatchingBraceOutdent.prototype);\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n\n});\n\nace.define(\"ace/mode/behaviour/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/behaviour\",\"ace/token_iterator\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Behaviour = require(\"../behaviour\").Behaviour;\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\nfunction is(token, type) {\n    return token && token.type.lastIndexOf(type + \".xml\") > -1;\n}\nvar XmlBehaviour = function () {\n    this.add(\"string_dquotes\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == '\"' || text == \"'\") {\n            var quote = text;\n            var selected = session.doc.getTextRange(editor.getSelectionRange());\n            if (selected !== \"\" && selected !== \"'\" && selected != '\"' && editor.getWrapBehavioursEnabled()) {\n                return {\n                    text: quote + selected + quote,\n                    selection: false\n                };\n            }\n            var cursor = editor.getCursorPosition();\n            var line = session.doc.getLine(cursor.row);\n            var rightChar = line.substring(cursor.column, cursor.column + 1);\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n            if (rightChar == quote && (is(token, \"attribute-value\") || is(token, \"string\"))) {\n                return {\n                    text: \"\",\n                    selection: [1, 1]\n                };\n            }\n            if (!token)\n                token = iterator.stepBackward();\n            if (!token)\n                return;\n            while (is(token, \"tag-whitespace\") || is(token, \"whitespace\")) {\n                token = iterator.stepBackward();\n            }\n            var rightSpace = !rightChar || rightChar.match(/\\s/);\n            if (is(token, \"attribute-equals\") && (rightSpace || rightChar == '>') || (is(token, \"decl-attribute-equals\") && (rightSpace || rightChar == '?'))) {\n                return {\n                    text: quote + quote,\n                    selection: [1, 1]\n                };\n            }\n        }\n    });\n    this.add(\"string_dquotes\", \"deletion\", function (state, action, editor, session, range) {\n        var selected = session.doc.getTextRange(range);\n        if (!range.isMultiLine() && (selected == '\"' || selected == \"'\")) {\n            var line = session.doc.getLine(range.start.row);\n            var rightChar = line.substring(range.start.column + 1, range.start.column + 2);\n            if (rightChar == selected) {\n                range.end.column++;\n                return range;\n            }\n        }\n    });\n    this.add(\"autoclosing\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == '>') {\n            var position = editor.getSelectionRange().start;\n            var iterator = new TokenIterator(session, position.row, position.column);\n            var token = iterator.getCurrentToken() || iterator.stepBackward();\n            if (!token || !(is(token, \"tag-name\") || is(token, \"tag-whitespace\") || is(token, \"attribute-name\") || is(token, \"attribute-equals\") || is(token, \"attribute-value\")))\n                return;\n            if (is(token, \"reference.attribute-value\"))\n                return;\n            if (is(token, \"attribute-value\")) {\n                var tokenEndColumn = iterator.getCurrentTokenColumn() + token.value.length;\n                if (position.column < tokenEndColumn)\n                    return;\n                if (position.column == tokenEndColumn) {\n                    var nextToken = iterator.stepForward();\n                    if (nextToken && is(nextToken, \"attribute-value\"))\n                        return;\n                    iterator.stepBackward();\n                }\n            }\n            if (/^\\s*>/.test(session.getLine(position.row).slice(position.column)))\n                return;\n            while (!is(token, \"tag-name\")) {\n                token = iterator.stepBackward();\n                if (token.value == \"<\") {\n                    token = iterator.stepForward();\n                    break;\n                }\n            }\n            var tokenRow = iterator.getCurrentTokenRow();\n            var tokenColumn = iterator.getCurrentTokenColumn();\n            if (is(iterator.stepBackward(), \"end-tag-open\"))\n                return;\n            var element = token.value;\n            if (tokenRow == position.row)\n                element = element.substring(0, position.column - tokenColumn);\n            if (this.voidElements && this.voidElements.hasOwnProperty(element.toLowerCase()))\n                return;\n            return {\n                text: \">\" + \"</\" + element + \">\",\n                selection: [1, 1]\n            };\n        }\n    });\n    this.add(\"autoindent\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == \"\\n\") {\n            var cursor = editor.getCursorPosition();\n            var line = session.getLine(cursor.row);\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n            if (is(token, \"\") && token.type.indexOf(\"tag-close\") !== -1) {\n                if (token.value == \"/>\")\n                    return;\n                while (token && token.type.indexOf(\"tag-name\") === -1) {\n                    token = iterator.stepBackward();\n                }\n                if (!token) {\n                    return;\n                }\n                var tag = token.value;\n                var row = iterator.getCurrentTokenRow();\n                token = iterator.stepBackward();\n                if (!token || token.type.indexOf(\"end-tag\") !== -1) {\n                    return;\n                }\n                if (this.voidElements && !this.voidElements[tag] || !this.voidElements) {\n                    var nextToken = session.getTokenAt(cursor.row, cursor.column + 1);\n                    var line = session.getLine(row);\n                    var nextIndent = this.$getIndent(line);\n                    var indent = nextIndent + session.getTabString();\n                    if (nextToken && nextToken.value === \"</\") {\n                        return {\n                            text: \"\\n\" + indent + \"\\n\" + nextIndent,\n                            selection: [1, indent.length, 1, indent.length]\n                        };\n                    }\n                    else {\n                        return {\n                            text: \"\\n\" + indent\n                        };\n                    }\n                }\n            }\n        }\n    });\n};\noop.inherits(XmlBehaviour, Behaviour);\nexports.XmlBehaviour = XmlBehaviour;\n\n});\n\nace.define(\"ace/mode/behaviour/javascript\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/token_iterator\",\"ace/mode/behaviour/cstyle\",\"ace/mode/behaviour/xml\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\nvar CstyleBehaviour = require(\"../behaviour/cstyle\").CstyleBehaviour;\nvar XmlBehaviour = require(\"../behaviour/xml\").XmlBehaviour;\nvar JavaScriptBehaviour = function () {\n    var xmlBehaviours = new XmlBehaviour({ closeCurlyBraces: true }).getBehaviours();\n    this.addBehaviours(xmlBehaviours);\n    this.inherit(CstyleBehaviour);\n    this.add(\"autoclosing-fragment\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == '>') {\n            var position = editor.getSelectionRange().start;\n            var iterator = new TokenIterator(session, position.row, position.column);\n            var token = iterator.getCurrentToken() || iterator.stepBackward();\n            if (!token)\n                return;\n            if (token.value == '<') {\n                return {\n                    text: \"></>\",\n                    selection: [1, 1]\n                };\n            }\n        }\n    });\n};\noop.inherits(JavaScriptBehaviour, CstyleBehaviour);\nexports.JavaScriptBehaviour = JavaScriptBehaviour;\n\n});\n\nace.define(\"ace/mode/folding/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (voidElements, optionalEndTags) {\n    BaseFoldMode.call(this);\n    this.voidElements = voidElements || {};\n    this.optionalEndTags = oop.mixin({}, this.voidElements);\n    if (optionalEndTags)\n        oop.mixin(this.optionalEndTags, optionalEndTags);\n};\noop.inherits(FoldMode, BaseFoldMode);\nvar Tag = function () {\n    this.tagName = \"\";\n    this.closing = false;\n    this.selfClosing = false;\n    this.start = { row: 0, column: 0 };\n    this.end = { row: 0, column: 0 };\n};\nfunction is(token, type) {\n    return token.type.lastIndexOf(type + \".xml\") > -1;\n}\n(function () {\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var tag = this._getFirstTagInLine(session, row);\n        if (!tag)\n            return this.getCommentFoldWidget(session, row);\n        if (tag.closing || (!tag.tagName && tag.selfClosing))\n            return foldStyle === \"markbeginend\" ? \"end\" : \"\";\n        if (!tag.tagName || tag.selfClosing || this.voidElements.hasOwnProperty(tag.tagName.toLowerCase()))\n            return \"\";\n        if (this._findEndTagInLine(session, row, tag.tagName, tag.end.column))\n            return \"\";\n        return \"start\";\n    };\n    this.getCommentFoldWidget = function (session, row) {\n        if (/comment/.test(session.getState(row)) && /<!-/.test(session.getLine(row)))\n            return \"start\";\n        return \"\";\n    };\n    this._getFirstTagInLine = function (session, row) {\n        var tokens = session.getTokens(row);\n        var tag = new Tag();\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (is(token, \"tag-open\")) {\n                tag.end.column = tag.start.column + token.value.length;\n                tag.closing = is(token, \"end-tag-open\");\n                token = tokens[++i];\n                if (!token)\n                    return null;\n                tag.tagName = token.value;\n                if (token.value === \"\") { //skip empty tag name token for fragment\n                    token = tokens[++i];\n                    if (!token)\n                        return null;\n                    tag.tagName = token.value;\n                }\n                tag.end.column += token.value.length;\n                for (i++; i < tokens.length; i++) {\n                    token = tokens[i];\n                    tag.end.column += token.value.length;\n                    if (is(token, \"tag-close\")) {\n                        tag.selfClosing = token.value == '/>';\n                        break;\n                    }\n                }\n                return tag;\n            }\n            else if (is(token, \"tag-close\")) {\n                tag.selfClosing = token.value == '/>';\n                return tag;\n            }\n            tag.start.column += token.value.length;\n        }\n        return null;\n    };\n    this._findEndTagInLine = function (session, row, tagName, startColumn) {\n        var tokens = session.getTokens(row);\n        var column = 0;\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            column += token.value.length;\n            if (column < startColumn - 1)\n                continue;\n            if (is(token, \"end-tag-open\")) {\n                token = tokens[i + 1];\n                if (is(token, \"tag-name\") && token.value === \"\") {\n                    token = tokens[i + 2];\n                }\n                if (token && token.value == tagName)\n                    return true;\n            }\n        }\n        return false;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var firstTag = this._getFirstTagInLine(session, row);\n        if (!firstTag) {\n            return this.getCommentFoldWidget(session, row) && session.getCommentFoldRange(row, session.getLine(row).length);\n        }\n        var tags = session.getMatchingTags({ row: row, column: 0 });\n        if (tags) {\n            return new Range(tags.openTag.end.row, tags.openTag.end.column, tags.closeTag.start.row, tags.closeTag.start.column);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/folding/javascript\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/xml\",\"ace/mode/folding/cstyle\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar XmlFoldMode = require(\"./xml\").FoldMode;\nvar CFoldMode = require(\"./cstyle\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n    this.xmlFoldMode = new XmlFoldMode();\n};\noop.inherits(FoldMode, CFoldMode);\n(function () {\n    this.getFoldWidgetRangeBase = this.getFoldWidgetRange;\n    this.getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var fw = this.getFoldWidgetBase(session, foldStyle, row);\n        if (!fw) {\n            return this.xmlFoldMode.getFoldWidget(session, foldStyle, row);\n        }\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var range = this.getFoldWidgetRangeBase(session, foldStyle, row, forceMultiline);\n        if (range)\n            return range;\n        return this.xmlFoldMode.getFoldWidgetRange(session, foldStyle, row);\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/javascript\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/javascript_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/worker/worker_client\",\"ace/mode/behaviour/javascript\",\"ace/mode/folding/javascript\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar JavaScriptHighlightRules = require(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\nvar JavaScriptBehaviour = require(\"./behaviour/javascript\").JavaScriptBehaviour;\nvar JavaScriptFoldMode = require(\"./folding/javascript\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = JavaScriptHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new JavaScriptBehaviour();\n    this.foldingRules = new JavaScriptFoldMode();\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = { start: \"/*\", end: \"*/\" };\n    this.$quotes = { '\"': '\"', \"'\": \"'\", \"`\": \"`\" };\n    this.$pairQuotesAfter = {\n        \"`\": /\\w/\n    };\n    this.getNextLineIndent = function (state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n        if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n            return indent;\n        }\n        if (state == \"start\" || state == \"no_regex\") {\n            var match = line.match(/^.*(?:\\bcase\\b.*:|[\\{\\(\\[])\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n        else if (state == \"doc-start\") {\n            if (endState == \"start\" || endState == \"no_regex\") {\n                return \"\";\n            }\n        }\n        return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    this.createWorker = function (session) {\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/javascript_worker\", \"JavaScriptWorker\");\n        worker.attachToDocument(session.getDocument());\n        worker.on(\"annotate\", function (results) {\n            session.setAnnotations(results.data);\n        });\n        worker.on(\"terminate\", function () {\n            session.clearAnnotations();\n        });\n        return worker;\n    };\n    this.$id = \"ace/mode/javascript\";\n    this.snippetFileId = \"ace/snippets/javascript\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/javascript\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"names":["ace","define","require","exports","module","oop","TextHighlightRules","JsDocCommentHighlightRules","this","$rules","token","regex","push","include","next","defaultToken","getTagRule","caseInsensitive","normalizeRules","inherits","start","getStartRule","getEndRule","DocCommentHighlightRules","identifierRe","JavaScriptHighlightRules","options","keywords","keywordMapper","createKeywordMapper","escapedRe","anonymousFunctionRe","functionCallStartRule","Object","values","join","comments","property","consumeLineEnd","noES6","no_regex","unshift","onMatch","val","state","stack","nextState","length","shift","indexOf","jsx","JSX","call","embedRules","tagRegex","replace","jsxTag","offset","charAt","type","value","slice","substr","jsxJsRule","jsxAttributes","currentState","splice","stateName","reference","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","match","getLine","column","openBracePos","findMatchingBracket","indent","$getIndent","prototype","Behaviour","TokenIterator","is","lastIndexOf","XmlBehaviour","add","action","editor","session","text","quote","selected","getTextRange","getSelectionRange","getWrapBehavioursEnabled","selection","cursor","getCursorPosition","rightChar","substring","iterator","getCurrentToken","stepBackward","rightSpace","range","isMultiLine","end","position","tokenEndColumn","getCurrentTokenColumn","nextToken","stepForward","tokenRow","getCurrentTokenRow","tokenColumn","element","voidElements","hasOwnProperty","toLowerCase","tag","getTokenAt","nextIndent","getTabString","CstyleBehaviour","JavaScriptBehaviour","xmlBehaviours","closeCurlyBraces","getBehaviours","addBehaviours","inherit","BaseFoldMode","FoldMode","optionalEndTags","mixin","Tag","tagName","closing","selfClosing","getFoldWidget","foldStyle","_getFirstTagInLine","_findEndTagInLine","getCommentFoldWidget","getState","tokens","getTokens","i","startColumn","getFoldWidgetRange","getCommentFoldRange","tags","getMatchingTags","openTag","closeTag","commentRegex","foldingStartMarker","RegExp","source","foldingStopMarker","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","fw","forceMultiline","getCommentRegionBlock","index","openingBracketBlock","getSectionRange","closingBracketBlock","startIndent","search","startRow","endRow","maxRow","getLength","subRange","re","depth","m","exec","XmlFoldMode","CFoldMode","xmlFoldMode","getFoldWidgetRangeBase","getFoldWidgetBase","TextMode","Mode","WorkerClient","JavaScriptFoldMode","HighlightRules","$outdent","$behaviour","foldingRules","lineCommentStart","blockComment","$quotes","$pairQuotesAfter","getNextLineIndent","tab","tokenizedLine","getTokenizer","getLineTokens","endState","createWorker","worker","attachToDocument","getDocument","on","results","setAnnotations","data","clearAnnotations","$id","snippetFileId"],"sourceRoot":""}