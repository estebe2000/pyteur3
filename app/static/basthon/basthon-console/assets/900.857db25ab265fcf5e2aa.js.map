{"version":3,"file":"assets/900.857db25ab265fcf5e2aa.js","mappings":"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","sources":["webpack://@basthon/basthon-console/./node_modules/@basthon/kernel-base/lib/kernel.js","webpack://@basthon/basthon-console/./node_modules/@basthon/kernel-base/lib/version.js","webpack://@basthon/basthon-console/./node_modules/comlink/dist/esm/comlink.mjs"],"sourcesContent":["import { PromiseDelegate } from \"promise-delegate\";\nimport { VERSION } from \"./version\";\nimport { NotImplementedError } from \"./commons\";\n/**\n * Event for Basthon's dispatch/listen.\n */\nclass BasthonEvent extends Event {\n    constructor(id, data) {\n        super(id);\n        this.detail = data;\n    }\n}\nexport { VERSION };\n/**\n * API that any Basthon kernel should fill to be supported\n * in console/notebook.\n */\nexport class KernelBase {\n    constructor(options) {\n        this._isReady = false;\n        this._ready = new PromiseDelegate();\n        this._stopped = Promise.resolve();\n        this._execution_count = 0;\n        this._pendingInput = undefined;\n        // a map to register wrapped listeners to allow later remove\n        this._listeners = new Map();\n        this._files = new Map();\n        this._modules = new Map();\n        this._options = this.clone(options);\n        // root path where kernel is installed\n        this._rootPath = options.rootPath;\n    }\n    /**\n     * Is this kernel safe? (loaded from an isolated web worker)\n     */\n    safeKernel() {\n        return false;\n    }\n    /**\n     * Kernel version number (string).\n     */\n    version() {\n        return VERSION;\n    }\n    /**\n     * Language implemented in the kernel (string).\n     * Generally lower case.\n     */\n    language() {\n        throw new NotImplementedError(\"language\");\n    }\n    /**\n     * Language name implemented in the kernel (string).\n     * As it should be displayed in text.\n     */\n    languageName() {\n        throw new NotImplementedError(\"languageName\");\n    }\n    /**\n     * Script (module) file extensions\n     */\n    moduleExts() {\n        throw new NotImplementedError(\"moduleExts\");\n    }\n    /**\n     * Execution count getter.\n     */\n    get execution_count() {\n        return this._execution_count;\n    }\n    /**\n     * Async code evaluation that resolves with the result.\n     */\n    evalAsync(code, outCallback, errCallback, data = null) {\n        throw new NotImplementedError(\"evalAsync\");\n    }\n    async putFile(filename, content) {\n        this._files.set(filename, content);\n    }\n    async putModule(filename, content) {\n        this._modules.set(filename, content);\n    }\n    async userModules() {\n        return [];\n    }\n    /**\n     * Get a file content from the VFS.\n     */\n    async getFile(path) {\n        throw new NotImplementedError(\"getFile\");\n    }\n    /**\n     * Get a user module file content.\n     */\n    async getUserModuleFile(filename) {\n        throw new NotImplementedError(\"getUserModuleFile\");\n    }\n    async more(source) {\n        throw new NotImplementedError(\"more\");\n    }\n    async complete(code) {\n        return [];\n    }\n    banner() {\n        return `Welcome to the ${this.languageName()} REPL!`;\n    }\n    ps1() {\n        return \">>> \";\n    }\n    ps2() {\n        return \"... \";\n    }\n    /**\n     * Launch the kernel (used to wrap a promise around init).\n     */\n    async _init() { }\n    /**\n     * Initialize the kernel and start it.\n     */\n    async init() {\n        if (!this.safeKernel())\n            console.warn(`%c⚠ DANGER ⚠: this kernel is not safe!` +\n                \" Please consider using a safe kernel.\", \"color: red; font-size: 20px;\");\n        try {\n            await this._init();\n        }\n        catch (error) {\n            this._ready.reject(error);\n            throw error;\n        }\n        // connecting eval to basthon.eval.request event.\n        this.addEventListener(\"eval.request\", this.evalFromEvent.bind(this));\n        await this.start();\n    }\n    /**\n     * Start the kernel (used to wrap a promise around start).\n     */\n    async _start() { }\n    /**\n     * Start the kernel.\n     */\n    async start() {\n        await this._stopped;\n        this._execution_count = 0;\n        try {\n            await this._start();\n        }\n        catch (error) {\n            this._ready.reject(error);\n            throw error;\n        }\n        this._files.forEach((v, k) => this.putFile(k, v));\n        this._modules.forEach((v, k) => this.putModule(k, v));\n        this._isReady = true;\n        this._ready.resolve();\n    }\n    /**\n     * Perform async part of the stoping process.\n     */\n    async _stop() { }\n    /**\n     * Stop the kernel synchronously (to ensure kernel is stopped after the call).\n     */\n    stop() {\n        this._isReady = false;\n        this._ready = new PromiseDelegate();\n        this._stopped = this._stop();\n    }\n    /**\n     * Restart the kernel (stop and start).\n     * Use await this.ready() to ensure kernel is started\n     */\n    restart() {\n        this.stop(); // sync\n        this.start(); // async\n    }\n    /**\n     * Is the kernel ready?\n     */\n    get isReady() {\n        return this._isReady;\n    }\n    /**\n     * Promise that resolves when the kernel is ready (started).\n     */\n    async ready() {\n        return this._ready.promise;\n    }\n    /**\n     * Root path for assets files.\n     */\n    assetsURL(absolute = false) {\n        let url = this._rootPath;\n        if (absolute && !url.startsWith(\"http\")) {\n            const base = window.location.origin + window.location.pathname;\n            url = base.substring(0, base.lastIndexOf(\"/\")) + \"/\" + url;\n        }\n        return url;\n    }\n    /**\n     * Root for kernel files. This is always the language directory\n     * inside the version number directory inside the assets directory.\n     */\n    basthonRoot(absolute = false) {\n        return (this.assetsURL(absolute) + \"/\" + this.version() + \"/\" + this.language());\n    }\n    /**\n     * Downloading data (bytes array or data URL) as filename\n     * (opening browser dialog).\n     */\n    download(data, filename) {\n        if (!(typeof data === \"string\" || data instanceof String)) {\n            const blob = new Blob([data], { type: \"application/octet-stream\" });\n            data = window.URL.createObjectURL(blob);\n        }\n        const anchor = document.createElement(\"a\");\n        anchor.download = filename;\n        anchor.href = data;\n        anchor.target = \"_blank\";\n        anchor.style.display = \"none\"; // just to be safe!\n        document.body.appendChild(anchor);\n        anchor.click();\n        document.body.removeChild(anchor);\n    }\n    /**\n     * Wrapper around document.dispatchEvent.\n     * It adds the 'basthon.' prefix to each event name and\n     * manage the event lookup to retreive relevent data.\n     */\n    dispatchEvent(eventName, data) {\n        document.dispatchEvent(new BasthonEvent(`basthon.${eventName}`, data));\n    }\n    /**\n     * Wrapper around document.addEventListener.\n     * It manages the 'basthon.' prefix to each event name and\n     * manage the event lookup to retreive relevent data.\n     */\n    addEventListener(eventName, callback) {\n        // wrapped callback\n        const _callback = (event) => callback(event.detail);\n        document.addEventListener(`basthon.${eventName}`, _callback);\n        // register the wrapped callback in order to remove it\n        let listeners = this._listeners.get(eventName);\n        if (listeners == null) {\n            listeners = new Map();\n            this._listeners.set(eventName, listeners);\n        }\n        listeners.set(callback, _callback);\n    }\n    /**\n     * Wrapper around document.removeEventListener.\n     * It manages the 'basthon.' prefix to each event name.\n     */\n    removeEventListener(eventName, callback) {\n        // get the wrapped callback\n        const listeners = this._listeners.get(eventName);\n        document.removeEventListener(`basthon.${eventName}`, listeners?.get(callback));\n    }\n    /**\n     * Send eval.input event then wait for the user response and return it.\n     */\n    async inputAsync(prompt, password = false, data = undefined) {\n        data = this.clone(data);\n        data.content = { prompt, password };\n        const pd = new PromiseDelegate();\n        data.resolve = pd.resolve.bind(pd);\n        data.reject = pd.reject.bind(pd);\n        this._pendingInput = pd;\n        this.dispatchEvent(\"eval.input\", data);\n        const res = await pd.promise;\n        this._pendingInput = undefined;\n        return res;\n    }\n    /**\n     * Close a pending input.\n     */\n    resolvePendingInput() {\n        this._pendingInput?.resolve(\"\");\n    }\n    /**\n     * Simple clone via JSON copy.\n     */\n    clone(obj) {\n        // simple trick that is enough for our purpose.\n        return JSON.parse(JSON.stringify(obj));\n    }\n    /**\n     * Put a ressource (file or module).\n     * Detection is based on extension.\n     */\n    async putRessource(filename, content) {\n        const ext = filename.split(\".\").pop() ?? \"\";\n        if (this.moduleExts().includes(ext)) {\n            return await this.putModule(filename, content);\n        }\n        else {\n            return await this.putFile(filename, content);\n        }\n    }\n    /**\n     * Is an input pending?\n     */\n    pendingInput() {\n        return this._pendingInput != null;\n    }\n    /**\n     * Internal. Code evaluation after an eval.request event.\n     */\n    async evalFromEvent(data) {\n        const stdCallback = (std) => (text) => {\n            let dataEvent = this.clone(data);\n            dataEvent.stream = std;\n            dataEvent.content = text;\n            this.dispatchEvent(\"eval.output\", dataEvent);\n        };\n        const outCallback = stdCallback(\"stdout\");\n        const errCallback = stdCallback(\"stderr\");\n        let args;\n        try {\n            args = await this.evalAsync(data.code, outCallback, errCallback, data);\n        }\n        catch (error) {\n            errCallback(error.toString());\n            const dataEvent = this.clone(data);\n            dataEvent.error = error;\n            dataEvent.execution_count = this.execution_count;\n            this.dispatchEvent(\"eval.error\", dataEvent);\n            return;\n        }\n        if (args == null)\n            return; // this should not happend\n        const result = args[0];\n        const executionCount = args[1];\n        let dataEvent = this.clone(data);\n        dataEvent.execution_count = executionCount;\n        if (result != null)\n            dataEvent.result = result;\n        this.dispatchEvent(\"eval.finished\", dataEvent);\n    }\n}\n","export const VERSION = \"0.73.2\";\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst proxyMarker = Symbol(\"Comlink.proxy\");\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst finalizer = Symbol(\"Comlink.finalizer\");\nconst throwMarker = Symbol(\"Comlink.thrown\");\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler = {\n    canHandle: (val) => isObject(val) && val[proxyMarker],\n    serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n    },\n    deserialize(port) {\n        port.start();\n        return wrap(port);\n    },\n};\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler = {\n    canHandle: (value) => isObject(value) && throwMarker in value,\n    serialize({ value }) {\n        let serialized;\n        if (value instanceof Error) {\n            serialized = {\n                isError: true,\n                value: {\n                    message: value.message,\n                    name: value.name,\n                    stack: value.stack,\n                },\n            };\n        }\n        else {\n            serialized = { isError: false, value };\n        }\n        return [serialized, []];\n    },\n    deserialize(serialized) {\n        if (serialized.isError) {\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\n        }\n        throw serialized.value;\n    },\n};\n/**\n * Allows customizing the serialization of certain values.\n */\nconst transferHandlers = new Map([\n    [\"proxy\", proxyTransferHandler],\n    [\"throw\", throwTransferHandler],\n]);\nfunction isAllowedOrigin(allowedOrigins, origin) {\n    for (const allowedOrigin of allowedOrigins) {\n        if (origin === allowedOrigin || allowedOrigin === \"*\") {\n            return true;\n        }\n        if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction expose(obj, ep = globalThis, allowedOrigins = [\"*\"]) {\n    ep.addEventListener(\"message\", function callback(ev) {\n        if (!ev || !ev.data) {\n            return;\n        }\n        if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n            console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n            return;\n        }\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n        let returnValue;\n        try {\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n            switch (type) {\n                case \"GET\" /* MessageType.GET */:\n                    {\n                        returnValue = rawValue;\n                    }\n                    break;\n                case \"SET\" /* MessageType.SET */:\n                    {\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n                        returnValue = true;\n                    }\n                    break;\n                case \"APPLY\" /* MessageType.APPLY */:\n                    {\n                        returnValue = rawValue.apply(parent, argumentList);\n                    }\n                    break;\n                case \"CONSTRUCT\" /* MessageType.CONSTRUCT */:\n                    {\n                        const value = new rawValue(...argumentList);\n                        returnValue = proxy(value);\n                    }\n                    break;\n                case \"ENDPOINT\" /* MessageType.ENDPOINT */:\n                    {\n                        const { port1, port2 } = new MessageChannel();\n                        expose(obj, port2);\n                        returnValue = transfer(port1, [port1]);\n                    }\n                    break;\n                case \"RELEASE\" /* MessageType.RELEASE */:\n                    {\n                        returnValue = undefined;\n                    }\n                    break;\n                default:\n                    return;\n            }\n        }\n        catch (value) {\n            returnValue = { value, [throwMarker]: 0 };\n        }\n        Promise.resolve(returnValue)\n            .catch((value) => {\n            return { value, [throwMarker]: 0 };\n        })\n            .then((returnValue) => {\n            const [wireValue, transferables] = toWireValue(returnValue);\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n            if (type === \"RELEASE\" /* MessageType.RELEASE */) {\n                // detach and deactive after sending release response above.\n                ep.removeEventListener(\"message\", callback);\n                closeEndPoint(ep);\n                if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n                    obj[finalizer]();\n                }\n            }\n        })\n            .catch((error) => {\n            // Send Serialization Error To Caller\n            const [wireValue, transferables] = toWireValue({\n                value: new TypeError(\"Unserializable return value\"),\n                [throwMarker]: 0,\n            });\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n        });\n    });\n    if (ep.start) {\n        ep.start();\n    }\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.close();\n}\nfunction wrap(ep, target) {\n    const pendingListeners = new Map();\n    ep.addEventListener(\"message\", function handleMessage(ev) {\n        const { data } = ev;\n        if (!data || !data.id) {\n            return;\n        }\n        const resolver = pendingListeners.get(data.id);\n        if (!resolver) {\n            return;\n        }\n        try {\n            resolver(data);\n        }\n        finally {\n            pendingListeners.delete(data.id);\n        }\n    });\n    return createProxy(ep, pendingListeners, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n    if (isReleased) {\n        throw new Error(\"Proxy has been released and is not useable\");\n    }\n}\nfunction releaseEndpoint(ep) {\n    return requestResponseMessage(ep, new Map(), {\n        type: \"RELEASE\" /* MessageType.RELEASE */,\n    }).then(() => {\n        closeEndPoint(ep);\n    });\n}\nconst proxyCounter = new WeakMap();\nconst proxyFinalizers = \"FinalizationRegistry\" in globalThis &&\n    new FinalizationRegistry((ep) => {\n        const newCount = (proxyCounter.get(ep) || 0) - 1;\n        proxyCounter.set(ep, newCount);\n        if (newCount === 0) {\n            releaseEndpoint(ep);\n        }\n    });\nfunction registerProxy(proxy, ep) {\n    const newCount = (proxyCounter.get(ep) || 0) + 1;\n    proxyCounter.set(ep, newCount);\n    if (proxyFinalizers) {\n        proxyFinalizers.register(proxy, ep, proxy);\n    }\n}\nfunction unregisterProxy(proxy) {\n    if (proxyFinalizers) {\n        proxyFinalizers.unregister(proxy);\n    }\n}\nfunction createProxy(ep, pendingListeners, path = [], target = function () { }) {\n    let isProxyReleased = false;\n    const proxy = new Proxy(target, {\n        get(_target, prop) {\n            throwIfProxyReleased(isProxyReleased);\n            if (prop === releaseProxy) {\n                return () => {\n                    unregisterProxy(proxy);\n                    releaseEndpoint(ep);\n                    pendingListeners.clear();\n                    isProxyReleased = true;\n                };\n            }\n            if (prop === \"then\") {\n                if (path.length === 0) {\n                    return { then: () => proxy };\n                }\n                const r = requestResponseMessage(ep, pendingListeners, {\n                    type: \"GET\" /* MessageType.GET */,\n                    path: path.map((p) => p.toString()),\n                }).then(fromWireValue);\n                return r.then.bind(r);\n            }\n            return createProxy(ep, pendingListeners, [...path, prop]);\n        },\n        set(_target, prop, rawValue) {\n            throwIfProxyReleased(isProxyReleased);\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            const [value, transferables] = toWireValue(rawValue);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"SET\" /* MessageType.SET */,\n                path: [...path, prop].map((p) => p.toString()),\n                value,\n            }, transferables).then(fromWireValue);\n        },\n        apply(_target, _thisArg, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const last = path[path.length - 1];\n            if (last === createEndpoint) {\n                return requestResponseMessage(ep, pendingListeners, {\n                    type: \"ENDPOINT\" /* MessageType.ENDPOINT */,\n                }).then(fromWireValue);\n            }\n            // We just pretend that `bind()` didn’t happen.\n            if (last === \"bind\") {\n                return createProxy(ep, pendingListeners, path.slice(0, -1));\n            }\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"APPLY\" /* MessageType.APPLY */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n        construct(_target, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"CONSTRUCT\" /* MessageType.CONSTRUCT */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n    });\n    registerProxy(proxy, ep);\n    return proxy;\n}\nfunction myFlat(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n    const processed = argumentList.map(toWireValue);\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nconst transferCache = new WeakMap();\nfunction transfer(obj, transfers) {\n    transferCache.set(obj, transfers);\n    return obj;\n}\nfunction proxy(obj) {\n    return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = globalThis, targetOrigin = \"*\") {\n    return {\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n        addEventListener: context.addEventListener.bind(context),\n        removeEventListener: context.removeEventListener.bind(context),\n    };\n}\nfunction toWireValue(value) {\n    for (const [name, handler] of transferHandlers) {\n        if (handler.canHandle(value)) {\n            const [serializedValue, transferables] = handler.serialize(value);\n            return [\n                {\n                    type: \"HANDLER\" /* WireValueType.HANDLER */,\n                    name,\n                    value: serializedValue,\n                },\n                transferables,\n            ];\n        }\n    }\n    return [\n        {\n            type: \"RAW\" /* WireValueType.RAW */,\n            value,\n        },\n        transferCache.get(value) || [],\n    ];\n}\nfunction fromWireValue(value) {\n    switch (value.type) {\n        case \"HANDLER\" /* WireValueType.HANDLER */:\n            return transferHandlers.get(value.name).deserialize(value.value);\n        case \"RAW\" /* WireValueType.RAW */:\n            return value.value;\n    }\n}\nfunction requestResponseMessage(ep, pendingListeners, msg, transfers) {\n    return new Promise((resolve) => {\n        const id = generateUUID();\n        pendingListeners.set(id, resolve);\n        if (ep.start) {\n            ep.start();\n        }\n        ep.postMessage(Object.assign({ id }, msg), transfers);\n    });\n}\nfunction generateUUID() {\n    return new Array(4)\n        .fill(0)\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n        .join(\"-\");\n}\n\nexport { createEndpoint, expose, finalizer, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n"],"names":["BasthonEvent","Event","constructor","id","data","super","this","detail","KernelBase","options","_isReady","_ready","_stopped","Promise","resolve","_execution_count","_pendingInput","undefined","_listeners","Map","_files","_modules","_options","clone","_rootPath","rootPath","safeKernel","version","language","languageName","moduleExts","execution_count","evalAsync","code","outCallback","errCallback","putFile","filename","content","set","putModule","userModules","getFile","path","getUserModuleFile","more","source","complete","banner","ps1","ps2","_init","init","console","warn","error","reject","addEventListener","evalFromEvent","bind","start","_start","forEach","v","k","_stop","stop","restart","isReady","ready","promise","assetsURL","absolute","url","startsWith","base","window","location","origin","pathname","substring","lastIndexOf","basthonRoot","download","String","blob","Blob","type","URL","createObjectURL","anchor","document","createElement","href","target","style","display","body","appendChild","click","removeChild","dispatchEvent","eventName","callback","_callback","event","listeners","get","removeEventListener","inputAsync","prompt","password","pd","res","resolvePendingInput","obj","JSON","parse","stringify","putRessource","ext","split","pop","includes","pendingInput","stdCallback","std","text","dataEvent","stream","args","toString","result","executionCount","VERSION","proxyMarker","Symbol","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","val","transferHandlers","canHandle","serialize","port1","port2","MessageChannel","expose","deserialize","port","wrap","value","serialized","Error","isError","message","name","stack","Object","assign","ep","globalThis","allowedOrigins","ev","allowedOrigin","RegExp","test","isAllowedOrigin","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","prop","rawValue","apply","proxy","transfer","catch","then","wireValue","transferables","toWireValue","postMessage","closeEndPoint","TypeError","endpoint","isMessagePort","close","pendingListeners","resolver","delete","createProxy","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","WeakMap","proxyFinalizers","FinalizationRegistry","newCount","isProxyReleased","Proxy","_target","unregister","unregisterProxy","clear","length","r","p","_thisArg","rawArgumentList","last","processArguments","construct","register","registerProxy","processed","arr","Array","prototype","concat","transferCache","transfers","handler","serializedValue","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join"],"sourceRoot":""}