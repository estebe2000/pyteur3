"use strict";(self.webpackChunk_basthon_basthon_notebook=self.webpackChunk_basthon_basthon_notebook||[]).push([[5303,7684],{15303:(a,e,n)=>{var t=n(59158);const s=async(a,e)=>a instanceof globalThis.OffscreenCanvas?await a.convertToBlob({type:e}):await new Promise(((n,t)=>{a.toBlob((a=>{null==a?t():n(a)}),e)}));class o extends t.fI{constructor(a){super(a),this._initInnerCode='open Js_of_ocaml\nmodule Basthon = struct\n  let download (path: string): unit = ignore((Js.Unsafe.eval_string "self.basthon.__kernel__")##download path)\n  let sleep (duration: float): unit = ignore((Js.Unsafe.eval_string "self.basthon")##sleep duration)\n  let create_canvas () = (Js.Unsafe.eval_string "self.basthon.__kernel__")##createcanvas()\n  let display_canvas canvas: unit = ignore((Js.Unsafe.eval_string "self.basthon")##displayCanvas canvas)\n  let save_canvas canvas (path: string): unit = ignore((Js.Unsafe.eval_string "self.basthon.__kernel__")##savecanvas canvas path)\n  let download_canvas ?(format = "png") canvas: unit = ignore((Js.Unsafe.eval_string "self.basthon")##downloadCanvas canvas (Js.string format))\n  let display_image (path: string): unit = ignore((Js.Unsafe.eval_string "self.basthon.__kernel__")##displayimage path)\n  let version () : string = (Js.Unsafe.eval_string "self.basthon.__kernel__")##version()\n  let help () : unit = print_endline {ext|Basthon module\n  help:               Show this help.\n  download path:      Download a file from the local filesystem.\n  sleep duration:     Sleep for a certain amount of seconds.\n  display_image path: Display a PNG image from the local filesystem.\n  create_canvas:      Create a HTML5 canvas to be displayed with display_canvas.\n  display_canvas canvas:   Display a HTML5 canvas created with create_canvas.\n  save_canvas canvas path: Save a canvas to a PNG/JPG file to the local filesystem.\n  download_canvas ?(format = "png") canvas: Download a canvas to a PNG/JPG file.\n|ext}\nend'}language(){return"ocaml"}async _init(a){this.isLegacy()||(console.info=(...a)=>console.log(...a),console.warn=(...a)=>console.error(...a),globalThis.addEventListener("error",(a=>console.error(a.toString()))));const{__kernel__:e}=await Promise.all([n.e(950),n.e(4974)]).then(n.t.bind(n,20950,23));if(this.__kernel__=e,0!==this.__kernel__?.init?.())throw new Error("Can't start OCaml kernel!");self.jsoo_runtime.caml_gr_draw_image=(a,e,n)=>{const t=self.jsoo_runtime.caml_gr_state_get();return t.context.putImageData(a,e,t.height-a.height-n),0},this.__kernel__?.exec(this._initInnerCode)}async _eval(a,e){if(null==this.__kernel__)return;this.__eval_data__=a,this.__kernel__.io.stdout=(...e)=>{this.sendStdoutStream(a,e.join(" "))},this.__kernel__.io.stderr=(...e)=>{this.sendStderrStream(a,e.join(" "))};const n=this.__kernel__?.exec(e);return"string"==typeof n&&n.length>0?{"text/plain":n.replace(/\n$/,"")}:void 0}async legacyStart(){if(0!==this.__kernel__?.init?.())throw new Error("Can't start OCaml kernel!");this.__kernel__?.exec(this._initInnerCode)}async legacyStop(){}async more(a){return!1}putFile(a,e){null!=this.__kernel__&&this.__kernel__.createfile(a,e)}putModule(a,e){this.putFile(a,e),this.__kernel__?.loadmodule(a)}ocamlDownload(a,e){const n=self.jsoo_runtime.caml_convert_bytes_to_array(a);this.download(n,e)}displayCanvas(a){this.display(a)}async saveCanvas(a,e){if(null==this.__kernel__)return;const n=e.split(".").pop()?.toLowerCase();let t="image/png";"jpg"!==n&&"jpeg"!==n||(t="image/jpeg");const o=(async()=>{const n=await s(a,t),o=await n.arrayBuffer();this.__kernel__.createfile(e,o)})();this.addEvalPromise(o),await o}async downloadCanvas(a,e){null==e&&(e="png");const n={jpg:"image/jpeg",jpeg:"images/jpeg",png:"image/png"};(e=e.toString().toLowerCase())in n||(e="png");const t=n[e],o=(async()=>{const n=await s(a,t);let o=await this.blobToDataURL(n);this.download(o,`canvas.${e}`)})();this.addEvalPromise(o),await o}async displayImage(a){const e=this.clone(this.__eval_data__),n=self.jsoo_runtime.caml_convert_bytes_to_array(a),t=new Blob([n],{type:"image/png"}),s=this.displayBlob(t,e);this.addEvalPromise(s),await s}}(0,t.p)(o)}}]);
//# sourceMappingURL=7684.c61990fb60810d7b2413.js.map