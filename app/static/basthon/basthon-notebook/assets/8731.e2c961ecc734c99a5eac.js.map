{"version":3,"file":"assets/8731.e2c961ecc734c99a5eac.js","mappings":"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","sources":["webpack://@basthon/basthon-notebook/./node_modules/vscode-jsonrpc/lib/common/cancellation.js","webpack://@basthon/basthon-notebook/./node_modules/vscode-jsonrpc/lib/common/events.js","webpack://@basthon/basthon-notebook/./node_modules/vscode-jsonrpc/lib/common/is.js","webpack://@basthon/basthon-notebook/./node_modules/vscode-jsonrpc/lib/common/ral.js","webpack://@basthon/basthon-notebook/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-4YFB5VUC.mjs","webpack://@basthon/basthon-notebook/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-BI6EQKOQ.mjs","webpack://@basthon/basthon-notebook/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-EQFLFMNE.mjs","webpack://@basthon/basthon-notebook/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-FF7BQXOH.mjs","webpack://@basthon/basthon-notebook/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-NCMFTTUW.mjs","webpack://@basthon/basthon-notebook/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-Y27MQZ3U.mjs","webpack://@basthon/basthon-notebook/./node_modules/@mermaid-js/parser/dist/mermaid-parser.core.mjs","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/syntax-tree.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/utils/stream.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/utils/cst-utils.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/utils/errors.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/languages/generated/ast.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/utils/ast-utils.js","webpack://@basthon/basthon-notebook/./node_modules/@chevrotain/regexp-to-ast/lib/src/utils.js","webpack://@basthon/basthon-notebook/./node_modules/@chevrotain/regexp-to-ast/lib/src/character-classes.js","webpack://@basthon/basthon-notebook/./node_modules/@chevrotain/regexp-to-ast/lib/src/regexp-parser.js","webpack://@basthon/basthon-notebook/./node_modules/@chevrotain/regexp-to-ast/lib/src/base-regexp-visitor.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/utils/regexp-utils.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/utils/grammar-utils.js","webpack://@basthon/basthon-notebook/./node_modules/@chevrotain/utils/lib/src/to-fast-properties.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/_baseSlice.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/drop.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/assign.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/pickBy.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/isRegExp.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/_baseIsRegExp.js","webpack://@basthon/basthon-notebook/./node_modules/@chevrotain/gast/lib/src/model.js","webpack://@basthon/basthon-notebook/./node_modules/@chevrotain/gast/lib/src/visitor.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/_baseSome.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/some.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/includes.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/_arrayEvery.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/_baseEvery.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/every.js","webpack://@basthon/basthon-notebook/./node_modules/@chevrotain/gast/lib/src/helpers.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/grammar/rest.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/uniq.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/grammar/first.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/constants.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/grammar/follow.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/negate.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/reject.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/indexOf.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/difference.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/_baseDifference.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/compact.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/head.js","webpack://@basthon/basthon-notebook/./node_modules/@chevrotain/utils/lib/src/print.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/scan/reg_exp_parser.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/scan/reg_exp.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/scan/lexer.js","webpack://@basthon/basthon-notebook/./node_modules/@chevrotain/utils/lib/src/timer.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/scan/tokens.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/scan/lexer_public.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/scan/lexer_errors_public.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/scan/tokens_public.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/errors_public.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/grammar/resolver.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/flatMap.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/_arrayAggregator.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/_baseAggregator.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/groupBy.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/_createAggregator.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/dropRight.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/grammar/interpreter.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/grammar/lookahead.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/grammar/checks.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/exceptions_public.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/parser/traits/recoverable.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/grammar/keys.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/grammar/llk_lookahead.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/parser/traits/looksahead.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/cst/cst.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/lang/lang_extensions.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/cst/cst_visitor.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/parser/traits/gast_recorder.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/parser/parser.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/parser/utils/apply_mixins.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/grammar/gast/gast_resolver_public.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/parser/traits/tree_builder.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/parser/traits/lexer_adapter.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_engine.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_api.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/parser/traits/error_handler.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/parser/traits/context_assist.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain/lib/src/parse/parser/traits/perf_tracer.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain-allstar/lib/atn.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain-allstar/lib/dfa.js","webpack://@basthon/basthon-notebook/./node_modules/chevrotain-allstar/lib/all-star-lookahead.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/uniqBy.js","webpack://@basthon/basthon-notebook/./node_modules/vscode-languageserver-types/lib/esm/main.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/parser/cst-node-builder.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/parser/langium-parser.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/parser/parser-builder-base.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/parser/token-builder.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/parser/value-converter.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/utils/promise-utils.js","webpack://@basthon/basthon-notebook/./node_modules/vscode-languageserver-textdocument/lib/esm/main.js","webpack://@basthon/basthon-notebook/./node_modules/vscode-uri/lib/esm/index.mjs","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/utils/uri-utils.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/workspace/documents.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/validation/validation-registry.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/validation/document-validator.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/utils/disposable.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/references/linker.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/references/name-provider.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/references/references.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/utils/collections.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/references/scope-computation.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/references/scope.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/utils/caching.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/references/scope-provider.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/serializer/json-serializer.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/service-registry.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/workspace/ast-descriptions.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/workspace/ast-node-locator.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/workspace/configuration.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/workspace/document-builder.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/workspace/index-manager.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/workspace/workspace-manager.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/parser/lexer.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/documentation/jsdoc.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/documentation/documentation-provider.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/documentation/comment-provider.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/dependency-injection.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/parser/async-parser.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/workspace/workspace-lock.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/serializer/hydrator.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/default-module.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/languages/grammar-config.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/parser/langium-parser-builder.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/parser/completion-parser-builder.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/workspace/file-system-provider.js","webpack://@basthon/basthon-notebook/./node_modules/langium/lib/utils/grammar-loader.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/_baseExtremum.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/_baseLt.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/_baseMap.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/_baseSet.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/_basePickBy.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/clone.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/defaults.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/findIndex.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/find.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/_createFind.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/flatten.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/_baseHas.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/has.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/isString.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/last.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/map.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/min.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/_trimmedEndIndex.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/_baseTrim.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/toNumber.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/toFinite.js","webpack://@basthon/basthon-notebook/./node_modules/lodash-es/toInteger.js"],"sourcesContent":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationTokenSource = exports.CancellationToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: events_1.Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: events_1.Event.None\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate === CancellationToken.None\n            || candidate === CancellationToken.Cancelled\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\n    }\n    CancellationToken.is = is;\n})(CancellationToken || (exports.CancellationToken = CancellationToken = {}));\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = (0, ral_1.default)().timer.setTimeout(callback.bind(context), 0);\n    return { dispose() { handle.dispose(); } };\n});\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new events_1.Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\nclass CancellationTokenSource {\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else {\n            this._token.cancel();\n        }\n    }\n    dispose() {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexports.CancellationTokenSource = CancellationTokenSource;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event || (exports.Event = Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                (0, ral_1.default)().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  InfoGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-Y27MQZ3U.mjs\";\n\n// src/language/info/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/info/tokenBuilder.ts\nvar InfoTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"InfoTokenBuilder\");\n  }\n  constructor() {\n    super([\"info\", \"showInfo\"]);\n  }\n};\n\n// src/language/info/module.ts\nvar InfoModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new InfoTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createInfoServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Info = inject(\n    createDefaultCoreModule({ shared }),\n    InfoGeneratedModule,\n    InfoModule\n  );\n  shared.ServiceRegistry.register(Info);\n  return { shared, Info };\n}\n__name(createInfoServices, \"createInfoServices\");\n\nexport {\n  InfoModule,\n  createInfoServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  MermaidGeneratedSharedModule,\n  PieGeneratedModule,\n  __name\n} from \"./chunk-Y27MQZ3U.mjs\";\n\n// src/language/pie/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/pie/tokenBuilder.ts\nvar PieTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PieTokenBuilder\");\n  }\n  constructor() {\n    super([\"pie\", \"showData\"]);\n  }\n};\n\n// src/language/pie/valueConverter.ts\nvar PieValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"PieValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name !== \"PIE_SECTION_LABEL\") {\n      return void 0;\n    }\n    return input.replace(/\"/g, \"\").trim();\n  }\n};\n\n// src/language/pie/module.ts\nvar PieModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PieTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new PieValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPieServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Pie = inject(\n    createDefaultCoreModule({ shared }),\n    PieGeneratedModule,\n    PieModule\n  );\n  shared.ServiceRegistry.register(Pie);\n  return { shared, Pie };\n}\n__name(createPieServices, \"createPieServices\");\n\nexport {\n  PieModule,\n  createPieServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  PacketGeneratedModule,\n  __name\n} from \"./chunk-Y27MQZ3U.mjs\";\n\n// src/language/packet/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/packet/tokenBuilder.ts\nvar PacketTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PacketTokenBuilder\");\n  }\n  constructor() {\n    super([\"packet-beta\"]);\n  }\n};\n\n// src/language/packet/module.ts\nvar PacketModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PacketTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPacketServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Packet = inject(\n    createDefaultCoreModule({ shared }),\n    PacketGeneratedModule,\n    PacketModule\n  );\n  shared.ServiceRegistry.register(Packet);\n  return { shared, Packet };\n}\n__name(createPacketServices, \"createPacketServices\");\n\nexport {\n  PacketModule,\n  createPacketServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  ArchitectureGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-Y27MQZ3U.mjs\";\n\n// src/language/architecture/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/architecture/tokenBuilder.ts\nvar ArchitectureTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"ArchitectureTokenBuilder\");\n  }\n  constructor() {\n    super([\"architecture\"]);\n  }\n};\n\n// src/language/architecture/valueConverter.ts\nvar ArchitectureValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"ArchitectureValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name === \"ARCH_ICON\") {\n      return input.replace(/[()]/g, \"\").trim();\n    } else if (rule.name === \"ARCH_TEXT_ICON\") {\n      return input.replace(/[\"()]/g, \"\");\n    } else if (rule.name === \"ARCH_TITLE\") {\n      return input.replace(/[[\\]]/g, \"\").trim();\n    }\n    return void 0;\n  }\n};\n\n// src/language/architecture/module.ts\nvar ArchitectureModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new ArchitectureTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new ArchitectureValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createArchitectureServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Architecture = inject(\n    createDefaultCoreModule({ shared }),\n    ArchitectureGeneratedModule,\n    ArchitectureModule\n  );\n  shared.ServiceRegistry.register(Architecture);\n  return { shared, Architecture };\n}\n__name(createArchitectureServices, \"createArchitectureServices\");\n\nexport {\n  ArchitectureModule,\n  createArchitectureServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  GitGraphGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-Y27MQZ3U.mjs\";\n\n// src/language/gitGraph/module.ts\nimport {\n  inject,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  EmptyFileSystem\n} from \"langium\";\n\n// src/language/gitGraph/tokenBuilder.ts\nvar GitGraphTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"GitGraphTokenBuilder\");\n  }\n  constructor() {\n    super([\"gitGraph\"]);\n  }\n};\n\n// src/language/gitGraph/module.ts\nvar GitGraphModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new GitGraphTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createGitGraphServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const GitGraph = inject(\n    createDefaultCoreModule({ shared }),\n    GitGraphGeneratedModule,\n    GitGraphModule\n  );\n  shared.ServiceRegistry.register(GitGraph);\n  return { shared, GitGraph };\n}\n__name(createGitGraphServices, \"createGitGraphServices\");\n\nexport {\n  GitGraphModule,\n  createGitGraphServices\n};\n","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/language/generated/ast.ts\nimport { AbstractAstReflection } from \"langium\";\nvar Statement = \"Statement\";\nvar Architecture = \"Architecture\";\nfunction isArchitecture(item) {\n  return reflection.isInstance(item, Architecture);\n}\n__name(isArchitecture, \"isArchitecture\");\nvar Branch = \"Branch\";\nfunction isBranch(item) {\n  return reflection.isInstance(item, Branch);\n}\n__name(isBranch, \"isBranch\");\nvar Checkout = \"Checkout\";\nvar CherryPicking = \"CherryPicking\";\nvar Commit = \"Commit\";\nfunction isCommit(item) {\n  return reflection.isInstance(item, Commit);\n}\n__name(isCommit, \"isCommit\");\nvar Common = \"Common\";\nfunction isCommon(item) {\n  return reflection.isInstance(item, Common);\n}\n__name(isCommon, \"isCommon\");\nvar GitGraph = \"GitGraph\";\nfunction isGitGraph(item) {\n  return reflection.isInstance(item, GitGraph);\n}\n__name(isGitGraph, \"isGitGraph\");\nvar Info = \"Info\";\nfunction isInfo(item) {\n  return reflection.isInstance(item, Info);\n}\n__name(isInfo, \"isInfo\");\nvar Merge = \"Merge\";\nfunction isMerge(item) {\n  return reflection.isInstance(item, Merge);\n}\n__name(isMerge, \"isMerge\");\nvar Packet = \"Packet\";\nfunction isPacket(item) {\n  return reflection.isInstance(item, Packet);\n}\n__name(isPacket, \"isPacket\");\nvar PacketBlock = \"PacketBlock\";\nfunction isPacketBlock(item) {\n  return reflection.isInstance(item, PacketBlock);\n}\n__name(isPacketBlock, \"isPacketBlock\");\nvar Pie = \"Pie\";\nfunction isPie(item) {\n  return reflection.isInstance(item, Pie);\n}\n__name(isPie, \"isPie\");\nvar PieSection = \"PieSection\";\nfunction isPieSection(item) {\n  return reflection.isInstance(item, PieSection);\n}\n__name(isPieSection, \"isPieSection\");\nvar Direction = \"Direction\";\nvar MermaidAstReflection = class extends AbstractAstReflection {\n  static {\n    __name(this, \"MermaidAstReflection\");\n  }\n  getAllTypes() {\n    return [\"Architecture\", \"Branch\", \"Checkout\", \"CherryPicking\", \"Commit\", \"Common\", \"Direction\", \"Edge\", \"GitGraph\", \"Group\", \"Info\", \"Junction\", \"Merge\", \"Packet\", \"PacketBlock\", \"Pie\", \"PieSection\", \"Service\", \"Statement\"];\n  }\n  computeIsSubtype(subtype, supertype) {\n    switch (subtype) {\n      case Branch:\n      case Checkout:\n      case CherryPicking:\n      case Commit:\n      case Merge: {\n        return this.isSubtype(Statement, supertype);\n      }\n      case Direction: {\n        return this.isSubtype(GitGraph, supertype);\n      }\n      default: {\n        return false;\n      }\n    }\n  }\n  getReferenceType(refInfo) {\n    const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n    switch (referenceId) {\n      default: {\n        throw new Error(`${referenceId} is not a valid reference id.`);\n      }\n    }\n  }\n  getTypeMetaData(type) {\n    switch (type) {\n      case \"Architecture\": {\n        return {\n          name: \"Architecture\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"edges\", defaultValue: [] },\n            { name: \"groups\", defaultValue: [] },\n            { name: \"junctions\", defaultValue: [] },\n            { name: \"services\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Branch\": {\n        return {\n          name: \"Branch\",\n          properties: [\n            { name: \"name\" },\n            { name: \"order\" }\n          ]\n        };\n      }\n      case \"Checkout\": {\n        return {\n          name: \"Checkout\",\n          properties: [\n            { name: \"branch\" }\n          ]\n        };\n      }\n      case \"CherryPicking\": {\n        return {\n          name: \"CherryPicking\",\n          properties: [\n            { name: \"id\" },\n            { name: \"parent\" },\n            { name: \"tags\", defaultValue: [] }\n          ]\n        };\n      }\n      case \"Commit\": {\n        return {\n          name: \"Commit\",\n          properties: [\n            { name: \"id\" },\n            { name: \"message\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case \"Common\": {\n        return {\n          name: \"Common\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Edge\": {\n        return {\n          name: \"Edge\",\n          properties: [\n            { name: \"lhsDir\" },\n            { name: \"lhsGroup\", defaultValue: false },\n            { name: \"lhsId\" },\n            { name: \"lhsInto\", defaultValue: false },\n            { name: \"rhsDir\" },\n            { name: \"rhsGroup\", defaultValue: false },\n            { name: \"rhsId\" },\n            { name: \"rhsInto\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"GitGraph\": {\n        return {\n          name: \"GitGraph\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Group\": {\n        return {\n          name: \"Group\",\n          properties: [\n            { name: \"icon\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Info\": {\n        return {\n          name: \"Info\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Junction\": {\n        return {\n          name: \"Junction\",\n          properties: [\n            { name: \"id\" },\n            { name: \"in\" }\n          ]\n        };\n      }\n      case \"Merge\": {\n        return {\n          name: \"Merge\",\n          properties: [\n            { name: \"branch\" },\n            { name: \"id\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case \"Packet\": {\n        return {\n          name: \"Packet\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"blocks\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"PacketBlock\": {\n        return {\n          name: \"PacketBlock\",\n          properties: [\n            { name: \"end\" },\n            { name: \"label\" },\n            { name: \"start\" }\n          ]\n        };\n      }\n      case \"Pie\": {\n        return {\n          name: \"Pie\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"sections\", defaultValue: [] },\n            { name: \"showData\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"PieSection\": {\n        return {\n          name: \"PieSection\",\n          properties: [\n            { name: \"label\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case \"Service\": {\n        return {\n          name: \"Service\",\n          properties: [\n            { name: \"icon\" },\n            { name: \"iconText\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Direction\": {\n        return {\n          name: \"Direction\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"dir\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      default: {\n        return {\n          name: type,\n          properties: []\n        };\n      }\n    }\n  }\n};\nvar reflection = new MermaidAstReflection();\n\n// src/language/generated/grammar.ts\nimport { loadGrammarFromJson } from \"langium\";\nvar loadedInfoGrammar;\nvar InfoGrammar = /* @__PURE__ */ __name(() => loadedInfoGrammar ?? (loadedInfoGrammar = loadGrammarFromJson('{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Info\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"name\":\"Info\",\"entry\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"info\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"showInfo\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"*\"}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"TitleAndAccessibilities\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"EOL\",\"fragment\":true,\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}')), \"InfoGrammar\");\nvar loadedPacketGrammar;\nvar PacketGrammar = /* @__PURE__ */ __name(() => loadedPacketGrammar ?? (loadedPacketGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Packet\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"name\":\"Packet\",\"entry\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"packet-beta\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"blocks\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"Assignment\",\"feature\":\"blocks\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"+\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PacketBlock\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"start\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"end\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"name\":\"TitleAndAccessibilities\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"EOL\",\"fragment\":true,\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}`)), \"PacketGrammar\");\nvar loadedPieGrammar;\nvar PieGrammar = /* @__PURE__ */ __name(() => loadedPieGrammar ?? (loadedPieGrammar = loadGrammarFromJson('{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Pie\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"name\":\"Pie\",\"entry\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"pie\"},{\"$type\":\"Assignment\",\"feature\":\"showData\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showData\"},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"sections\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"Assignment\",\"feature\":\"sections\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"+\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PieSection\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"PIE_SECTION_LABEL\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]+\\\\\"/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"PIE_SECTION_VALUE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/(0|[1-9][0-9]*)(\\\\\\\\.[0-9]+)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"name\":\"TitleAndAccessibilities\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"EOL\",\"fragment\":true,\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}')), \"PieGrammar\");\nvar loadedArchitectureGrammar;\nvar ArchitectureGrammar = /* @__PURE__ */ __name(() => loadedArchitectureGrammar ?? (loadedArchitectureGrammar = loadGrammarFromJson('{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Architecture\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"name\":\"Architecture\",\"entry\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"architecture-beta\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"*\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Statement\",\"fragment\":true,\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"groups\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"services\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"junctions\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"edges\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"LeftPort\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"lhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"RightPort\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"rhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Arrow\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"lhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"--\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"-\"}]}]},{\"$type\":\"Assignment\",\"feature\":\"rhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Group\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"group\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Service\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"service\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"iconText\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Junction\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"junction\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Edge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"lhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"lhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"rhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"rhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_DIRECTION\",\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"L\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"R\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"T\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"B\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_ID\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]+/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_TEXT_ICON\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\(\\\\\"[^\\\\\"]+\\\\\"\\\\\\\\)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_ICON\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\([\\\\\\\\w-:]+\\\\\\\\)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\[[\\\\\\\\w ]+\\\\\\\\]/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_GROUP\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\{group\\\\\\\\}/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_INTO\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/<|>/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"name\":\"TitleAndAccessibilities\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"EOL\",\"fragment\":true,\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}')), \"ArchitectureGrammar\");\nvar loadedGitGraphGrammar;\nvar GitGraphGrammar = /* @__PURE__ */ __name(() => loadedGitGraphGrammar ?? (loadedGitGraphGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"GitGraph\",\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"rules\":[{\"$type\":\"ParserRule\",\"name\":\"TitleAndAccessibilities\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"EOL\",\"fragment\":true,\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"ParserRule\",\"name\":\"GitGraph\",\"entry\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Keyword\",\"value\":\":\"}]},{\"$type\":\"Keyword\",\"value\":\"gitGraph:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@0\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"statements\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Direction\",\"definition\":{\"$type\":\"Assignment\",\"feature\":\"dir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"LR\"},{\"$type\":\"Keyword\",\"value\":\"TB\"},{\"$type\":\"Keyword\",\"value\":\"BT\"}]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Commit\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"commit\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"msg:\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"message\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Branch\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"branch\"},{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"order:\"},{\"$type\":\"Assignment\",\"feature\":\"order\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Merge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"merge\"},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Checkout\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"checkout\"},{\"$type\":\"Keyword\",\"value\":\"switch\"}]},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"CherryPicking\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"cherry-pick\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"parent:\"},{\"$type\":\"Assignment\",\"feature\":\"parent\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+(?=\\\\\\\\s)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\w([-\\\\\\\\./\\\\\\\\w]*[-\\\\\\\\w])?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"imports\":[],\"types\":[],\"usedGrammars\":[]}`)), \"GitGraphGrammar\");\n\n// src/language/generated/module.ts\nvar InfoLanguageMetaData = {\n  languageId: \"info\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false\n};\nvar PacketLanguageMetaData = {\n  languageId: \"packet\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false\n};\nvar PieLanguageMetaData = {\n  languageId: \"pie\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false\n};\nvar ArchitectureLanguageMetaData = {\n  languageId: \"architecture\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false\n};\nvar GitGraphLanguageMetaData = {\n  languageId: \"gitGraph\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false\n};\nvar MermaidGeneratedSharedModule = {\n  AstReflection: /* @__PURE__ */ __name(() => new MermaidAstReflection(), \"AstReflection\")\n};\nvar InfoGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => InfoGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => InfoLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PacketGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PacketGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PacketLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PieGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PieGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PieLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar ArchitectureGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => ArchitectureGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => ArchitectureLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar GitGraphGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => GitGraphGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => GitGraphLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\n\n// src/language/common/valueConverter.ts\nimport { DefaultValueConverter } from \"langium\";\n\n// src/language/common/matcher.ts\nvar accessibilityDescrRegex = /accDescr(?:[\\t ]*:([^\\n\\r]*)|\\s*{([^}]*)})/;\nvar accessibilityTitleRegex = /accTitle[\\t ]*:([^\\n\\r]*)/;\nvar titleRegex = /title([\\t ][^\\n\\r]*|)/;\n\n// src/language/common/valueConverter.ts\nvar rulesRegexes = {\n  ACC_DESCR: accessibilityDescrRegex,\n  ACC_TITLE: accessibilityTitleRegex,\n  TITLE: titleRegex\n};\nvar AbstractMermaidValueConverter = class extends DefaultValueConverter {\n  static {\n    __name(this, \"AbstractMermaidValueConverter\");\n  }\n  runConverter(rule, input, cstNode) {\n    let value = this.runCommonConverter(rule, input, cstNode);\n    if (value === void 0) {\n      value = this.runCustomConverter(rule, input, cstNode);\n    }\n    if (value === void 0) {\n      return super.runConverter(rule, input, cstNode);\n    }\n    return value;\n  }\n  runCommonConverter(rule, input, _cstNode) {\n    const regex = rulesRegexes[rule.name];\n    if (regex === void 0) {\n      return void 0;\n    }\n    const match = regex.exec(input);\n    if (match === null) {\n      return void 0;\n    }\n    if (match[1] !== void 0) {\n      return match[1].trim().replace(/[\\t ]{2,}/gm, \" \");\n    }\n    if (match[2] !== void 0) {\n      return match[2].replace(/^\\s*/gm, \"\").replace(/\\s+$/gm, \"\").replace(/[\\t ]{2,}/gm, \" \").replace(/[\\n\\r]{2,}/gm, \"\\n\");\n    }\n    return void 0;\n  }\n};\nvar CommonValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"CommonValueConverter\");\n  }\n  runCustomConverter(_rule, _input, _cstNode) {\n    return void 0;\n  }\n};\n\n// src/language/common/tokenBuilder.ts\nimport { DefaultTokenBuilder } from \"langium\";\nvar AbstractMermaidTokenBuilder = class extends DefaultTokenBuilder {\n  static {\n    __name(this, \"AbstractMermaidTokenBuilder\");\n  }\n  constructor(keywords) {\n    super();\n    this.keywords = new Set(keywords);\n  }\n  buildKeywordTokens(rules, terminalTokens, options) {\n    const tokenTypes = super.buildKeywordTokens(rules, terminalTokens, options);\n    tokenTypes.forEach((tokenType) => {\n      if (this.keywords.has(tokenType.name) && tokenType.PATTERN !== void 0) {\n        tokenType.PATTERN = new RegExp(tokenType.PATTERN.toString() + \"(?:(?=%%)|(?!\\\\S))\");\n      }\n    });\n    return tokenTypes;\n  }\n};\nvar CommonTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"CommonTokenBuilder\");\n  }\n};\n\nexport {\n  __name,\n  Statement,\n  Architecture,\n  isArchitecture,\n  Branch,\n  isBranch,\n  Commit,\n  isCommit,\n  isCommon,\n  GitGraph,\n  isGitGraph,\n  Info,\n  isInfo,\n  Merge,\n  isMerge,\n  Packet,\n  isPacket,\n  PacketBlock,\n  isPacketBlock,\n  Pie,\n  isPie,\n  PieSection,\n  isPieSection,\n  MermaidGeneratedSharedModule,\n  InfoGeneratedModule,\n  PacketGeneratedModule,\n  PieGeneratedModule,\n  ArchitectureGeneratedModule,\n  GitGraphGeneratedModule,\n  AbstractMermaidValueConverter,\n  CommonValueConverter,\n  AbstractMermaidTokenBuilder,\n  CommonTokenBuilder\n};\n","import {\n  GitGraphModule,\n  createGitGraphServices\n} from \"./chunks/mermaid-parser.core/chunk-NCMFTTUW.mjs\";\nimport {\n  InfoModule,\n  createInfoServices\n} from \"./chunks/mermaid-parser.core/chunk-4YFB5VUC.mjs\";\nimport {\n  PacketModule,\n  createPacketServices\n} from \"./chunks/mermaid-parser.core/chunk-EQFLFMNE.mjs\";\nimport {\n  PieModule,\n  createPieServices\n} from \"./chunks/mermaid-parser.core/chunk-BI6EQKOQ.mjs\";\nimport {\n  ArchitectureModule,\n  createArchitectureServices\n} from \"./chunks/mermaid-parser.core/chunk-FF7BQXOH.mjs\";\nimport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  Info,\n  InfoGeneratedModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  Pie,\n  PieGeneratedModule,\n  PieSection,\n  Statement,\n  __name,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isCommon,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection\n} from \"./chunks/mermaid-parser.core/chunk-Y27MQZ3U.mjs\";\n\n// src/parse.ts\nvar parsers = {};\nvar initializers = {\n  info: /* @__PURE__ */ __name(async () => {\n    const { createInfoServices: createInfoServices2 } = await import(\"./chunks/mermaid-parser.core/info-46DW6VJ7.mjs\");\n    const parser = createInfoServices2().Info.parser.LangiumParser;\n    parsers.info = parser;\n  }, \"info\"),\n  packet: /* @__PURE__ */ __name(async () => {\n    const { createPacketServices: createPacketServices2 } = await import(\"./chunks/mermaid-parser.core/packet-W2GHVCYJ.mjs\");\n    const parser = createPacketServices2().Packet.parser.LangiumParser;\n    parsers.packet = parser;\n  }, \"packet\"),\n  pie: /* @__PURE__ */ __name(async () => {\n    const { createPieServices: createPieServices2 } = await import(\"./chunks/mermaid-parser.core/pie-BEWT4RHE.mjs\");\n    const parser = createPieServices2().Pie.parser.LangiumParser;\n    parsers.pie = parser;\n  }, \"pie\"),\n  architecture: /* @__PURE__ */ __name(async () => {\n    const { createArchitectureServices: createArchitectureServices2 } = await import(\"./chunks/mermaid-parser.core/architecture-I3QFYML2.mjs\");\n    const parser = createArchitectureServices2().Architecture.parser.LangiumParser;\n    parsers.architecture = parser;\n  }, \"architecture\"),\n  gitGraph: /* @__PURE__ */ __name(async () => {\n    const { createGitGraphServices: createGitGraphServices2 } = await import(\"./chunks/mermaid-parser.core/gitGraph-YCYPL57B.mjs\");\n    const parser = createGitGraphServices2().GitGraph.parser.LangiumParser;\n    parsers.gitGraph = parser;\n  }, \"gitGraph\")\n};\nasync function parse(diagramType, text) {\n  const initializer = initializers[diagramType];\n  if (!initializer) {\n    throw new Error(`Unknown diagram type: ${diagramType}`);\n  }\n  if (!parsers[diagramType]) {\n    await initializer();\n  }\n  const parser = parsers[diagramType];\n  const result = parser.parse(text);\n  if (result.lexerErrors.length > 0 || result.parserErrors.length > 0) {\n    throw new MermaidParseError(result);\n  }\n  return result.value;\n}\n__name(parse, \"parse\");\nvar MermaidParseError = class extends Error {\n  constructor(result) {\n    const lexerErrors = result.lexerErrors.map((err) => err.message).join(\"\\n\");\n    const parserErrors = result.parserErrors.map((err) => err.message).join(\"\\n\");\n    super(`Parsing failed: ${lexerErrors} ${parserErrors}`);\n    this.result = result;\n  }\n  static {\n    __name(this, \"MermaidParseError\");\n  }\n};\nexport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  ArchitectureModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  GitGraphModule,\n  Info,\n  InfoGeneratedModule,\n  InfoModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  MermaidParseError,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  PacketModule,\n  Pie,\n  PieGeneratedModule,\n  PieModule,\n  PieSection,\n  Statement,\n  createArchitectureServices,\n  createGitGraphServices,\n  createInfoServices,\n  createPacketServices,\n  createPieServices,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isCommon,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection,\n  parse\n};\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport function isAstNode(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$type === 'string';\n}\nexport function isReference(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$refText === 'string';\n}\nexport function isAstNodeDescription(obj) {\n    return typeof obj === 'object' && obj !== null\n        && typeof obj.name === 'string'\n        && typeof obj.type === 'string'\n        && typeof obj.path === 'string';\n}\nexport function isLinkingError(obj) {\n    return typeof obj === 'object' && obj !== null\n        && isAstNode(obj.container)\n        && isReference(obj.reference)\n        && typeof obj.message === 'string';\n}\n/**\n * An abstract implementation of the {@link AstReflection} interface.\n * Serves to cache subtype computation results to improve performance throughout different parts of Langium.\n */\nexport class AbstractAstReflection {\n    constructor() {\n        this.subtypes = {};\n        this.allSubtypes = {};\n    }\n    isInstance(node, type) {\n        return isAstNode(node) && this.isSubtype(node.$type, type);\n    }\n    isSubtype(subtype, supertype) {\n        if (subtype === supertype) {\n            return true;\n        }\n        let nested = this.subtypes[subtype];\n        if (!nested) {\n            nested = this.subtypes[subtype] = {};\n        }\n        const existing = nested[supertype];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            const result = this.computeIsSubtype(subtype, supertype);\n            nested[supertype] = result;\n            return result;\n        }\n    }\n    getAllSubTypes(type) {\n        const existing = this.allSubtypes[type];\n        if (existing) {\n            return existing;\n        }\n        else {\n            const allTypes = this.getAllTypes();\n            const types = [];\n            for (const possibleSubType of allTypes) {\n                if (this.isSubtype(possibleSubType, type)) {\n                    types.push(possibleSubType);\n                }\n            }\n            this.allSubtypes[type] = types;\n            return types;\n        }\n    }\n}\nexport function isCompositeCstNode(node) {\n    return typeof node === 'object' && node !== null && Array.isArray(node.content);\n}\nexport function isLeafCstNode(node) {\n    return typeof node === 'object' && node !== null && typeof node.tokenType === 'object';\n}\nexport function isRootCstNode(node) {\n    return isCompositeCstNode(node) && typeof node.fullText === 'string';\n}\n//# sourceMappingURL=syntax-tree.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * The default implementation of `Stream` works with two input functions:\n *  - The first function creates the initial state of an iteration.\n *  - The second function gets the current state as argument and returns an `IteratorResult`.\n */\nexport class StreamImpl {\n    constructor(startFn, nextFn) {\n        this.startFn = startFn;\n        this.nextFn = nextFn;\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    isEmpty() {\n        const iterator = this.iterator();\n        return Boolean(iterator.next().done);\n    }\n    count() {\n        const iterator = this.iterator();\n        let count = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            count++;\n            next = iterator.next();\n        }\n        return count;\n    }\n    toArray() {\n        const result = [];\n        const iterator = this.iterator();\n        let next;\n        do {\n            next = iterator.next();\n            if (next.value !== undefined) {\n                result.push(next.value);\n            }\n        } while (!next.done);\n        return result;\n    }\n    toSet() {\n        return new Set(this);\n    }\n    toMap(keyFn, valueFn) {\n        const entryStream = this.map(element => [\n            keyFn ? keyFn(element) : element,\n            valueFn ? valueFn(element) : element\n        ]);\n        return new Map(entryStream);\n    }\n    toString() {\n        return this.join();\n    }\n    concat(other) {\n        const iterator = other[Symbol.iterator]();\n        return new StreamImpl(() => ({ first: this.startFn(), firstDone: false }), state => {\n            let result;\n            if (!state.firstDone) {\n                do {\n                    result = this.nextFn(state.first);\n                    if (!result.done) {\n                        return result;\n                    }\n                } while (!result.done);\n                state.firstDone = true;\n            }\n            do {\n                result = iterator.next();\n                if (!result.done) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    join(separator = ',') {\n        const iterator = this.iterator();\n        let value = '';\n        let result;\n        let addSeparator = false;\n        do {\n            result = iterator.next();\n            if (!result.done) {\n                if (addSeparator) {\n                    value += separator;\n                }\n                value += toString(result.value);\n            }\n            addSeparator = true;\n        } while (!result.done);\n        return value;\n    }\n    indexOf(searchElement, fromIndex = 0) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (index >= fromIndex && next.value === searchElement) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    every(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (!predicate(next.value)) {\n                return false;\n            }\n            next = iterator.next();\n        }\n        return true;\n    }\n    some(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    forEach(callbackfn) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            callbackfn(next.value, index);\n            next = iterator.next();\n            index++;\n        }\n    }\n    map(callbackfn) {\n        return new StreamImpl(this.startFn, (state) => {\n            const { done, value } = this.nextFn(state);\n            if (done) {\n                return DONE_RESULT;\n            }\n            else {\n                return { done: false, value: callbackfn(value) };\n            }\n        });\n    }\n    filter(predicate) {\n        return new StreamImpl(this.startFn, state => {\n            let result;\n            do {\n                result = this.nextFn(state);\n                if (!result.done && predicate(result.value)) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    nonNullable() {\n        return this.filter(e => e !== undefined && e !== null);\n    }\n    reduce(callbackfn, initialValue) {\n        const iterator = this.iterator();\n        let previousValue = initialValue;\n        let next = iterator.next();\n        while (!next.done) {\n            if (previousValue === undefined) {\n                previousValue = next.value;\n            }\n            else {\n                previousValue = callbackfn(previousValue, next.value);\n            }\n            next = iterator.next();\n        }\n        return previousValue;\n    }\n    reduceRight(callbackfn, initialValue) {\n        return this.recursiveReduce(this.iterator(), callbackfn, initialValue);\n    }\n    recursiveReduce(iterator, callbackfn, initialValue) {\n        const next = iterator.next();\n        if (next.done) {\n            return initialValue;\n        }\n        const previousValue = this.recursiveReduce(iterator, callbackfn, initialValue);\n        if (previousValue === undefined) {\n            return next.value;\n        }\n        return callbackfn(previousValue, next.value);\n    }\n    find(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return next.value;\n            }\n            next = iterator.next();\n        }\n        return undefined;\n    }\n    findIndex(predicate) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    includes(searchElement) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (next.value === searchElement) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    flatMap(callbackfn) {\n        return new StreamImpl(() => ({ this: this.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = this.nextFn(state.this);\n                if (!done) {\n                    const mapped = callbackfn(value);\n                    if (isIterable(mapped)) {\n                        state.iterator = mapped[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: mapped };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    flat(depth) {\n        if (depth === undefined) {\n            depth = 1;\n        }\n        if (depth <= 0) {\n            return this;\n        }\n        const stream = depth > 1 ? this.flat(depth - 1) : this;\n        return new StreamImpl(() => ({ this: stream.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = stream.nextFn(state.this);\n                if (!done) {\n                    if (isIterable(value)) {\n                        state.iterator = value[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: value };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    head() {\n        const iterator = this.iterator();\n        const result = iterator.next();\n        if (result.done) {\n            return undefined;\n        }\n        return result.value;\n    }\n    tail(skipCount = 1) {\n        return new StreamImpl(() => {\n            const state = this.startFn();\n            for (let i = 0; i < skipCount; i++) {\n                const next = this.nextFn(state);\n                if (next.done) {\n                    return state;\n                }\n            }\n            return state;\n        }, this.nextFn);\n    }\n    limit(maxSize) {\n        return new StreamImpl(() => ({ size: 0, state: this.startFn() }), state => {\n            state.size++;\n            if (state.size > maxSize) {\n                return DONE_RESULT;\n            }\n            return this.nextFn(state.state);\n        });\n    }\n    distinct(by) {\n        const set = new Set();\n        return this.filter(e => {\n            const value = by ? by(e) : e;\n            if (set.has(value)) {\n                return false;\n            }\n            else {\n                set.add(value);\n                return true;\n            }\n        });\n    }\n    exclude(other, key) {\n        const otherKeySet = new Set();\n        for (const item of other) {\n            const value = key ? key(item) : item;\n            otherKeySet.add(value);\n        }\n        return this.filter(e => {\n            const ownKey = key ? key(e) : e;\n            return !otherKeySet.has(ownKey);\n        });\n    }\n}\nfunction toString(item) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    if (typeof item === 'undefined') {\n        return 'undefined';\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (typeof item.toString === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return item.toString();\n    }\n    return Object.prototype.toString.call(item);\n}\nfunction isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * An empty stream of any type.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const EMPTY_STREAM = new StreamImpl(() => undefined, () => DONE_RESULT);\n/**\n * Use this `IteratorResult` when implementing a `StreamImpl` to indicate that there are no more elements in the stream.\n */\nexport const DONE_RESULT = Object.freeze({ done: true, value: undefined });\n/**\n * Create a stream from one or more iterables or array-likes.\n */\nexport function stream(...collections) {\n    if (collections.length === 1) {\n        const collection = collections[0];\n        if (collection instanceof StreamImpl) {\n            return collection;\n        }\n        if (isIterable(collection)) {\n            return new StreamImpl(() => collection[Symbol.iterator](), (iterator) => iterator.next());\n        }\n        if (typeof collection.length === 'number') {\n            return new StreamImpl(() => ({ index: 0 }), (state) => {\n                if (state.index < collection.length) {\n                    return { done: false, value: collection[state.index++] };\n                }\n                else {\n                    return DONE_RESULT;\n                }\n            });\n        }\n    }\n    if (collections.length > 1) {\n        return new StreamImpl(() => ({ collIndex: 0, arrIndex: 0 }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (!next.done) {\n                        return next;\n                    }\n                    state.iterator = undefined;\n                }\n                if (state.array) {\n                    if (state.arrIndex < state.array.length) {\n                        return { done: false, value: state.array[state.arrIndex++] };\n                    }\n                    state.array = undefined;\n                    state.arrIndex = 0;\n                }\n                if (state.collIndex < collections.length) {\n                    const collection = collections[state.collIndex++];\n                    if (isIterable(collection)) {\n                        state.iterator = collection[Symbol.iterator]();\n                    }\n                    else if (collection && typeof collection.length === 'number') {\n                        state.array = collection;\n                    }\n                }\n            } while (state.iterator || state.array || state.collIndex < collections.length);\n            return DONE_RESULT;\n        });\n    }\n    return EMPTY_STREAM;\n}\n/**\n * The default implementation of `TreeStream` takes a root element and a function that computes the\n * children of its argument. Whether the root node included in the stream is controlled with the\n * `includeRoot` option, which defaults to `false`.\n */\nexport class TreeStreamImpl extends StreamImpl {\n    constructor(root, children, options) {\n        super(() => ({\n            iterators: (options === null || options === void 0 ? void 0 : options.includeRoot) ? [[root][Symbol.iterator]()] : [children(root)[Symbol.iterator]()],\n            pruned: false\n        }), state => {\n            if (state.pruned) {\n                state.iterators.pop();\n                state.pruned = false;\n            }\n            while (state.iterators.length > 0) {\n                const iterator = state.iterators[state.iterators.length - 1];\n                const next = iterator.next();\n                if (next.done) {\n                    state.iterators.pop();\n                }\n                else {\n                    state.iterators.push(children(next.value)[Symbol.iterator]());\n                    return next;\n                }\n            }\n            return DONE_RESULT;\n        });\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            prune: () => {\n                iterator.state.pruned = true;\n            },\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n}\n/**\n * A set of utility functions that reduce a stream to a single value.\n */\nexport var Reduction;\n(function (Reduction) {\n    /**\n     * Compute the sum of a number stream.\n     */\n    function sum(stream) {\n        return stream.reduce((a, b) => a + b, 0);\n    }\n    Reduction.sum = sum;\n    /**\n     * Compute the product of a number stream.\n     */\n    function product(stream) {\n        return stream.reduce((a, b) => a * b, 0);\n    }\n    Reduction.product = product;\n    /**\n     * Compute the minimum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function min(stream) {\n        return stream.reduce((a, b) => Math.min(a, b));\n    }\n    Reduction.min = min;\n    /**\n     * Compute the maximum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function max(stream) {\n        return stream.reduce((a, b) => Math.max(a, b));\n    }\n    Reduction.max = max;\n})(Reduction || (Reduction = {}));\n//# sourceMappingURL=stream.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCompositeCstNode, isLeafCstNode, isRootCstNode } from '../syntax-tree.js';\nimport { TreeStreamImpl } from './stream.js';\n/**\n * Create a stream of all CST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamCst(node) {\n    return new TreeStreamImpl(node, element => {\n        if (isCompositeCstNode(element)) {\n            return element.content;\n        }\n        else {\n            return [];\n        }\n    }, { includeRoot: true });\n}\n/**\n * Create a stream of all leaf nodes that are directly and indirectly contained in the given root node.\n */\nexport function flattenCst(node) {\n    return streamCst(node).filter(isLeafCstNode);\n}\n/**\n * Determines whether the specified cst node is a child of the specified parent node.\n */\nexport function isChildNode(child, parent) {\n    while (child.container) {\n        child = child.container;\n        if (child === parent) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tokenToRange(token) {\n    // Chevrotain uses 1-based indices everywhere\n    // So we subtract 1 from every value to align with the LSP\n    return {\n        start: {\n            character: token.startColumn - 1,\n            line: token.startLine - 1\n        },\n        end: {\n            character: token.endColumn,\n            line: token.endLine - 1\n        }\n    };\n}\nexport function toDocumentSegment(node) {\n    if (!node) {\n        return undefined;\n    }\n    const { offset, end, range } = node;\n    return {\n        range,\n        offset,\n        end,\n        length: end - offset\n    };\n}\nexport var RangeComparison;\n(function (RangeComparison) {\n    RangeComparison[RangeComparison[\"Before\"] = 0] = \"Before\";\n    RangeComparison[RangeComparison[\"After\"] = 1] = \"After\";\n    RangeComparison[RangeComparison[\"OverlapFront\"] = 2] = \"OverlapFront\";\n    RangeComparison[RangeComparison[\"OverlapBack\"] = 3] = \"OverlapBack\";\n    RangeComparison[RangeComparison[\"Inside\"] = 4] = \"Inside\";\n})(RangeComparison || (RangeComparison = {}));\nexport function compareRange(range, to) {\n    if (range.end.line < to.start.line || (range.end.line === to.start.line && range.end.character < range.start.character)) {\n        return RangeComparison.Before;\n    }\n    else if (range.start.line > to.end.line || (range.start.line === to.end.line && range.start.character > to.end.character)) {\n        return RangeComparison.After;\n    }\n    const startInside = range.start.line > to.start.line || (range.start.line === to.start.line && range.start.character >= to.start.character);\n    const endInside = range.end.line < to.end.line || (range.end.line === to.end.line && range.end.character <= to.end.character);\n    if (startInside && endInside) {\n        return RangeComparison.Inside;\n    }\n    else if (startInside) {\n        return RangeComparison.OverlapBack;\n    }\n    else {\n        return RangeComparison.OverlapFront;\n    }\n}\nexport function inRange(range, to) {\n    const comparison = compareRange(range, to);\n    return comparison > RangeComparison.After;\n}\n// The \\p{L} regex matches any unicode letter character, i.e. characters from non-english alphabets\n// Together with \\w it matches any kind of character which can commonly appear in IDs\nexport const DefaultNameRegexp = /^[\\w\\p{L}]$/u;\n/**\n * Performs `findLeafNodeAtOffset` with a minor difference: When encountering a character that matches the `nameRegexp` argument,\n * it will instead return the leaf node at the `offset - 1` position.\n *\n * For LSP services, users expect that the declaration of an element is available if the cursor is directly after the element.\n */\nexport function findDeclarationNodeAtOffset(cstNode, offset, nameRegexp = DefaultNameRegexp) {\n    if (cstNode) {\n        if (offset > 0) {\n            const localOffset = offset - cstNode.offset;\n            const textAtOffset = cstNode.text.charAt(localOffset);\n            if (!nameRegexp.test(textAtOffset)) {\n                offset--;\n            }\n        }\n        return findLeafNodeAtOffset(cstNode, offset);\n    }\n    return undefined;\n}\nexport function findCommentNode(cstNode, commentNames) {\n    if (cstNode) {\n        const previous = getPreviousNode(cstNode, true);\n        if (previous && isCommentNode(previous, commentNames)) {\n            return previous;\n        }\n        if (isRootCstNode(cstNode)) {\n            // Go from the first non-hidden node through all nodes in reverse order\n            // We do this to find the comment node which directly precedes the root node\n            const endIndex = cstNode.content.findIndex(e => !e.hidden);\n            for (let i = endIndex - 1; i >= 0; i--) {\n                const child = cstNode.content[i];\n                if (isCommentNode(child, commentNames)) {\n                    return child;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nexport function isCommentNode(cstNode, commentNames) {\n    return isLeafCstNode(cstNode) && commentNames.includes(cstNode.tokenType.name);\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * Note that the given offset will be within the range of the returned leaf node.\n *\n * If the offset does not point to a CST node (but just white space), this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node at the specified offset.\n */\nexport function findLeafNodeAtOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, false);\n        if (searchResult) {\n            return findLeafNodeAtOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * If no CST node exists at the specified position, it will return the leaf node before it.\n *\n * If there is no leaf node before the specified offset, this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node closest to the specified offset.\n */\nexport function findLeafNodeBeforeOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, true);\n        if (searchResult) {\n            return findLeafNodeBeforeOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\nfunction binarySearch(node, offset, closest) {\n    let left = 0;\n    let right = node.content.length - 1;\n    let closestNode = undefined;\n    while (left <= right) {\n        const middle = Math.floor((left + right) / 2);\n        const middleNode = node.content[middle];\n        if (middleNode.offset <= offset && middleNode.end > offset) {\n            // Found an exact match\n            return middleNode;\n        }\n        if (middleNode.end <= offset) {\n            // Update the closest node (less than offset) and move to the right half\n            closestNode = closest ? middleNode : undefined;\n            left = middle + 1;\n        }\n        else {\n            // Move to the left half\n            right = middle - 1;\n        }\n    }\n    return closestNode;\n}\nexport function getPreviousNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        while (index > 0) {\n            index--;\n            const previous = parent.content[index];\n            if (hidden || !previous.hidden) {\n                return previous;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getNextNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        const last = parent.content.length - 1;\n        while (index < last) {\n            index++;\n            const next = parent.content[index];\n            if (hidden || !next.hidden) {\n                return next;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getStartlineNode(node) {\n    if (node.range.start.character === 0) {\n        return node;\n    }\n    const line = node.range.start.line;\n    let last = node;\n    let index;\n    while (node.container) {\n        const parent = node.container;\n        const selfIndex = index !== null && index !== void 0 ? index : parent.content.indexOf(node);\n        if (selfIndex === 0) {\n            node = parent;\n            index = undefined;\n        }\n        else {\n            index = selfIndex - 1;\n            node = parent.content[index];\n        }\n        if (node.range.start.line !== line) {\n            break;\n        }\n        last = node;\n    }\n    return last;\n}\nexport function getInteriorNodes(start, end) {\n    const commonParent = getCommonParent(start, end);\n    if (!commonParent) {\n        return [];\n    }\n    return commonParent.parent.content.slice(commonParent.a + 1, commonParent.b);\n}\nfunction getCommonParent(a, b) {\n    const aParents = getParentChain(a);\n    const bParents = getParentChain(b);\n    let current;\n    for (let i = 0; i < aParents.length && i < bParents.length; i++) {\n        const aParent = aParents[i];\n        const bParent = bParents[i];\n        if (aParent.parent === bParent.parent) {\n            current = {\n                parent: aParent.parent,\n                a: aParent.index,\n                b: bParent.index\n            };\n        }\n        else {\n            break;\n        }\n    }\n    return current;\n}\nfunction getParentChain(node) {\n    const chain = [];\n    while (node.container) {\n        const parent = node.container;\n        const index = parent.content.indexOf(node);\n        chain.push({\n            parent,\n            index\n        });\n        node = parent;\n    }\n    return chain.reverse();\n}\n//# sourceMappingURL=cst-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class ErrorWithLocation extends Error {\n    constructor(node, message) {\n        super(node ? `${message} at ${node.range.start.line}:${node.range.start.character}` : message);\n    }\n}\nexport function assertUnreachable(_) {\n    throw new Error('Error! The input value was not handled.');\n}\n//# sourceMappingURL=errors.js.map","/******************************************************************************\n * This file was generated by langium-cli 3.0.0.\n * DO NOT EDIT MANUALLY!\n ******************************************************************************/\nimport { AbstractAstReflection } from '../../syntax-tree.js';\nexport const LangiumGrammarTerminals = {\n    ID: /\\^?[_a-zA-Z][\\w_]*/,\n    STRING: /\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*'/,\n    NUMBER: /NaN|-?((\\d*\\.\\d+|\\d+)([Ee][+-]?\\d+)?|Infinity)/,\n    RegexLiteral: /\\/(?![*+?])(?:[^\\r\\n\\[/\\\\]|\\\\.|\\[(?:[^\\r\\n\\]\\\\]|\\\\.)*\\])+\\/[a-z]*/,\n    WS: /\\s+/,\n    ML_COMMENT: /\\/\\*[\\s\\S]*?\\*\\//,\n    SL_COMMENT: /\\/\\/[^\\n\\r]*/,\n};\nexport const AbstractRule = 'AbstractRule';\nexport function isAbstractRule(item) {\n    return reflection.isInstance(item, AbstractRule);\n}\nexport const AbstractType = 'AbstractType';\nexport function isAbstractType(item) {\n    return reflection.isInstance(item, AbstractType);\n}\nexport const Condition = 'Condition';\nexport function isCondition(item) {\n    return reflection.isInstance(item, Condition);\n}\nexport function isFeatureName(item) {\n    return isPrimitiveType(item) || item === 'current' || item === 'entry' || item === 'extends' || item === 'false' || item === 'fragment' || item === 'grammar' || item === 'hidden' || item === 'import' || item === 'interface' || item === 'returns' || item === 'terminal' || item === 'true' || item === 'type' || item === 'infer' || item === 'infers' || item === 'with' || (typeof item === 'string' && (/\\^?[_a-zA-Z][\\w_]*/.test(item)));\n}\nexport function isPrimitiveType(item) {\n    return item === 'string' || item === 'number' || item === 'boolean' || item === 'Date' || item === 'bigint';\n}\nexport const TypeDefinition = 'TypeDefinition';\nexport function isTypeDefinition(item) {\n    return reflection.isInstance(item, TypeDefinition);\n}\nexport const ValueLiteral = 'ValueLiteral';\nexport function isValueLiteral(item) {\n    return reflection.isInstance(item, ValueLiteral);\n}\nexport const AbstractElement = 'AbstractElement';\nexport function isAbstractElement(item) {\n    return reflection.isInstance(item, AbstractElement);\n}\nexport const ArrayLiteral = 'ArrayLiteral';\nexport function isArrayLiteral(item) {\n    return reflection.isInstance(item, ArrayLiteral);\n}\nexport const ArrayType = 'ArrayType';\nexport function isArrayType(item) {\n    return reflection.isInstance(item, ArrayType);\n}\nexport const BooleanLiteral = 'BooleanLiteral';\nexport function isBooleanLiteral(item) {\n    return reflection.isInstance(item, BooleanLiteral);\n}\nexport const Conjunction = 'Conjunction';\nexport function isConjunction(item) {\n    return reflection.isInstance(item, Conjunction);\n}\nexport const Disjunction = 'Disjunction';\nexport function isDisjunction(item) {\n    return reflection.isInstance(item, Disjunction);\n}\nexport const Grammar = 'Grammar';\nexport function isGrammar(item) {\n    return reflection.isInstance(item, Grammar);\n}\nexport const GrammarImport = 'GrammarImport';\nexport function isGrammarImport(item) {\n    return reflection.isInstance(item, GrammarImport);\n}\nexport const InferredType = 'InferredType';\nexport function isInferredType(item) {\n    return reflection.isInstance(item, InferredType);\n}\nexport const Interface = 'Interface';\nexport function isInterface(item) {\n    return reflection.isInstance(item, Interface);\n}\nexport const NamedArgument = 'NamedArgument';\nexport function isNamedArgument(item) {\n    return reflection.isInstance(item, NamedArgument);\n}\nexport const Negation = 'Negation';\nexport function isNegation(item) {\n    return reflection.isInstance(item, Negation);\n}\nexport const NumberLiteral = 'NumberLiteral';\nexport function isNumberLiteral(item) {\n    return reflection.isInstance(item, NumberLiteral);\n}\nexport const Parameter = 'Parameter';\nexport function isParameter(item) {\n    return reflection.isInstance(item, Parameter);\n}\nexport const ParameterReference = 'ParameterReference';\nexport function isParameterReference(item) {\n    return reflection.isInstance(item, ParameterReference);\n}\nexport const ParserRule = 'ParserRule';\nexport function isParserRule(item) {\n    return reflection.isInstance(item, ParserRule);\n}\nexport const ReferenceType = 'ReferenceType';\nexport function isReferenceType(item) {\n    return reflection.isInstance(item, ReferenceType);\n}\nexport const ReturnType = 'ReturnType';\nexport function isReturnType(item) {\n    return reflection.isInstance(item, ReturnType);\n}\nexport const SimpleType = 'SimpleType';\nexport function isSimpleType(item) {\n    return reflection.isInstance(item, SimpleType);\n}\nexport const StringLiteral = 'StringLiteral';\nexport function isStringLiteral(item) {\n    return reflection.isInstance(item, StringLiteral);\n}\nexport const TerminalRule = 'TerminalRule';\nexport function isTerminalRule(item) {\n    return reflection.isInstance(item, TerminalRule);\n}\nexport const Type = 'Type';\nexport function isType(item) {\n    return reflection.isInstance(item, Type);\n}\nexport const TypeAttribute = 'TypeAttribute';\nexport function isTypeAttribute(item) {\n    return reflection.isInstance(item, TypeAttribute);\n}\nexport const UnionType = 'UnionType';\nexport function isUnionType(item) {\n    return reflection.isInstance(item, UnionType);\n}\nexport const Action = 'Action';\nexport function isAction(item) {\n    return reflection.isInstance(item, Action);\n}\nexport const Alternatives = 'Alternatives';\nexport function isAlternatives(item) {\n    return reflection.isInstance(item, Alternatives);\n}\nexport const Assignment = 'Assignment';\nexport function isAssignment(item) {\n    return reflection.isInstance(item, Assignment);\n}\nexport const CharacterRange = 'CharacterRange';\nexport function isCharacterRange(item) {\n    return reflection.isInstance(item, CharacterRange);\n}\nexport const CrossReference = 'CrossReference';\nexport function isCrossReference(item) {\n    return reflection.isInstance(item, CrossReference);\n}\nexport const EndOfFile = 'EndOfFile';\nexport function isEndOfFile(item) {\n    return reflection.isInstance(item, EndOfFile);\n}\nexport const Group = 'Group';\nexport function isGroup(item) {\n    return reflection.isInstance(item, Group);\n}\nexport const Keyword = 'Keyword';\nexport function isKeyword(item) {\n    return reflection.isInstance(item, Keyword);\n}\nexport const NegatedToken = 'NegatedToken';\nexport function isNegatedToken(item) {\n    return reflection.isInstance(item, NegatedToken);\n}\nexport const RegexToken = 'RegexToken';\nexport function isRegexToken(item) {\n    return reflection.isInstance(item, RegexToken);\n}\nexport const RuleCall = 'RuleCall';\nexport function isRuleCall(item) {\n    return reflection.isInstance(item, RuleCall);\n}\nexport const TerminalAlternatives = 'TerminalAlternatives';\nexport function isTerminalAlternatives(item) {\n    return reflection.isInstance(item, TerminalAlternatives);\n}\nexport const TerminalGroup = 'TerminalGroup';\nexport function isTerminalGroup(item) {\n    return reflection.isInstance(item, TerminalGroup);\n}\nexport const TerminalRuleCall = 'TerminalRuleCall';\nexport function isTerminalRuleCall(item) {\n    return reflection.isInstance(item, TerminalRuleCall);\n}\nexport const UnorderedGroup = 'UnorderedGroup';\nexport function isUnorderedGroup(item) {\n    return reflection.isInstance(item, UnorderedGroup);\n}\nexport const UntilToken = 'UntilToken';\nexport function isUntilToken(item) {\n    return reflection.isInstance(item, UntilToken);\n}\nexport const Wildcard = 'Wildcard';\nexport function isWildcard(item) {\n    return reflection.isInstance(item, Wildcard);\n}\nexport class LangiumGrammarAstReflection extends AbstractAstReflection {\n    getAllTypes() {\n        return ['AbstractElement', 'AbstractRule', 'AbstractType', 'Action', 'Alternatives', 'ArrayLiteral', 'ArrayType', 'Assignment', 'BooleanLiteral', 'CharacterRange', 'Condition', 'Conjunction', 'CrossReference', 'Disjunction', 'EndOfFile', 'Grammar', 'GrammarImport', 'Group', 'InferredType', 'Interface', 'Keyword', 'NamedArgument', 'NegatedToken', 'Negation', 'NumberLiteral', 'Parameter', 'ParameterReference', 'ParserRule', 'ReferenceType', 'RegexToken', 'ReturnType', 'RuleCall', 'SimpleType', 'StringLiteral', 'TerminalAlternatives', 'TerminalGroup', 'TerminalRule', 'TerminalRuleCall', 'Type', 'TypeAttribute', 'TypeDefinition', 'UnionType', 'UnorderedGroup', 'UntilToken', 'ValueLiteral', 'Wildcard'];\n    }\n    computeIsSubtype(subtype, supertype) {\n        switch (subtype) {\n            case Action:\n            case Alternatives:\n            case Assignment:\n            case CharacterRange:\n            case CrossReference:\n            case EndOfFile:\n            case Group:\n            case Keyword:\n            case NegatedToken:\n            case RegexToken:\n            case RuleCall:\n            case TerminalAlternatives:\n            case TerminalGroup:\n            case TerminalRuleCall:\n            case UnorderedGroup:\n            case UntilToken:\n            case Wildcard: {\n                return this.isSubtype(AbstractElement, supertype);\n            }\n            case ArrayLiteral:\n            case NumberLiteral:\n            case StringLiteral: {\n                return this.isSubtype(ValueLiteral, supertype);\n            }\n            case ArrayType:\n            case ReferenceType:\n            case SimpleType:\n            case UnionType: {\n                return this.isSubtype(TypeDefinition, supertype);\n            }\n            case BooleanLiteral: {\n                return this.isSubtype(Condition, supertype) || this.isSubtype(ValueLiteral, supertype);\n            }\n            case Conjunction:\n            case Disjunction:\n            case Negation:\n            case ParameterReference: {\n                return this.isSubtype(Condition, supertype);\n            }\n            case InferredType:\n            case Interface:\n            case Type: {\n                return this.isSubtype(AbstractType, supertype);\n            }\n            case ParserRule: {\n                return this.isSubtype(AbstractRule, supertype) || this.isSubtype(AbstractType, supertype);\n            }\n            case TerminalRule: {\n                return this.isSubtype(AbstractRule, supertype);\n            }\n            default: {\n                return false;\n            }\n        }\n    }\n    getReferenceType(refInfo) {\n        const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n        switch (referenceId) {\n            case 'Action:type':\n            case 'CrossReference:type':\n            case 'Interface:superTypes':\n            case 'ParserRule:returnType':\n            case 'SimpleType:typeRef': {\n                return AbstractType;\n            }\n            case 'Grammar:hiddenTokens':\n            case 'ParserRule:hiddenTokens':\n            case 'RuleCall:rule': {\n                return AbstractRule;\n            }\n            case 'Grammar:usedGrammars': {\n                return Grammar;\n            }\n            case 'NamedArgument:parameter':\n            case 'ParameterReference:parameter': {\n                return Parameter;\n            }\n            case 'TerminalRuleCall:rule': {\n                return TerminalRule;\n            }\n            default: {\n                throw new Error(`${referenceId} is not a valid reference id.`);\n            }\n        }\n    }\n    getTypeMetaData(type) {\n        switch (type) {\n            case 'AbstractElement': {\n                return {\n                    name: 'AbstractElement',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'ArrayLiteral': {\n                return {\n                    name: 'ArrayLiteral',\n                    properties: [\n                        { name: 'elements', defaultValue: [] }\n                    ]\n                };\n            }\n            case 'ArrayType': {\n                return {\n                    name: 'ArrayType',\n                    properties: [\n                        { name: 'elementType' }\n                    ]\n                };\n            }\n            case 'BooleanLiteral': {\n                return {\n                    name: 'BooleanLiteral',\n                    properties: [\n                        { name: 'true', defaultValue: false }\n                    ]\n                };\n            }\n            case 'Conjunction': {\n                return {\n                    name: 'Conjunction',\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case 'Disjunction': {\n                return {\n                    name: 'Disjunction',\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case 'Grammar': {\n                return {\n                    name: 'Grammar',\n                    properties: [\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'imports', defaultValue: [] },\n                        { name: 'interfaces', defaultValue: [] },\n                        { name: 'isDeclared', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'rules', defaultValue: [] },\n                        { name: 'types', defaultValue: [] },\n                        { name: 'usedGrammars', defaultValue: [] }\n                    ]\n                };\n            }\n            case 'GrammarImport': {\n                return {\n                    name: 'GrammarImport',\n                    properties: [\n                        { name: 'path' }\n                    ]\n                };\n            }\n            case 'InferredType': {\n                return {\n                    name: 'InferredType',\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case 'Interface': {\n                return {\n                    name: 'Interface',\n                    properties: [\n                        { name: 'attributes', defaultValue: [] },\n                        { name: 'name' },\n                        { name: 'superTypes', defaultValue: [] }\n                    ]\n                };\n            }\n            case 'NamedArgument': {\n                return {\n                    name: 'NamedArgument',\n                    properties: [\n                        { name: 'calledByName', defaultValue: false },\n                        { name: 'parameter' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case 'Negation': {\n                return {\n                    name: 'Negation',\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case 'NumberLiteral': {\n                return {\n                    name: 'NumberLiteral',\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case 'Parameter': {\n                return {\n                    name: 'Parameter',\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case 'ParameterReference': {\n                return {\n                    name: 'ParameterReference',\n                    properties: [\n                        { name: 'parameter' }\n                    ]\n                };\n            }\n            case 'ParserRule': {\n                return {\n                    name: 'ParserRule',\n                    properties: [\n                        { name: 'dataType' },\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'definition' },\n                        { name: 'entry', defaultValue: false },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'inferredType' },\n                        { name: 'name' },\n                        { name: 'parameters', defaultValue: [] },\n                        { name: 'returnType' },\n                        { name: 'wildcard', defaultValue: false }\n                    ]\n                };\n            }\n            case 'ReferenceType': {\n                return {\n                    name: 'ReferenceType',\n                    properties: [\n                        { name: 'referenceType' }\n                    ]\n                };\n            }\n            case 'ReturnType': {\n                return {\n                    name: 'ReturnType',\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case 'SimpleType': {\n                return {\n                    name: 'SimpleType',\n                    properties: [\n                        { name: 'primitiveType' },\n                        { name: 'stringType' },\n                        { name: 'typeRef' }\n                    ]\n                };\n            }\n            case 'StringLiteral': {\n                return {\n                    name: 'StringLiteral',\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case 'TerminalRule': {\n                return {\n                    name: 'TerminalRule',\n                    properties: [\n                        { name: 'definition' },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hidden', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case 'Type': {\n                return {\n                    name: 'Type',\n                    properties: [\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case 'TypeAttribute': {\n                return {\n                    name: 'TypeAttribute',\n                    properties: [\n                        { name: 'defaultValue' },\n                        { name: 'isOptional', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case 'UnionType': {\n                return {\n                    name: 'UnionType',\n                    properties: [\n                        { name: 'types', defaultValue: [] }\n                    ]\n                };\n            }\n            case 'Action': {\n                return {\n                    name: 'Action',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'inferredType' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case 'Alternatives': {\n                return {\n                    name: 'Alternatives',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'Assignment': {\n                return {\n                    name: 'Assignment',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case 'CharacterRange': {\n                return {\n                    name: 'CharacterRange',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'left' },\n                        { name: 'lookahead' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case 'CrossReference': {\n                return {\n                    name: 'CrossReference',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'deprecatedSyntax', defaultValue: false },\n                        { name: 'lookahead' },\n                        { name: 'terminal' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case 'EndOfFile': {\n                return {\n                    name: 'EndOfFile',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'Group': {\n                return {\n                    name: 'Group',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'guardCondition' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'Keyword': {\n                return {\n                    name: 'Keyword',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case 'NegatedToken': {\n                return {\n                    name: 'NegatedToken',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case 'RegexToken': {\n                return {\n                    name: 'RegexToken',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'regex' }\n                    ]\n                };\n            }\n            case 'RuleCall': {\n                return {\n                    name: 'RuleCall',\n                    properties: [\n                        { name: 'arguments', defaultValue: [] },\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case 'TerminalAlternatives': {\n                return {\n                    name: 'TerminalAlternatives',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'TerminalGroup': {\n                return {\n                    name: 'TerminalGroup',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'TerminalRuleCall': {\n                return {\n                    name: 'TerminalRuleCall',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case 'UnorderedGroup': {\n                return {\n                    name: 'UnorderedGroup',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'UntilToken': {\n                return {\n                    name: 'UntilToken',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case 'Wildcard': {\n                return {\n                    name: 'Wildcard',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            default: {\n                return {\n                    name: type,\n                    properties: []\n                };\n            }\n        }\n    }\n}\nexport const reflection = new LangiumGrammarAstReflection();\n//# sourceMappingURL=ast.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { DONE_RESULT, stream, StreamImpl, TreeStreamImpl } from './stream.js';\nimport { inRange } from './cst-utils.js';\n/**\n * Link the `$container` and other related properties of every AST node that is directly contained\n * in the given `node`.\n */\nexport function linkContentToContainer(node) {\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (Array.isArray(value)) {\n                value.forEach((item, index) => {\n                    if (isAstNode(item)) {\n                        item.$container = node;\n                        item.$containerProperty = name;\n                        item.$containerIndex = index;\n                    }\n                });\n            }\n            else if (isAstNode(value)) {\n                value.$container = node;\n                value.$containerProperty = name;\n            }\n        }\n    }\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and return the first\n * node that matches the type predicate. If the start node itself matches, it is returned.\n * If no container matches, `undefined` is returned.\n */\nexport function getContainerOfType(node, typePredicate) {\n    let item = node;\n    while (item) {\n        if (typePredicate(item)) {\n            return item;\n        }\n        item = item.$container;\n    }\n    return undefined;\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and check for existence\n * of a container that matches the given predicate. The start node is included in the checks.\n */\nexport function hasContainerOfType(node, predicate) {\n    let item = node;\n    while (item) {\n        if (predicate(item)) {\n            return true;\n        }\n        item = item.$container;\n    }\n    return false;\n}\n/**\n * Retrieve the document in which the given AST node is contained. A reference to the document is\n * usually held by the root node of the AST.\n *\n * @throws an error if the node is not contained in a document.\n */\nexport function getDocument(node) {\n    const rootNode = findRootNode(node);\n    const result = rootNode.$document;\n    if (!result) {\n        throw new Error('AST node has no document.');\n    }\n    return result;\n}\n/**\n * Returns the root node of the given AST node by following the `$container` references.\n */\nexport function findRootNode(node) {\n    while (node.$container) {\n        node = node.$container;\n    }\n    return node;\n}\n/**\n * Create a stream of all AST nodes that are directly contained in the given node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamContents(node, options) {\n    if (!node) {\n        throw new Error('Node must be an AstNode.');\n    }\n    const range = options === null || options === void 0 ? void 0 : options.range;\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isAstNode(value)) {\n                    state.keyIndex++;\n                    if (isAstNodeInRange(value, range)) {\n                        return { done: false, value };\n                    }\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isAstNode(element) && isAstNodeInRange(element, range)) {\n                            return { done: false, value: element };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node.\n * This does not include the root node itself.\n */\nexport function streamAllContents(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options));\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamAst(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    else if ((options === null || options === void 0 ? void 0 : options.range) && !isAstNodeInRange(root, options.range)) {\n        // Return an empty stream if the root node isn't in range\n        return new TreeStreamImpl(root, () => []);\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options), { includeRoot: true });\n}\nfunction isAstNodeInRange(astNode, range) {\n    var _a;\n    if (!range) {\n        return true;\n    }\n    const nodeRange = (_a = astNode.$cstNode) === null || _a === void 0 ? void 0 : _a.range;\n    if (!nodeRange) {\n        return false;\n    }\n    return inRange(nodeRange, range);\n}\n/**\n * Create a stream of all cross-references that are held by the given AST node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamReferences(node) {\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isReference(value)) {\n                    state.keyIndex++;\n                    return { done: false, value: { reference: value, container: node, property } };\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isReference(element)) {\n                            return { done: false, value: { reference: element, container: node, property, index } };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Returns a Stream of references to the target node from the AstNode tree\n *\n * @param targetNode AstNode we are looking for\n * @param lookup AstNode where we search for references. If not provided, the root node of the document is used as the default value\n */\nexport function findLocalReferences(targetNode, lookup = getDocument(targetNode).parseResult.value) {\n    const refs = [];\n    streamAst(lookup).forEach(node => {\n        streamReferences(node).forEach(refInfo => {\n            if (refInfo.reference.ref === targetNode) {\n                refs.push(refInfo.reference);\n            }\n        });\n    });\n    return stream(refs);\n}\n/**\n * Assigns all mandatory AST properties to the specified node.\n *\n * @param reflection Reflection object used to gather mandatory properties for the node.\n * @param node Specified node is modified in place and properties are directly assigned.\n */\nexport function assignMandatoryProperties(reflection, node) {\n    const typeMetaData = reflection.getTypeMetaData(node.$type);\n    const genericNode = node;\n    for (const property of typeMetaData.properties) {\n        // Only set the value if the property is not already set and if it has a default value\n        if (property.defaultValue !== undefined && genericNode[property.name] === undefined) {\n            genericNode[property.name] = copyDefaultValue(property.defaultValue);\n        }\n    }\n}\nfunction copyDefaultValue(propertyType) {\n    if (Array.isArray(propertyType)) {\n        return [...propertyType.map(copyDefaultValue)];\n    }\n    else {\n        return propertyType;\n    }\n}\n/**\n * Creates a deep copy of the specified AST node.\n * The resulting copy will only contain semantically relevant information, such as the `$type` property and AST properties.\n *\n * References are copied without resolved cross reference. The specified function is used to rebuild them.\n */\nexport function copyAstNode(node, buildReference) {\n    const copy = { $type: node.$type };\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (isAstNode(value)) {\n                copy[name] = copyAstNode(value, buildReference);\n            }\n            else if (isReference(value)) {\n                copy[name] = buildReference(copy, name, value.$refNode, value.$refText);\n            }\n            else if (Array.isArray(value)) {\n                const copiedArray = [];\n                for (const element of value) {\n                    if (isAstNode(element)) {\n                        copiedArray.push(copyAstNode(element, buildReference));\n                    }\n                    else if (isReference(element)) {\n                        copiedArray.push(buildReference(copy, name, element.$refNode, element.$refText));\n                    }\n                    else {\n                        copiedArray.push(element);\n                    }\n                }\n                copy[name] = copiedArray;\n            }\n            else {\n                copy[name] = value;\n            }\n        }\n    }\n    linkContentToContainer(copy);\n    return copy;\n}\n//# sourceMappingURL=ast-utils.js.map","export function cc(char) {\n    return char.charCodeAt(0);\n}\nexport function insertToSet(item, set) {\n    if (Array.isArray(item)) {\n        item.forEach(function (subItem) {\n            set.push(subItem);\n        });\n    }\n    else {\n        set.push(item);\n    }\n}\nexport function addFlag(flagObj, flagKey) {\n    if (flagObj[flagKey] === true) {\n        throw \"duplicate flag \" + flagKey;\n    }\n    const x = flagObj[flagKey];\n    flagObj[flagKey] = true;\n}\nexport function ASSERT_EXISTS(obj) {\n    // istanbul ignore next\n    if (obj === undefined) {\n        throw Error(\"Internal Error - Should never get here!\");\n    }\n    return true;\n}\n// istanbul ignore next\nexport function ASSERT_NEVER_REACH_HERE() {\n    throw Error(\"Internal Error - Should never get here!\");\n}\nexport function isCharacter(obj) {\n    return obj[\"type\"] === \"Character\";\n}\n//# sourceMappingURL=utils.js.map","import { cc } from \"./utils.js\";\nexport const digitsCharCodes = [];\nfor (let i = cc(\"0\"); i <= cc(\"9\"); i++) {\n    digitsCharCodes.push(i);\n}\nexport const wordCharCodes = [cc(\"_\")].concat(digitsCharCodes);\nfor (let i = cc(\"a\"); i <= cc(\"z\"); i++) {\n    wordCharCodes.push(i);\n}\nfor (let i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n    wordCharCodes.push(i);\n}\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\nexport const whitespaceCodes = [\n    cc(\" \"),\n    cc(\"\\f\"),\n    cc(\"\\n\"),\n    cc(\"\\r\"),\n    cc(\"\\t\"),\n    cc(\"\\v\"),\n    cc(\"\\t\"),\n    cc(\"\\u00a0\"),\n    cc(\"\\u1680\"),\n    cc(\"\\u2000\"),\n    cc(\"\\u2001\"),\n    cc(\"\\u2002\"),\n    cc(\"\\u2003\"),\n    cc(\"\\u2004\"),\n    cc(\"\\u2005\"),\n    cc(\"\\u2006\"),\n    cc(\"\\u2007\"),\n    cc(\"\\u2008\"),\n    cc(\"\\u2009\"),\n    cc(\"\\u200a\"),\n    cc(\"\\u2028\"),\n    cc(\"\\u2029\"),\n    cc(\"\\u202f\"),\n    cc(\"\\u205f\"),\n    cc(\"\\u3000\"),\n    cc(\"\\ufeff\"),\n];\n//# sourceMappingURL=character-classes.js.map","import { addFlag, ASSERT_EXISTS, ASSERT_NEVER_REACH_HERE, cc, insertToSet, isCharacter, } from \"./utils.js\";\nimport { digitsCharCodes, whitespaceCodes, wordCharCodes, } from \"./character-classes.js\";\n// consts and utilities\nconst hexDigitPattern = /[0-9a-fA-F]/;\nconst decimalPattern = /[0-9]/;\nconst decimalPatternNoZero = /[1-9]/;\n// https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n// https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\nexport class RegExpParser {\n    constructor() {\n        this.idx = 0;\n        this.input = \"\";\n        this.groupIdx = 0;\n    }\n    saveState() {\n        return {\n            idx: this.idx,\n            input: this.input,\n            groupIdx: this.groupIdx,\n        };\n    }\n    restoreState(newState) {\n        this.idx = newState.idx;\n        this.input = newState.input;\n        this.groupIdx = newState.groupIdx;\n    }\n    pattern(input) {\n        // parser state\n        this.idx = 0;\n        this.input = input;\n        this.groupIdx = 0;\n        this.consumeChar(\"/\");\n        const value = this.disjunction();\n        this.consumeChar(\"/\");\n        const flags = {\n            type: \"Flags\",\n            loc: { begin: this.idx, end: input.length },\n            global: false,\n            ignoreCase: false,\n            multiLine: false,\n            unicode: false,\n            sticky: false,\n        };\n        while (this.isRegExpFlag()) {\n            switch (this.popChar()) {\n                case \"g\":\n                    addFlag(flags, \"global\");\n                    break;\n                case \"i\":\n                    addFlag(flags, \"ignoreCase\");\n                    break;\n                case \"m\":\n                    addFlag(flags, \"multiLine\");\n                    break;\n                case \"u\":\n                    addFlag(flags, \"unicode\");\n                    break;\n                case \"y\":\n                    addFlag(flags, \"sticky\");\n                    break;\n            }\n        }\n        if (this.idx !== this.input.length) {\n            throw Error(\"Redundant input: \" + this.input.substring(this.idx));\n        }\n        return {\n            type: \"Pattern\",\n            flags: flags,\n            value: value,\n            loc: this.loc(0),\n        };\n    }\n    disjunction() {\n        const alts = [];\n        const begin = this.idx;\n        alts.push(this.alternative());\n        while (this.peekChar() === \"|\") {\n            this.consumeChar(\"|\");\n            alts.push(this.alternative());\n        }\n        return { type: \"Disjunction\", value: alts, loc: this.loc(begin) };\n    }\n    alternative() {\n        const terms = [];\n        const begin = this.idx;\n        while (this.isTerm()) {\n            terms.push(this.term());\n        }\n        return { type: \"Alternative\", value: terms, loc: this.loc(begin) };\n    }\n    term() {\n        if (this.isAssertion()) {\n            return this.assertion();\n        }\n        else {\n            return this.atom();\n        }\n    }\n    assertion() {\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"^\":\n                return {\n                    type: \"StartAnchor\",\n                    loc: this.loc(begin),\n                };\n            case \"$\":\n                return { type: \"EndAnchor\", loc: this.loc(begin) };\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.popChar()) {\n                    case \"b\":\n                        return {\n                            type: \"WordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                    case \"B\":\n                        return {\n                            type: \"NonWordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                }\n                // istanbul ignore next\n                throw Error(\"Invalid Assertion Escape\");\n            // '(?=' or '(?!'\n            case \"(\":\n                this.consumeChar(\"?\");\n                let type;\n                switch (this.popChar()) {\n                    case \"=\":\n                        type = \"Lookahead\";\n                        break;\n                    case \"!\":\n                        type = \"NegativeLookahead\";\n                        break;\n                }\n                ASSERT_EXISTS(type);\n                const disjunction = this.disjunction();\n                this.consumeChar(\")\");\n                return {\n                    type: type,\n                    value: disjunction,\n                    loc: this.loc(begin),\n                };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    quantifier(isBacktracking = false) {\n        let range = undefined;\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"*\":\n                range = {\n                    atLeast: 0,\n                    atMost: Infinity,\n                };\n                break;\n            case \"+\":\n                range = {\n                    atLeast: 1,\n                    atMost: Infinity,\n                };\n                break;\n            case \"?\":\n                range = {\n                    atLeast: 0,\n                    atMost: 1,\n                };\n                break;\n            case \"{\":\n                const atLeast = this.integerIncludingZero();\n                switch (this.popChar()) {\n                    case \"}\":\n                        range = {\n                            atLeast: atLeast,\n                            atMost: atLeast,\n                        };\n                        break;\n                    case \",\":\n                        let atMost;\n                        if (this.isDigit()) {\n                            atMost = this.integerIncludingZero();\n                            range = {\n                                atLeast: atLeast,\n                                atMost: atMost,\n                            };\n                        }\n                        else {\n                            range = {\n                                atLeast: atLeast,\n                                atMost: Infinity,\n                            };\n                        }\n                        this.consumeChar(\"}\");\n                        break;\n                }\n                // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n                // causes severe performance degradations\n                if (isBacktracking === true && range === undefined) {\n                    return undefined;\n                }\n                ASSERT_EXISTS(range);\n                break;\n        }\n        // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n        // causes severe performance degradations\n        if (isBacktracking === true && range === undefined) {\n            return undefined;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(range)) {\n            if (this.peekChar(0) === \"?\") {\n                this.consumeChar(\"?\");\n                range.greedy = false;\n            }\n            else {\n                range.greedy = true;\n            }\n            range.type = \"Quantifier\";\n            range.loc = this.loc(begin);\n            return range;\n        }\n    }\n    atom() {\n        let atom;\n        const begin = this.idx;\n        switch (this.peekChar()) {\n            case \".\":\n                atom = this.dotAll();\n                break;\n            case \"\\\\\":\n                atom = this.atomEscape();\n                break;\n            case \"[\":\n                atom = this.characterClass();\n                break;\n            case \"(\":\n                atom = this.group();\n                break;\n        }\n        if (atom === undefined && this.isPatternCharacter()) {\n            atom = this.patternCharacter();\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(atom)) {\n            atom.loc = this.loc(begin);\n            if (this.isQuantifier()) {\n                atom.quantifier = this.quantifier();\n            }\n            return atom;\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    dotAll() {\n        this.consumeChar(\".\");\n        return {\n            type: \"Set\",\n            complement: true,\n            value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")],\n        };\n    }\n    atomEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                return this.decimalEscapeAtom();\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    decimalEscapeAtom() {\n        const value = this.positiveInteger();\n        return { type: \"GroupBackReference\", value: value };\n    }\n    characterClassEscape() {\n        let set;\n        let complement = false;\n        switch (this.popChar()) {\n            case \"d\":\n                set = digitsCharCodes;\n                break;\n            case \"D\":\n                set = digitsCharCodes;\n                complement = true;\n                break;\n            case \"s\":\n                set = whitespaceCodes;\n                break;\n            case \"S\":\n                set = whitespaceCodes;\n                complement = true;\n                break;\n            case \"w\":\n                set = wordCharCodes;\n                break;\n            case \"W\":\n                set = wordCharCodes;\n                complement = true;\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(set)) {\n            return { type: \"Set\", value: set, complement: complement };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlEscapeAtom() {\n        let escapeCode;\n        switch (this.popChar()) {\n            case \"f\":\n                escapeCode = cc(\"\\f\");\n                break;\n            case \"n\":\n                escapeCode = cc(\"\\n\");\n                break;\n            case \"r\":\n                escapeCode = cc(\"\\r\");\n                break;\n            case \"t\":\n                escapeCode = cc(\"\\t\");\n                break;\n            case \"v\":\n                escapeCode = cc(\"\\v\");\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(escapeCode)) {\n            return { type: \"Character\", value: escapeCode };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlLetterEscapeAtom() {\n        this.consumeChar(\"c\");\n        const letter = this.popChar();\n        if (/[a-zA-Z]/.test(letter) === false) {\n            throw Error(\"Invalid \");\n        }\n        const letterCode = letter.toUpperCase().charCodeAt(0) - 64;\n        return { type: \"Character\", value: letterCode };\n    }\n    nulCharacterAtom() {\n        // TODO implement '[lookahead ∉ DecimalDigit]'\n        // TODO: for the deprecated octal escape sequence\n        this.consumeChar(\"0\");\n        return { type: \"Character\", value: cc(\"\\0\") };\n    }\n    hexEscapeSequenceAtom() {\n        this.consumeChar(\"x\");\n        return this.parseHexDigits(2);\n    }\n    regExpUnicodeEscapeSequenceAtom() {\n        this.consumeChar(\"u\");\n        return this.parseHexDigits(4);\n    }\n    identityEscapeAtom() {\n        // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n        // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n        const escapedChar = this.popChar();\n        return { type: \"Character\", value: cc(escapedChar) };\n    }\n    classPatternCharacterAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \"]\":\n                throw Error(\"TBD\");\n            default:\n                const nextChar = this.popChar();\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    characterClass() {\n        const set = [];\n        let complement = false;\n        this.consumeChar(\"[\");\n        if (this.peekChar(0) === \"^\") {\n            this.consumeChar(\"^\");\n            complement = true;\n        }\n        while (this.isClassAtom()) {\n            const from = this.classAtom();\n            const isFromSingleChar = from.type === \"Character\";\n            if (isCharacter(from) && this.isRangeDash()) {\n                this.consumeChar(\"-\");\n                const to = this.classAtom();\n                const isToSingleChar = to.type === \"Character\";\n                // a range can only be used when both sides are single characters\n                if (isCharacter(to)) {\n                    if (to.value < from.value) {\n                        throw Error(\"Range out of order in character class\");\n                    }\n                    set.push({ from: from.value, to: to.value });\n                }\n                else {\n                    // literal dash\n                    insertToSet(from.value, set);\n                    set.push(cc(\"-\"));\n                    insertToSet(to.value, set);\n                }\n            }\n            else {\n                insertToSet(from.value, set);\n            }\n        }\n        this.consumeChar(\"]\");\n        return { type: \"Set\", complement: complement, value: set };\n    }\n    classAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"]\":\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n                throw Error(\"TBD\");\n            case \"\\\\\":\n                return this.classEscape();\n            default:\n                return this.classPatternCharacterAtom();\n        }\n    }\n    classEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            // Matches a backspace.\n            // (Not to be confused with \\b word boundary outside characterClass)\n            case \"b\":\n                this.consumeChar(\"b\");\n                return { type: \"Character\", value: cc(\"\\u0008\") };\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    group() {\n        let capturing = true;\n        this.consumeChar(\"(\");\n        switch (this.peekChar(0)) {\n            case \"?\":\n                this.consumeChar(\"?\");\n                this.consumeChar(\":\");\n                capturing = false;\n                break;\n            default:\n                this.groupIdx++;\n                break;\n        }\n        const value = this.disjunction();\n        this.consumeChar(\")\");\n        const groupAst = {\n            type: \"Group\",\n            capturing: capturing,\n            value: value,\n        };\n        if (capturing) {\n            groupAst[\"idx\"] = this.groupIdx;\n        }\n        return groupAst;\n    }\n    positiveInteger() {\n        let number = this.popChar();\n        // istanbul ignore next - can't ever get here due to previous lookahead checks\n        // still implementing this error checking in case this ever changes.\n        if (decimalPatternNoZero.test(number) === false) {\n            throw Error(\"Expecting a positive integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    integerIncludingZero() {\n        let number = this.popChar();\n        if (decimalPattern.test(number) === false) {\n            throw Error(\"Expecting an integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    patternCharacter() {\n        const nextChar = this.popChar();\n        switch (nextChar) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"^\":\n            // istanbul ignore next\n            case \"$\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \".\":\n            // istanbul ignore next\n            case \"*\":\n            // istanbul ignore next\n            case \"+\":\n            // istanbul ignore next\n            case \"?\":\n            // istanbul ignore next\n            case \"(\":\n            // istanbul ignore next\n            case \")\":\n            // istanbul ignore next\n            case \"[\":\n            // istanbul ignore next\n            case \"|\":\n                // istanbul ignore next\n                throw Error(\"TBD\");\n            default:\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    isRegExpFlag() {\n        switch (this.peekChar(0)) {\n            case \"g\":\n            case \"i\":\n            case \"m\":\n            case \"u\":\n            case \"y\":\n                return true;\n            default:\n                return false;\n        }\n    }\n    isRangeDash() {\n        return this.peekChar() === \"-\" && this.isClassAtom(1);\n    }\n    isDigit() {\n        return decimalPattern.test(this.peekChar(0));\n    }\n    isClassAtom(howMuch = 0) {\n        switch (this.peekChar(howMuch)) {\n            case \"]\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    isTerm() {\n        return this.isAtom() || this.isAssertion();\n    }\n    isAtom() {\n        if (this.isPatternCharacter()) {\n            return true;\n        }\n        switch (this.peekChar(0)) {\n            case \".\":\n            case \"\\\\\": // atomEscape\n            case \"[\": // characterClass\n            // TODO: isAtom must be called before isAssertion - disambiguate\n            case \"(\": // group\n                return true;\n            default:\n                return false;\n        }\n    }\n    isAssertion() {\n        switch (this.peekChar(0)) {\n            case \"^\":\n            case \"$\":\n                return true;\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.peekChar(1)) {\n                    case \"b\":\n                    case \"B\":\n                        return true;\n                    default:\n                        return false;\n                }\n            // '(?=' or '(?!'\n            case \"(\":\n                return (this.peekChar(1) === \"?\" &&\n                    (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\"));\n            default:\n                return false;\n        }\n    }\n    isQuantifier() {\n        const prevState = this.saveState();\n        try {\n            return this.quantifier(true) !== undefined;\n        }\n        catch (e) {\n            return false;\n        }\n        finally {\n            this.restoreState(prevState);\n        }\n    }\n    isPatternCharacter() {\n        switch (this.peekChar()) {\n            case \"^\":\n            case \"$\":\n            case \"\\\\\":\n            case \".\":\n            case \"*\":\n            case \"+\":\n            case \"?\":\n            case \"(\":\n            case \")\":\n            case \"[\":\n            case \"|\":\n            case \"/\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    parseHexDigits(howMany) {\n        let hexString = \"\";\n        for (let i = 0; i < howMany; i++) {\n            const hexChar = this.popChar();\n            if (hexDigitPattern.test(hexChar) === false) {\n                throw Error(\"Expecting a HexDecimal digits\");\n            }\n            hexString += hexChar;\n        }\n        const charCode = parseInt(hexString, 16);\n        return { type: \"Character\", value: charCode };\n    }\n    peekChar(howMuch = 0) {\n        return this.input[this.idx + howMuch];\n    }\n    popChar() {\n        const nextChar = this.peekChar(0);\n        this.consumeChar(undefined);\n        return nextChar;\n    }\n    consumeChar(char) {\n        if (char !== undefined && this.input[this.idx] !== char) {\n            throw Error(\"Expected: '\" +\n                char +\n                \"' but found: '\" +\n                this.input[this.idx] +\n                \"' at offset: \" +\n                this.idx);\n        }\n        if (this.idx >= this.input.length) {\n            throw Error(\"Unexpected end of input\");\n        }\n        this.idx++;\n    }\n    loc(begin) {\n        return { begin: begin, end: this.idx };\n    }\n}\n//# sourceMappingURL=regexp-parser.js.map","export class BaseRegExpVisitor {\n    visitChildren(node) {\n        for (const key in node) {\n            const child = node[key];\n            /* istanbul ignore else */\n            if (node.hasOwnProperty(key)) {\n                if (child.type !== undefined) {\n                    this.visit(child);\n                }\n                else if (Array.isArray(child)) {\n                    child.forEach((subChild) => {\n                        this.visit(subChild);\n                    }, this);\n                }\n            }\n        }\n    }\n    visit(node) {\n        switch (node.type) {\n            case \"Pattern\":\n                this.visitPattern(node);\n                break;\n            case \"Flags\":\n                this.visitFlags(node);\n                break;\n            case \"Disjunction\":\n                this.visitDisjunction(node);\n                break;\n            case \"Alternative\":\n                this.visitAlternative(node);\n                break;\n            case \"StartAnchor\":\n                this.visitStartAnchor(node);\n                break;\n            case \"EndAnchor\":\n                this.visitEndAnchor(node);\n                break;\n            case \"WordBoundary\":\n                this.visitWordBoundary(node);\n                break;\n            case \"NonWordBoundary\":\n                this.visitNonWordBoundary(node);\n                break;\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                break;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                break;\n            case \"Character\":\n                this.visitCharacter(node);\n                break;\n            case \"Set\":\n                this.visitSet(node);\n                break;\n            case \"Group\":\n                this.visitGroup(node);\n                break;\n            case \"GroupBackReference\":\n                this.visitGroupBackReference(node);\n                break;\n            case \"Quantifier\":\n                this.visitQuantifier(node);\n                break;\n        }\n        this.visitChildren(node);\n    }\n    visitPattern(node) { }\n    visitFlags(node) { }\n    visitDisjunction(node) { }\n    visitAlternative(node) { }\n    // Assertion\n    visitStartAnchor(node) { }\n    visitEndAnchor(node) { }\n    visitWordBoundary(node) { }\n    visitNonWordBoundary(node) { }\n    visitLookahead(node) { }\n    visitNegativeLookahead(node) { }\n    // atoms\n    visitCharacter(node) { }\n    visitSet(node) { }\n    visitGroup(node) { }\n    visitGroupBackReference(node) { }\n    visitQuantifier(node) { }\n}\n//# sourceMappingURL=base-regexp-visitor.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { RegExpParser, BaseRegExpVisitor } from '@chevrotain/regexp-to-ast';\nexport const NEWLINE_REGEXP = /\\r?\\n/gm;\nconst regexpParser = new RegExpParser();\n/**\n * This class is in charge of heuristically identifying start/end tokens of terminals.\n *\n * The way this works is by doing the following:\n * 1. Traverse the regular expression in the \"start state\"\n * 2. Add any encountered sets/single characters to the \"start regexp\"\n * 3. Once we encounter any variable-length content (i.e. with quantifiers such as +/?/*), we enter the \"end state\"\n * 4. In the end state, any sets/single characters are added to an \"end stack\".\n * 5. If we re-encounter any variable-length content we reset the end stack\n * 6. We continue visiting the regex until the end, reseting the end stack and rebuilding it as necessary\n *\n * After traversing a regular expression the `startRegexp/endRegexp` properties allow access to the stored start/end of the terminal\n */\nclass TerminalRegExpVisitor extends BaseRegExpVisitor {\n    constructor() {\n        super(...arguments);\n        this.isStarting = true;\n        this.endRegexpStack = [];\n        this.multiline = false;\n    }\n    get endRegex() {\n        return this.endRegexpStack.join('');\n    }\n    reset(regex) {\n        this.multiline = false;\n        this.regex = regex;\n        this.startRegexp = '';\n        this.isStarting = true;\n        this.endRegexpStack = [];\n    }\n    visitGroup(node) {\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n    }\n    visitCharacter(node) {\n        const char = String.fromCharCode(node.value);\n        if (!this.multiline && char === '\\n') {\n            this.multiline = true;\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const escapedChar = escapeRegExp(char);\n            this.endRegexpStack.push(escapedChar);\n            if (this.isStarting) {\n                this.startRegexp += escapedChar;\n            }\n        }\n    }\n    visitSet(node) {\n        if (!this.multiline) {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            const regex = new RegExp(set);\n            this.multiline = Boolean('\\n'.match(regex));\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            this.endRegexpStack.push(set);\n            if (this.isStarting) {\n                this.startRegexp += set;\n            }\n        }\n    }\n    visitChildren(node) {\n        if (node.type === 'Group') {\n            // Ignore children of groups with quantifier (+/*/?)\n            // These groups are unrelated to start/end tokens of terminals\n            const group = node;\n            if (group.quantifier) {\n                return;\n            }\n        }\n        super.visitChildren(node);\n    }\n}\nconst visitor = new TerminalRegExpVisitor();\nexport function getTerminalParts(regexp) {\n    try {\n        if (typeof regexp !== 'string') {\n            regexp = regexp.source;\n        }\n        regexp = `/${regexp}/`;\n        const pattern = regexpParser.pattern(regexp);\n        const parts = [];\n        for (const alternative of pattern.value.value) {\n            visitor.reset(regexp);\n            visitor.visit(alternative);\n            parts.push({\n                start: visitor.startRegexp,\n                end: visitor.endRegex\n            });\n        }\n        return parts;\n    }\n    catch (_a) {\n        return [];\n    }\n}\nexport function isMultilineComment(regexp) {\n    try {\n        if (typeof regexp === 'string') {\n            regexp = new RegExp(regexp);\n        }\n        regexp = regexp.toString();\n        visitor.reset(regexp);\n        // Parsing the pattern might fail (since it's user code)\n        visitor.visit(regexpParser.pattern(regexp));\n        return visitor.multiline;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function isWhitespace(value) {\n    const regexp = typeof value === 'string' ? new RegExp(value) : value;\n    return regexp.test(' ');\n}\nexport function escapeRegExp(value) {\n    return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nexport function getCaseInsensitivePattern(keyword) {\n    return Array.prototype.map.call(keyword, letter => /\\w/.test(letter) ? `[${letter.toLowerCase()}${letter.toUpperCase()}]` : escapeRegExp(letter)).join('');\n}\n/**\n * Determines whether the given input has a partial match with the specified regex.\n * @param regex The regex to partially match against\n * @param input The input string\n * @returns Whether any match exists.\n */\nexport function partialMatches(regex, input) {\n    const partial = partialRegExp(regex);\n    const match = input.match(partial);\n    return !!match && match[0].length > 0;\n}\n/**\n * Builds a partial regex from the input regex. A partial regex is able to match incomplete input strings. E.g.\n * a partial regex constructed from `/ab/` is able to match the string `a` without needing a following `b` character. However it won't match `b` alone.\n * @param regex The input regex to be converted.\n * @returns A partial regex constructed from the input regex.\n */\nexport function partialRegExp(regex) {\n    if (typeof regex === 'string') {\n        regex = new RegExp(regex);\n    }\n    const re = regex, source = regex.source;\n    let i = 0;\n    function process() {\n        let result = '', tmp;\n        function appendRaw(nbChars) {\n            result += source.substr(i, nbChars);\n            i += nbChars;\n        }\n        function appendOptional(nbChars) {\n            result += '(?:' + source.substr(i, nbChars) + '|$)';\n            i += nbChars;\n        }\n        while (i < source.length) {\n            switch (source[i]) {\n                case '\\\\':\n                    switch (source[i + 1]) {\n                        case 'c':\n                            appendOptional(3);\n                            break;\n                        case 'x':\n                            appendOptional(4);\n                            break;\n                        case 'u':\n                            if (re.unicode) {\n                                if (source[i + 2] === '{') {\n                                    appendOptional(source.indexOf('}', i) - i + 1);\n                                }\n                                else {\n                                    appendOptional(6);\n                                }\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'p':\n                        case 'P':\n                            if (re.unicode) {\n                                appendOptional(source.indexOf('}', i) - i + 1);\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'k':\n                            appendOptional(source.indexOf('>', i) - i + 1);\n                            break;\n                        default:\n                            appendOptional(2);\n                            break;\n                    }\n                    break;\n                case '[':\n                    tmp = /\\[(?:\\\\.|.)*?\\]/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source) || [];\n                    appendOptional(tmp[0].length);\n                    break;\n                case '|':\n                case '^':\n                case '$':\n                case '*':\n                case '+':\n                case '?':\n                    appendRaw(1);\n                    break;\n                case '{':\n                    tmp = /\\{\\d+,?\\d*\\}/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source);\n                    if (tmp) {\n                        appendRaw(tmp[0].length);\n                    }\n                    else {\n                        appendOptional(1);\n                    }\n                    break;\n                case '(':\n                    if (source[i + 1] === '?') {\n                        switch (source[i + 2]) {\n                            case ':':\n                                result += '(?:';\n                                i += 3;\n                                result += process() + '|$)';\n                                break;\n                            case '=':\n                                result += '(?=';\n                                i += 3;\n                                result += process() + ')';\n                                break;\n                            case '!':\n                                tmp = i;\n                                i += 3;\n                                process();\n                                result += source.substr(tmp, i - tmp);\n                                break;\n                            case '<':\n                                switch (source[i + 3]) {\n                                    case '=':\n                                    case '!':\n                                        tmp = i;\n                                        i += 4;\n                                        process();\n                                        result += source.substr(tmp, i - tmp);\n                                        break;\n                                    default:\n                                        appendRaw(source.indexOf('>', i) - i + 1);\n                                        result += process() + '|$)';\n                                        break;\n                                }\n                                break;\n                        }\n                    }\n                    else {\n                        appendRaw(1);\n                        result += process() + '|$)';\n                    }\n                    break;\n                case ')':\n                    ++i;\n                    return result;\n                default:\n                    appendOptional(1);\n                    break;\n            }\n        }\n        return result;\n    }\n    return new RegExp(process(), regex.flags);\n}\n//# sourceMappingURL=regexp-utils.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../utils/errors.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { isCompositeCstNode } from '../syntax-tree.js';\nimport { getContainerOfType, streamAllContents } from './ast-utils.js';\nimport { streamCst } from './cst-utils.js';\nimport { escapeRegExp } from './regexp-utils.js';\n/**\n * Returns the entry rule of the given grammar, if any. If the grammar file does not contain an entry rule,\n * the result is `undefined`.\n */\nexport function getEntryRule(grammar) {\n    return grammar.rules.find(e => ast.isParserRule(e) && e.entry);\n}\n/**\n * Returns all hidden terminal rules of the given grammar, if any.\n */\nexport function getHiddenRules(grammar) {\n    return grammar.rules.filter((e) => ast.isTerminalRule(e) && e.hidden);\n}\n/**\n * Returns all rules that can be reached from the topmost rules of the specified grammar (entry and hidden terminal rules).\n *\n * @param grammar The grammar that contains all rules\n * @param allTerminals Whether or not to include terminals that are referenced only by other terminals\n * @returns A list of referenced parser and terminal rules. If the grammar contains no entry rule,\n *      this function returns all rules of the specified grammar.\n */\nexport function getAllReachableRules(grammar, allTerminals) {\n    const ruleNames = new Set();\n    const entryRule = getEntryRule(grammar);\n    if (!entryRule) {\n        return new Set(grammar.rules);\n    }\n    const topMostRules = [entryRule].concat(getHiddenRules(grammar));\n    for (const rule of topMostRules) {\n        ruleDfs(rule, ruleNames, allTerminals);\n    }\n    const rules = new Set();\n    for (const rule of grammar.rules) {\n        if (ruleNames.has(rule.name) || (ast.isTerminalRule(rule) && rule.hidden)) {\n            rules.add(rule);\n        }\n    }\n    return rules;\n}\nfunction ruleDfs(rule, visitedSet, allTerminals) {\n    visitedSet.add(rule.name);\n    streamAllContents(rule).forEach(node => {\n        if (ast.isRuleCall(node) || (allTerminals && ast.isTerminalRuleCall(node))) {\n            const refRule = node.rule.ref;\n            if (refRule && !visitedSet.has(refRule.name)) {\n                ruleDfs(refRule, visitedSet, allTerminals);\n            }\n        }\n    });\n}\n/**\n * Determines the grammar expression used to parse a cross-reference (usually a reference to a terminal rule).\n * A cross-reference can declare this expression explicitly in the form `[Type : Terminal]`, but if `Terminal`\n * is omitted, this function attempts to infer it from the name of the referenced `Type` (using `findNameAssignment`).\n *\n * Returns the grammar expression used to parse the given cross-reference, or `undefined` if it is not declared\n * and cannot be inferred.\n */\nexport function getCrossReferenceTerminal(crossRef) {\n    if (crossRef.terminal) {\n        return crossRef.terminal;\n    }\n    else if (crossRef.type.ref) {\n        const nameAssigment = findNameAssignment(crossRef.type.ref);\n        return nameAssigment === null || nameAssigment === void 0 ? void 0 : nameAssigment.terminal;\n    }\n    return undefined;\n}\n/**\n * Determines whether the given terminal rule represents a comment. This is true if the rule is marked\n * as `hidden` and it does not match white space. This means every hidden token (i.e. excluded from the AST)\n * that contains visible characters is considered a comment.\n */\nexport function isCommentTerminal(terminalRule) {\n    return terminalRule.hidden && !terminalRegex(terminalRule).test(' ');\n}\n/**\n * Find all CST nodes within the given node that contribute to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is an empty array.\n * @param property A property name of the constructed AST node. If this is undefined, the result is an empty array.\n */\nexport function findNodesForProperty(node, property) {\n    if (!node || !property) {\n        return [];\n    }\n    return findNodesForPropertyInternal(node, property, node.astNode, true);\n}\n/**\n * Find a single CST node within the given node that contributes to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is `undefined`.\n * @param property A property name of the constructed AST node. If this is undefined, the result is `undefined`.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of assignments to the property, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForProperty(node, property, index) {\n    if (!node || !property) {\n        return undefined;\n    }\n    const nodes = findNodesForPropertyInternal(node, property, node.astNode, true);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nfunction findNodesForPropertyInternal(node, property, element, first) {\n    if (!first) {\n        const nodeFeature = getContainerOfType(node.grammarSource, ast.isAssignment);\n        if (nodeFeature && nodeFeature.feature === property) {\n            return [node];\n        }\n    }\n    if (isCompositeCstNode(node) && node.astNode === element) {\n        return node.content.flatMap(e => findNodesForPropertyInternal(e, property, element, false));\n    }\n    return [];\n}\n/**\n * Find all CST nodes within the given node that correspond to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is an empty array.\n * @param keyword A keyword as specified in the grammar.\n */\nexport function findNodesForKeyword(node, keyword) {\n    if (!node) {\n        return [];\n    }\n    return findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n}\n/**\n * Find a single CST node within the given node that corresponds to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is `undefined`.\n * @param keyword A keyword as specified in the grammar.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of keyword occurrences, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForKeyword(node, keyword, index) {\n    if (!node) {\n        return undefined;\n    }\n    const nodes = findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nexport function findNodesForKeywordInternal(node, keyword, element) {\n    if (node.astNode !== element) {\n        return [];\n    }\n    if (ast.isKeyword(node.grammarSource) && node.grammarSource.value === keyword) {\n        return [node];\n    }\n    const treeIterator = streamCst(node).iterator();\n    let result;\n    const keywordNodes = [];\n    do {\n        result = treeIterator.next();\n        if (!result.done) {\n            const childNode = result.value;\n            if (childNode.astNode === element) {\n                if (ast.isKeyword(childNode.grammarSource) && childNode.grammarSource.value === keyword) {\n                    keywordNodes.push(childNode);\n                }\n            }\n            else {\n                treeIterator.prune();\n            }\n        }\n    } while (!result.done);\n    return keywordNodes;\n}\n/**\n * If the given CST node was parsed in the context of a property assignment, the respective `Assignment` grammar\n * node is returned. If no assignment is found, the result is `undefined`.\n *\n * @param cstNode A CST node for which to find a property assignment.\n */\nexport function findAssignment(cstNode) {\n    var _a;\n    const astNode = cstNode.astNode;\n    // Only search until the ast node of the parent cst node is no longer the original ast node\n    // This would make us jump to a preceding rule call, which contains only unrelated assignments\n    while (astNode === ((_a = cstNode.container) === null || _a === void 0 ? void 0 : _a.astNode)) {\n        const assignment = getContainerOfType(cstNode.grammarSource, ast.isAssignment);\n        if (assignment) {\n            return assignment;\n        }\n        cstNode = cstNode.container;\n    }\n    return undefined;\n}\n/**\n * Find an assignment to the `name` property for the given grammar type. This requires the `type` to be inferred\n * from a parser rule, and that rule must contain an assignment to the `name` property. In all other cases,\n * this function returns `undefined`.\n */\nexport function findNameAssignment(type) {\n    let startNode = type;\n    if (ast.isInferredType(startNode)) {\n        // for inferred types, the location to start searching for the name-assignment is different\n        if (ast.isAction(startNode.$container)) {\n            // a type which is explicitly inferred by an action: investigate the sibbling of the Action node, i.e. start searching at the Action's parent\n            startNode = startNode.$container.$container;\n        }\n        else if (ast.isParserRule(startNode.$container)) {\n            // investigate the parser rule with the explicitly inferred type\n            startNode = startNode.$container;\n        }\n        else {\n            assertUnreachable(startNode.$container);\n        }\n    }\n    return findNameAssignmentInternal(type, startNode, new Map());\n}\nfunction findNameAssignmentInternal(type, startNode, cache) {\n    var _a;\n    // the cache is only required to prevent infinite loops\n    function go(node, refType) {\n        let childAssignment = undefined;\n        const parentAssignment = getContainerOfType(node, ast.isAssignment);\n        // No parent assignment implies unassigned rule call\n        if (!parentAssignment) {\n            childAssignment = findNameAssignmentInternal(refType, refType, cache);\n        }\n        cache.set(type, childAssignment);\n        return childAssignment;\n    }\n    if (cache.has(type)) {\n        return cache.get(type);\n    }\n    cache.set(type, undefined);\n    for (const node of streamAllContents(startNode)) {\n        if (ast.isAssignment(node) && node.feature.toLowerCase() === 'name') {\n            cache.set(type, node);\n            return node;\n        }\n        else if (ast.isRuleCall(node) && ast.isParserRule(node.rule.ref)) {\n            return go(node, node.rule.ref);\n        }\n        else if (ast.isSimpleType(node) && ((_a = node.typeRef) === null || _a === void 0 ? void 0 : _a.ref)) {\n            return go(node, node.typeRef.ref);\n        }\n    }\n    return undefined;\n}\nexport function getActionAtElement(element) {\n    const parent = element.$container;\n    if (ast.isGroup(parent)) {\n        const elements = parent.elements;\n        const index = elements.indexOf(element);\n        for (let i = index - 1; i >= 0; i--) {\n            const item = elements[i];\n            if (ast.isAction(item)) {\n                return item;\n            }\n            else {\n                const action = streamAllContents(elements[i]).find(ast.isAction);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (ast.isAbstractElement(parent)) {\n        return getActionAtElement(parent);\n    }\n    else {\n        return undefined;\n    }\n}\nexport function isOptionalCardinality(cardinality, element) {\n    return cardinality === '?' || cardinality === '*' || (ast.isGroup(element) && Boolean(element.guardCondition));\n}\nexport function isArrayCardinality(cardinality) {\n    return cardinality === '*' || cardinality === '+';\n}\nexport function isArrayOperator(operator) {\n    return operator === '+=';\n}\n/**\n * Determines whether the given parser rule is a _data type rule_, meaning that it has a\n * primitive return type like `number`, `boolean`, etc.\n */\nexport function isDataTypeRule(rule) {\n    return isDataTypeRuleInternal(rule, new Set());\n}\nfunction isDataTypeRuleInternal(rule, visited) {\n    if (visited.has(rule)) {\n        return true;\n    }\n    else {\n        visited.add(rule);\n    }\n    for (const node of streamAllContents(rule)) {\n        if (ast.isRuleCall(node)) {\n            if (!node.rule.ref) {\n                // RuleCall to unresolved rule. Don't assume `rule` is a DataType rule.\n                return false;\n            }\n            if (ast.isParserRule(node.rule.ref) && !isDataTypeRuleInternal(node.rule.ref, visited)) {\n                return false;\n            }\n        }\n        else if (ast.isAssignment(node)) {\n            return false;\n        }\n        else if (ast.isAction(node)) {\n            return false;\n        }\n    }\n    return Boolean(rule.definition);\n}\nexport function isDataType(type) {\n    return isDataTypeInternal(type.type, new Set());\n}\nfunction isDataTypeInternal(type, visited) {\n    if (visited.has(type)) {\n        return true;\n    }\n    else {\n        visited.add(type);\n    }\n    if (ast.isArrayType(type)) {\n        return false;\n    }\n    else if (ast.isReferenceType(type)) {\n        return false;\n    }\n    else if (ast.isUnionType(type)) {\n        return type.types.every(e => isDataTypeInternal(e, visited));\n    }\n    else if (ast.isSimpleType(type)) {\n        if (type.primitiveType !== undefined) {\n            return true;\n        }\n        else if (type.stringType !== undefined) {\n            return true;\n        }\n        else if (type.typeRef !== undefined) {\n            const ref = type.typeRef.ref;\n            if (ast.isType(ref)) {\n                return isDataTypeInternal(ref.type, visited);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        return false;\n    }\n}\nexport function getExplicitRuleType(rule) {\n    if (rule.inferredType) {\n        return rule.inferredType.name;\n    }\n    else if (rule.dataType) {\n        return rule.dataType;\n    }\n    else if (rule.returnType) {\n        const refType = rule.returnType.ref;\n        if (refType) {\n            // check if we need to check Action as return type\n            if (ast.isParserRule(refType)) {\n                return refType.name;\n            }\n            else if (ast.isInterface(refType) || ast.isType(refType)) {\n                return refType.name;\n            }\n        }\n    }\n    return undefined;\n}\nexport function getTypeName(type) {\n    var _a;\n    if (ast.isParserRule(type)) {\n        return isDataTypeRule(type) ? type.name : (_a = getExplicitRuleType(type)) !== null && _a !== void 0 ? _a : type.name;\n    }\n    else if (ast.isInterface(type) || ast.isType(type) || ast.isReturnType(type)) {\n        return type.name;\n    }\n    else if (ast.isAction(type)) {\n        const actionType = getActionType(type);\n        if (actionType) {\n            return actionType;\n        }\n    }\n    else if (ast.isInferredType(type)) {\n        return type.name;\n    }\n    throw new Error('Cannot get name of Unknown Type');\n}\nexport function getActionType(action) {\n    var _a;\n    if (action.inferredType) {\n        return action.inferredType.name;\n    }\n    else if ((_a = action.type) === null || _a === void 0 ? void 0 : _a.ref) {\n        return getTypeName(action.type.ref);\n    }\n    return undefined; // not inferring and not referencing a valid type\n}\nexport function getRuleType(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return isDataTypeRule(rule) ? rule.name : (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\nexport function terminalRegex(terminalRule) {\n    const flags = {\n        s: false,\n        i: false,\n        u: false\n    };\n    const source = abstractElementToRegex(terminalRule.definition, flags);\n    const flagText = Object.entries(flags).filter(([, value]) => value).map(([name]) => name).join('');\n    return new RegExp(source, flagText);\n}\n// Using [\\s\\S]* allows to match everything, compared to . which doesn't match line terminators\nconst WILDCARD = /[\\s\\S]/.source;\nfunction abstractElementToRegex(element, flags) {\n    if (ast.isTerminalAlternatives(element)) {\n        return terminalAlternativesToRegex(element);\n    }\n    else if (ast.isTerminalGroup(element)) {\n        return terminalGroupToRegex(element);\n    }\n    else if (ast.isCharacterRange(element)) {\n        return characterRangeToRegex(element);\n    }\n    else if (ast.isTerminalRuleCall(element)) {\n        const rule = element.rule.ref;\n        if (!rule) {\n            throw new Error('Missing rule reference.');\n        }\n        return withCardinality(abstractElementToRegex(rule.definition), {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else if (ast.isNegatedToken(element)) {\n        return negateTokenToRegex(element);\n    }\n    else if (ast.isUntilToken(element)) {\n        return untilTokenToRegex(element);\n    }\n    else if (ast.isRegexToken(element)) {\n        const lastSlash = element.regex.lastIndexOf('/');\n        const source = element.regex.substring(1, lastSlash);\n        const regexFlags = element.regex.substring(lastSlash + 1);\n        if (flags) {\n            flags.i = regexFlags.includes('i');\n            flags.s = regexFlags.includes('s');\n            flags.u = regexFlags.includes('u');\n        }\n        return withCardinality(source, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead,\n            wrap: false\n        });\n    }\n    else if (ast.isWildcard(element)) {\n        return withCardinality(WILDCARD, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else {\n        throw new Error(`Invalid terminal element: ${element === null || element === void 0 ? void 0 : element.$type}`);\n    }\n}\nfunction terminalAlternativesToRegex(alternatives) {\n    return withCardinality(alternatives.elements.map(e => abstractElementToRegex(e)).join('|'), {\n        cardinality: alternatives.cardinality,\n        lookahead: alternatives.lookahead\n    });\n}\nfunction terminalGroupToRegex(group) {\n    return withCardinality(group.elements.map(e => abstractElementToRegex(e)).join(''), {\n        cardinality: group.cardinality,\n        lookahead: group.lookahead\n    });\n}\nfunction untilTokenToRegex(until) {\n    return withCardinality(`${WILDCARD}*?${abstractElementToRegex(until.terminal)}`, {\n        cardinality: until.cardinality,\n        lookahead: until.lookahead\n    });\n}\nfunction negateTokenToRegex(negate) {\n    return withCardinality(`(?!${abstractElementToRegex(negate.terminal)})${WILDCARD}*?`, {\n        cardinality: negate.cardinality,\n        lookahead: negate.lookahead\n    });\n}\nfunction characterRangeToRegex(range) {\n    if (range.right) {\n        return withCardinality(`[${keywordToRegex(range.left)}-${keywordToRegex(range.right)}]`, {\n            cardinality: range.cardinality,\n            lookahead: range.lookahead,\n            wrap: false\n        });\n    }\n    return withCardinality(keywordToRegex(range.left), {\n        cardinality: range.cardinality,\n        lookahead: range.lookahead,\n        wrap: false\n    });\n}\nfunction keywordToRegex(keyword) {\n    return escapeRegExp(keyword.value);\n}\nfunction withCardinality(regex, options) {\n    var _a;\n    if (options.wrap !== false || options.lookahead) {\n        regex = `(${(_a = options.lookahead) !== null && _a !== void 0 ? _a : ''}${regex})`;\n    }\n    if (options.cardinality) {\n        return `${regex}${options.cardinality}`;\n    }\n    return regex;\n}\n//# sourceMappingURL=grammar-utils.js.map","// based on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nexport function toFastProperties(toBecomeFast) {\n    function FakeConstructor() { }\n    // If our object is used as a constructor, it would receive\n    FakeConstructor.prototype = toBecomeFast;\n    const fakeInstance = new FakeConstructor();\n    function fakeAccess() {\n        return typeof fakeInstance.bar;\n    }\n    // help V8 understand this is a \"real\" prototype by actually using\n    // the fake instance.\n    fakeAccess();\n    fakeAccess();\n    // Always true condition to suppress the Firefox warning of unreachable\n    // code after a return statement.\n    if (1)\n        return toBecomeFast;\n    // Eval prevents optimization of this method (even though this is dead code)\n    // - https://esbuild.github.io/content-types/#direct-eval\n    /* istanbul ignore next */\n    // tslint:disable-next-line\n    (0, eval)(toBecomeFast);\n}\n//# sourceMappingURL=to-fast-properties.js.map","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction drop(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nexport default drop;\n","import assignValue from './_assignValue.js';\nimport copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport isArrayLike from './isArrayLike.js';\nimport isPrototype from './_isPrototype.js';\nimport keys from './keys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nexport default assign;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport basePickBy from './_basePickBy.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nexport default pickBy;\n","import baseIsRegExp from './_baseIsRegExp.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nexport default isRegExp;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nexport default baseIsRegExp;\n","import { assign, forEach, isRegExp, isString, map, pickBy } from \"lodash-es\";\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nexport class AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(_definition) {\n        this._definition = _definition;\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        forEach(this.definition, (prod) => {\n            prod.accept(visitor);\n        });\n    }\n}\nexport class NonTerminal extends AbstractProduction {\n    constructor(options) {\n        super([]);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    set definition(definition) {\n        // immutable\n    }\n    get definition() {\n        if (this.referencedRule !== undefined) {\n            return this.referencedRule.definition;\n        }\n        return [];\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        // don't visit children of a reference, we will get cyclic infinite loops if we do so\n    }\n}\nexport class Rule extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.orgText = \"\";\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternative extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.ignoreAmbiguities = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Option extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatory extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatoryWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Repetition extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternation extends AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        this.ignoreAmbiguities = false;\n        this.hasPredicates = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Terminal {\n    constructor(options) {\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    accept(visitor) {\n        visitor.visit(this);\n    }\n}\nexport function serializeGrammar(topRules) {\n    return map(topRules, serializeProduction);\n}\nexport function serializeProduction(node) {\n    function convertDefinition(definition) {\n        return map(definition, serializeProduction);\n    }\n    /* istanbul ignore else */\n    if (node instanceof NonTerminal) {\n        const serializedNonTerminal = {\n            type: \"NonTerminal\",\n            name: node.nonTerminalName,\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedNonTerminal.label = node.label;\n        }\n        return serializedNonTerminal;\n    }\n    else if (node instanceof Alternative) {\n        return {\n            type: \"Alternative\",\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Option) {\n        return {\n            type: \"Option\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatory) {\n        return {\n            type: \"RepetitionMandatory\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatoryWithSeparator) {\n        return {\n            type: \"RepetitionMandatoryWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionWithSeparator) {\n        return {\n            type: \"RepetitionWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Repetition) {\n        return {\n            type: \"Repetition\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Alternation) {\n        return {\n            type: \"Alternation\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Terminal) {\n        const serializedTerminal = {\n            type: \"Terminal\",\n            name: node.terminalType.name,\n            label: tokenLabel(node.terminalType),\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedTerminal.terminalLabel = node.label;\n        }\n        const pattern = node.terminalType.PATTERN;\n        if (node.terminalType.PATTERN) {\n            serializedTerminal.pattern = isRegExp(pattern)\n                ? pattern.source\n                : pattern;\n        }\n        return serializedTerminal;\n    }\n    else if (node instanceof Rule) {\n        return {\n            type: \"Rule\",\n            name: node.name,\n            orgText: node.orgText,\n            definition: convertDefinition(node.definition),\n        };\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=model.js.map","import { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport class GAstVisitor {\n    visit(node) {\n        const nodeAny = node;\n        switch (nodeAny.constructor) {\n            case NonTerminal:\n                return this.visitNonTerminal(nodeAny);\n            case Alternative:\n                return this.visitAlternative(nodeAny);\n            case Option:\n                return this.visitOption(nodeAny);\n            case RepetitionMandatory:\n                return this.visitRepetitionMandatory(nodeAny);\n            case RepetitionMandatoryWithSeparator:\n                return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n            case RepetitionWithSeparator:\n                return this.visitRepetitionWithSeparator(nodeAny);\n            case Repetition:\n                return this.visitRepetition(nodeAny);\n            case Alternation:\n                return this.visitAlternation(nodeAny);\n            case Terminal:\n                return this.visitTerminal(nodeAny);\n            case Rule:\n                return this.visitRule(nodeAny);\n            /* c8 ignore next 2 */\n            default:\n                throw Error(\"non exhaustive match\");\n        }\n    }\n    /* c8 ignore next */\n    visitNonTerminal(node) { }\n    /* c8 ignore next */\n    visitAlternative(node) { }\n    /* c8 ignore next */\n    visitOption(node) { }\n    /* c8 ignore next */\n    visitRepetition(node) { }\n    /* c8 ignore next */\n    visitRepetitionMandatory(node) { }\n    /* c8 ignore next 3 */\n    visitRepetitionMandatoryWithSeparator(node) { }\n    /* c8 ignore next */\n    visitRepetitionWithSeparator(node) { }\n    /* c8 ignore next */\n    visitAlternation(node) { }\n    /* c8 ignore next */\n    visitTerminal(node) { }\n    /* c8 ignore next */\n    visitRule(node) { }\n}\n//# sourceMappingURL=visitor.js.map","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nexport default baseSome;\n","import arraySome from './_arraySome.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseSome from './_baseSome.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default some;\n","import baseIndexOf from './_baseIndexOf.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport toInteger from './toInteger.js';\nimport values from './values.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nexport default includes;\n","/**\n * A specialized version of `_.every` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default arrayEvery;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nexport default baseEvery;\n","import arrayEvery from './_arrayEvery.js';\nimport baseEvery from './_baseEvery.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default every;\n","import { every, includes, some } from \"lodash-es\";\nimport { AbstractProduction, Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport function isSequenceProd(prod) {\n    return (prod instanceof Alternative ||\n        prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionMandatory ||\n        prod instanceof RepetitionMandatoryWithSeparator ||\n        prod instanceof RepetitionWithSeparator ||\n        prod instanceof Terminal ||\n        prod instanceof Rule);\n}\nexport function isOptionalProd(prod, alreadyVisited = []) {\n    const isDirectlyOptional = prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionWithSeparator;\n    if (isDirectlyOptional) {\n        return true;\n    }\n    // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n    // empty optional top rule\n    // may be indirectly optional ((A?B?C?) | (D?E?F?))\n    if (prod instanceof Alternation) {\n        // for OR its enough for just one of the alternatives to be optional\n        return some(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else if (prod instanceof NonTerminal && includes(alreadyVisited, prod)) {\n        // avoiding stack overflow due to infinite recursion\n        return false;\n    }\n    else if (prod instanceof AbstractProduction) {\n        if (prod instanceof NonTerminal) {\n            alreadyVisited.push(prod);\n        }\n        return every(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else {\n        return false;\n    }\n}\nexport function isBranchingProd(prod) {\n    return prod instanceof Alternation;\n}\nexport function getProductionDslName(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=helpers.js.map","import { drop, forEach } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nexport class RestWalker {\n    walk(prod, prevRest = []) {\n        forEach(prod.definition, (subProd, index) => {\n            const currRest = drop(prod.definition, index + 1);\n            /* istanbul ignore else */\n            if (subProd instanceof NonTerminal) {\n                this.walkProdRef(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Terminal) {\n                this.walkTerminal(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternative) {\n                this.walkFlat(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Option) {\n                this.walkOption(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatory) {\n                this.walkAtLeastOne(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatoryWithSeparator) {\n                this.walkAtLeastOneSep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionWithSeparator) {\n                this.walkManySep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Repetition) {\n                this.walkMany(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternation) {\n                this.walkOr(subProd, currRest, prevRest);\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    }\n    walkTerminal(terminal, currRest, prevRest) { }\n    walkProdRef(refProd, currRest, prevRest) { }\n    walkFlat(flatProd, currRest, prevRest) {\n        // ABCDEF => after the D the rest is EF\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(flatProd, fullOrRest);\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        // ABC(DE)?F => after the (DE)? the rest is F\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(optionProd, fullOrRest);\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n        const fullAtLeastOneRest = [\n            new Option({ definition: atLeastOneProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(atLeastOneProd, fullAtLeastOneRest);\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n        const fullAtLeastOneSepRest = restForRepetitionWithSeparator(atLeastOneSepProd, currRest, prevRest);\n        this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n        const fullManyRest = [\n            new Option({ definition: manyProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(manyProd, fullManyRest);\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n        const fullManySepRest = restForRepetitionWithSeparator(manySepProd, currRest, prevRest);\n        this.walk(manySepProd, fullManySepRest);\n    }\n    walkOr(orProd, currRest, prevRest) {\n        // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n        const fullOrRest = currRest.concat(prevRest);\n        // walk all different alternatives\n        forEach(orProd.definition, (alt) => {\n            // wrapping each alternative in a single definition wrapper\n            // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n            // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n            const prodWrapper = new Alternative({ definition: [alt] });\n            this.walk(prodWrapper, fullOrRest);\n        });\n    }\n}\nfunction restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {\n    const repSepRest = [\n        new Option({\n            definition: [\n                new Terminal({ terminalType: repSepProd.separator }),\n            ].concat(repSepProd.definition),\n        }),\n    ];\n    const fullRepSepRest = repSepRest.concat(currRest, prevRest);\n    return fullRepSepRest;\n}\n//# sourceMappingURL=rest.js.map","import baseUniq from './_baseUniq.js';\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nexport default uniq;\n","import { flatten, map, uniq } from \"lodash-es\";\nimport { isBranchingProd, isOptionalProd, isSequenceProd, NonTerminal, Terminal, } from \"@chevrotain/gast\";\nexport function first(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        // this could in theory cause infinite loops if\n        // (1) prod A refs prod B.\n        // (2) prod B refs prod A\n        // (3) AB can match the empty set\n        // in other words a cycle where everything is optional so the first will keep\n        // looking ahead for the next optional part and will never exit\n        // currently there is no safeguard for this unique edge case because\n        // (1) not sure a grammar in which this can happen is useful for anything (productive)\n        return first(prod.referencedRule);\n    }\n    else if (prod instanceof Terminal) {\n        return firstForTerminal(prod);\n    }\n    else if (isSequenceProd(prod)) {\n        return firstForSequence(prod);\n    }\n    else if (isBranchingProd(prod)) {\n        return firstForBranching(prod);\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function firstForSequence(prod) {\n    let firstSet = [];\n    const seq = prod.definition;\n    let nextSubProdIdx = 0;\n    let hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    let currSubProd;\n    // so we enter the loop at least once (if the definition is not empty\n    let isLastInnerProdOptional = true;\n    // scan a sequence until it's end or until we have found a NONE optional production in it\n    while (hasInnerProdsRemaining && isLastInnerProdOptional) {\n        currSubProd = seq[nextSubProdIdx];\n        isLastInnerProdOptional = isOptionalProd(currSubProd);\n        firstSet = firstSet.concat(first(currSubProd));\n        nextSubProdIdx = nextSubProdIdx + 1;\n        hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    }\n    return uniq(firstSet);\n}\nexport function firstForBranching(prod) {\n    const allAlternativesFirsts = map(prod.definition, (innerProd) => {\n        return first(innerProd);\n    });\n    return uniq(flatten(allAlternativesFirsts));\n}\nexport function firstForTerminal(terminal) {\n    return [terminal.terminalType];\n}\n//# sourceMappingURL=first.js.map","// TODO: can this be removed? where is it used?\nexport const IN = \"_~IN~_\";\n//# sourceMappingURL=constants.js.map","import { RestWalker } from \"./rest.js\";\nimport { first } from \"./first.js\";\nimport { assign, forEach } from \"lodash-es\";\nimport { IN } from \"../constants.js\";\nimport { Alternative } from \"@chevrotain/gast\";\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nexport class ResyncFollowsWalker extends RestWalker {\n    constructor(topProd) {\n        super();\n        this.topProd = topProd;\n        this.follows = {};\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.follows;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        // do nothing! just like in the public sector after 13:00\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        const followName = buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +\n            this.topProd.name;\n        const fullRest = currRest.concat(prevRest);\n        const restProd = new Alternative({ definition: fullRest });\n        const t_in_topProd_follows = first(restProd);\n        this.follows[followName] = t_in_topProd_follows;\n    }\n}\nexport function computeAllProdsFollows(topProductions) {\n    const reSyncFollows = {};\n    forEach(topProductions, (topProd) => {\n        const currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();\n        assign(reSyncFollows, currRefsFollow);\n    });\n    return reSyncFollows;\n}\nexport function buildBetweenProdsFollowPrefix(inner, occurenceInParent) {\n    return inner.name + occurenceInParent + IN;\n}\nexport function buildInProdFollowPrefix(terminal) {\n    const terminalName = terminal.terminalType.name;\n    return terminalName + terminal.idx + IN;\n}\n//# sourceMappingURL=follow.js.map","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nexport default negate;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport negate from './negate.js';\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.filter\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * _.reject(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.reject(users, { 'age': 40, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.reject(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.reject(users, 'active');\n * // => objects for ['barney']\n */\nfunction reject(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, negate(baseIteratee(predicate, 3)));\n}\n\nexport default reject;\n","import baseIndexOf from './_baseIndexOf.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nexport default indexOf;\n","import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nexport default difference;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default compact;\n","/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nexport default head;\n","export function PRINT_ERROR(msg) {\n    /* istanbul ignore else - can't override global.console in node.js */\n    if (console && console.error) {\n        console.error(`Error: ${msg}`);\n    }\n}\nexport function PRINT_WARNING(msg) {\n    /* istanbul ignore else - can't override global.console in node.js*/\n    if (console && console.warn) {\n        // TODO: modify docs accordingly\n        console.warn(`Warning: ${msg}`);\n    }\n}\n//# sourceMappingURL=print.js.map","import { RegExpParser, } from \"@chevrotain/regexp-to-ast\";\nlet regExpAstCache = {};\nconst regExpParser = new RegExpParser();\nexport function getRegExpAst(regExp) {\n    const regExpStr = regExp.toString();\n    if (regExpAstCache.hasOwnProperty(regExpStr)) {\n        return regExpAstCache[regExpStr];\n    }\n    else {\n        const regExpAst = regExpParser.pattern(regExpStr);\n        regExpAstCache[regExpStr] = regExpAst;\n        return regExpAst;\n    }\n}\nexport function clearRegExpParserCache() {\n    regExpAstCache = {};\n}\n//# sourceMappingURL=reg_exp_parser.js.map","import { BaseRegExpVisitor, } from \"@chevrotain/regexp-to-ast\";\nimport { every, find, forEach, includes, isArray, values } from \"lodash-es\";\nimport { PRINT_ERROR, PRINT_WARNING } from \"@chevrotain/utils\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nimport { charCodeToOptimizedIndex, minOptimizationVal } from \"./lexer.js\";\nconst complementErrorMessage = \"Complement Sets are not supported for first char optimization\";\nexport const failedOptimizationPrefixMsg = 'Unable to use \"first char\" lexer optimizations:\\n';\nexport function getOptimizedStartCodesIndices(regExp, ensureOptimizations = false) {\n    try {\n        const ast = getRegExpAst(regExp);\n        const firstChars = firstCharOptimizedIndices(ast.value, {}, ast.flags.ignoreCase);\n        return firstChars;\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        // Testing this relies on the regexp-to-ast library having a bug... */\n        // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc\n        if (e.message === complementErrorMessage) {\n            if (ensureOptimizations) {\n                PRINT_WARNING(`${failedOptimizationPrefixMsg}` +\n                    `\\tUnable to optimize: < ${regExp.toString()} >\\n` +\n                    \"\\tComplement Sets cannot be automatically optimized.\\n\" +\n                    \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.\");\n            }\n        }\n        else {\n            let msgSuffix = \"\";\n            if (ensureOptimizations) {\n                msgSuffix =\n                    \"\\n\\tThis will disable the lexer's first char optimizations.\\n\" +\n                        \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.\";\n            }\n            PRINT_ERROR(`${failedOptimizationPrefixMsg}\\n` +\n                `\\tFailed parsing: < ${regExp.toString()} >\\n` +\n                `\\tUsing the @chevrotain/regexp-to-ast library\\n` +\n                \"\\tPlease open an issue at: https://github.com/chevrotain/chevrotain/issues\" +\n                msgSuffix);\n        }\n    }\n    return [];\n}\nexport function firstCharOptimizedIndices(ast, result, ignoreCase) {\n    switch (ast.type) {\n        case \"Disjunction\":\n            for (let i = 0; i < ast.value.length; i++) {\n                firstCharOptimizedIndices(ast.value[i], result, ignoreCase);\n            }\n            break;\n        case \"Alternative\":\n            const terms = ast.value;\n            for (let i = 0; i < terms.length; i++) {\n                const term = terms[i];\n                // skip terms that cannot effect the first char results\n                switch (term.type) {\n                    case \"EndAnchor\":\n                    // A group back reference cannot affect potential starting char.\n                    // because if a back reference is the first production than automatically\n                    // the group being referenced has had to come BEFORE so its codes have already been added\n                    case \"GroupBackReference\":\n                    // assertions do not affect potential starting codes\n                    case \"Lookahead\":\n                    case \"NegativeLookahead\":\n                    case \"StartAnchor\":\n                    case \"WordBoundary\":\n                    case \"NonWordBoundary\":\n                        continue;\n                }\n                const atom = term;\n                switch (atom.type) {\n                    case \"Character\":\n                        addOptimizedIdxToResult(atom.value, result, ignoreCase);\n                        break;\n                    case \"Set\":\n                        if (atom.complement === true) {\n                            throw Error(complementErrorMessage);\n                        }\n                        forEach(atom.value, (code) => {\n                            if (typeof code === \"number\") {\n                                addOptimizedIdxToResult(code, result, ignoreCase);\n                            }\n                            else {\n                                // range\n                                const range = code;\n                                // cannot optimize when ignoreCase is\n                                if (ignoreCase === true) {\n                                    for (let rangeCode = range.from; rangeCode <= range.to; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                }\n                                // Optimization (2 orders of magnitude less work for very large ranges)\n                                else {\n                                    // handle unoptimized values\n                                    for (let rangeCode = range.from; rangeCode <= range.to && rangeCode < minOptimizationVal; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                    // Less common charCode where we optimize for faster init time, by using larger \"buckets\"\n                                    if (range.to >= minOptimizationVal) {\n                                        const minUnOptVal = range.from >= minOptimizationVal\n                                            ? range.from\n                                            : minOptimizationVal;\n                                        const maxUnOptVal = range.to;\n                                        const minOptIdx = charCodeToOptimizedIndex(minUnOptVal);\n                                        const maxOptIdx = charCodeToOptimizedIndex(maxUnOptVal);\n                                        for (let currOptIdx = minOptIdx; currOptIdx <= maxOptIdx; currOptIdx++) {\n                                            result[currOptIdx] = currOptIdx;\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                        break;\n                    case \"Group\":\n                        firstCharOptimizedIndices(atom.value, result, ignoreCase);\n                        break;\n                    /* istanbul ignore next */\n                    default:\n                        throw Error(\"Non Exhaustive Match\");\n                }\n                // reached a mandatory production, no more **start** codes can be found on this alternative\n                const isOptionalQuantifier = atom.quantifier !== undefined && atom.quantifier.atLeast === 0;\n                if (\n                // A group may be optional due to empty contents /(?:)/\n                // or if everything inside it is optional /((a)?)/\n                (atom.type === \"Group\" && isWholeOptional(atom) === false) ||\n                    // If this term is not a group it may only be optional if it has an optional quantifier\n                    (atom.type !== \"Group\" && isOptionalQuantifier === false)) {\n                    break;\n                }\n            }\n            break;\n        /* istanbul ignore next */\n        default:\n            throw Error(\"non exhaustive match!\");\n    }\n    // console.log(Object.keys(result).length)\n    return values(result);\n}\nfunction addOptimizedIdxToResult(code, result, ignoreCase) {\n    const optimizedCharIdx = charCodeToOptimizedIndex(code);\n    result[optimizedCharIdx] = optimizedCharIdx;\n    if (ignoreCase === true) {\n        handleIgnoreCase(code, result);\n    }\n}\nfunction handleIgnoreCase(code, result) {\n    const char = String.fromCharCode(code);\n    const upperChar = char.toUpperCase();\n    /* istanbul ignore else */\n    if (upperChar !== char) {\n        const optimizedCharIdx = charCodeToOptimizedIndex(upperChar.charCodeAt(0));\n        result[optimizedCharIdx] = optimizedCharIdx;\n    }\n    else {\n        const lowerChar = char.toLowerCase();\n        if (lowerChar !== char) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(lowerChar.charCodeAt(0));\n            result[optimizedCharIdx] = optimizedCharIdx;\n        }\n    }\n}\nfunction findCode(setNode, targetCharCodes) {\n    return find(setNode.value, (codeOrRange) => {\n        if (typeof codeOrRange === \"number\") {\n            return includes(targetCharCodes, codeOrRange);\n        }\n        else {\n            // range\n            const range = codeOrRange;\n            return (find(targetCharCodes, (targetCode) => range.from <= targetCode && targetCode <= range.to) !== undefined);\n        }\n    });\n}\nfunction isWholeOptional(ast) {\n    const quantifier = ast.quantifier;\n    if (quantifier && quantifier.atLeast === 0) {\n        return true;\n    }\n    if (!ast.value) {\n        return false;\n    }\n    return isArray(ast.value)\n        ? every(ast.value, isWholeOptional)\n        : isWholeOptional(ast.value);\n}\nclass CharCodeFinder extends BaseRegExpVisitor {\n    constructor(targetCharCodes) {\n        super();\n        this.targetCharCodes = targetCharCodes;\n        this.found = false;\n    }\n    visitChildren(node) {\n        // No need to keep looking...\n        if (this.found === true) {\n            return;\n        }\n        // switch lookaheads as they do not actually consume any characters thus\n        // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.\n        switch (node.type) {\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                return;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                return;\n        }\n        super.visitChildren(node);\n    }\n    visitCharacter(node) {\n        if (includes(this.targetCharCodes, node.value)) {\n            this.found = true;\n        }\n    }\n    visitSet(node) {\n        if (node.complement) {\n            if (findCode(node, this.targetCharCodes) === undefined) {\n                this.found = true;\n            }\n        }\n        else {\n            if (findCode(node, this.targetCharCodes) !== undefined) {\n                this.found = true;\n            }\n        }\n    }\n}\nexport function canMatchCharCode(charCodes, pattern) {\n    if (pattern instanceof RegExp) {\n        const ast = getRegExpAst(pattern);\n        const charCodeFinder = new CharCodeFinder(charCodes);\n        charCodeFinder.visit(ast);\n        return charCodeFinder.found;\n    }\n    else {\n        return (find(pattern, (char) => {\n            return includes(charCodes, char.charCodeAt(0));\n        }) !== undefined);\n    }\n}\n//# sourceMappingURL=reg_exp.js.map","import { BaseRegExpVisitor } from \"@chevrotain/regexp-to-ast\";\nimport { Lexer, LexerDefinitionErrorType, } from \"./lexer_public.js\";\nimport { compact, defaults, difference, filter, find, first, flatten, forEach, has, includes, indexOf, isArray, isEmpty, isFunction, isRegExp, isString, isUndefined, keys, map, reduce, reject, values, } from \"lodash-es\";\nimport { PRINT_ERROR } from \"@chevrotain/utils\";\nimport { canMatchCharCode, failedOptimizationPrefixMsg, getOptimizedStartCodesIndices, } from \"./reg_exp.js\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nconst PATTERN = \"PATTERN\";\nexport const DEFAULT_MODE = \"defaultMode\";\nexport const MODES = \"modes\";\nexport let SUPPORT_STICKY = typeof new RegExp(\"(?:)\").sticky === \"boolean\";\nexport function disableSticky() {\n    SUPPORT_STICKY = false;\n}\nexport function enableSticky() {\n    SUPPORT_STICKY = true;\n}\nexport function analyzeTokenTypes(tokenTypes, options) {\n    options = defaults(options, {\n        useSticky: SUPPORT_STICKY,\n        debug: false,\n        safeMode: false,\n        positionTracking: \"full\",\n        lineTerminatorCharacters: [\"\\r\", \"\\n\"],\n        tracer: (msg, action) => action(),\n    });\n    const tracer = options.tracer;\n    tracer(\"initCharCodeToOptimizedIndexMap\", () => {\n        initCharCodeToOptimizedIndexMap();\n    });\n    let onlyRelevantTypes;\n    tracer(\"Reject Lexer.NA\", () => {\n        onlyRelevantTypes = reject(tokenTypes, (currType) => {\n            return currType[PATTERN] === Lexer.NA;\n        });\n    });\n    let hasCustom = false;\n    let allTransformedPatterns;\n    tracer(\"Transform Patterns\", () => {\n        hasCustom = false;\n        allTransformedPatterns = map(onlyRelevantTypes, (currType) => {\n            const currPattern = currType[PATTERN];\n            /* istanbul ignore else */\n            if (isRegExp(currPattern)) {\n                const regExpSource = currPattern.source;\n                if (regExpSource.length === 1 &&\n                    // only these regExp meta characters which can appear in a length one regExp\n                    regExpSource !== \"^\" &&\n                    regExpSource !== \"$\" &&\n                    regExpSource !== \".\" &&\n                    !currPattern.ignoreCase) {\n                    return regExpSource;\n                }\n                else if (regExpSource.length === 2 &&\n                    regExpSource[0] === \"\\\\\" &&\n                    // not a meta character\n                    !includes([\n                        \"d\",\n                        \"D\",\n                        \"s\",\n                        \"S\",\n                        \"t\",\n                        \"r\",\n                        \"n\",\n                        \"t\",\n                        \"0\",\n                        \"c\",\n                        \"b\",\n                        \"B\",\n                        \"f\",\n                        \"v\",\n                        \"w\",\n                        \"W\",\n                    ], regExpSource[1])) {\n                    // escaped meta Characters: /\\+/ /\\[/\n                    // or redundant escaping: /\\a/\n                    // without the escaping \"\\\"\n                    return regExpSource[1];\n                }\n                else {\n                    return options.useSticky\n                        ? addStickyFlag(currPattern)\n                        : addStartOfInput(currPattern);\n                }\n            }\n            else if (isFunction(currPattern)) {\n                hasCustom = true;\n                // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n                return { exec: currPattern };\n            }\n            else if (typeof currPattern === \"object\") {\n                hasCustom = true;\n                // ICustomPattern\n                return currPattern;\n            }\n            else if (typeof currPattern === \"string\") {\n                if (currPattern.length === 1) {\n                    return currPattern;\n                }\n                else {\n                    const escapedRegExpString = currPattern.replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\");\n                    const wrappedRegExp = new RegExp(escapedRegExpString);\n                    return options.useSticky\n                        ? addStickyFlag(wrappedRegExp)\n                        : addStartOfInput(wrappedRegExp);\n                }\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    });\n    let patternIdxToType;\n    let patternIdxToGroup;\n    let patternIdxToLongerAltIdxArr;\n    let patternIdxToPushMode;\n    let patternIdxToPopMode;\n    tracer(\"misc mapping\", () => {\n        patternIdxToType = map(onlyRelevantTypes, (currType) => currType.tokenTypeIdx);\n        patternIdxToGroup = map(onlyRelevantTypes, (clazz) => {\n            const groupName = clazz.GROUP;\n            /* istanbul ignore next */\n            if (groupName === Lexer.SKIPPED) {\n                return undefined;\n            }\n            else if (isString(groupName)) {\n                return groupName;\n            }\n            else if (isUndefined(groupName)) {\n                return false;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n        patternIdxToLongerAltIdxArr = map(onlyRelevantTypes, (clazz) => {\n            const longerAltType = clazz.LONGER_ALT;\n            if (longerAltType) {\n                const longerAltIdxArr = isArray(longerAltType)\n                    ? map(longerAltType, (type) => indexOf(onlyRelevantTypes, type))\n                    : [indexOf(onlyRelevantTypes, longerAltType)];\n                return longerAltIdxArr;\n            }\n        });\n        patternIdxToPushMode = map(onlyRelevantTypes, (clazz) => clazz.PUSH_MODE);\n        patternIdxToPopMode = map(onlyRelevantTypes, (clazz) => has(clazz, \"POP_MODE\"));\n    });\n    let patternIdxToCanLineTerminator;\n    tracer(\"Line Terminator Handling\", () => {\n        const lineTerminatorCharCodes = getCharCodes(options.lineTerminatorCharacters);\n        patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => false);\n        if (options.positionTracking !== \"onlyOffset\") {\n            patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => {\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    return !!tokType.LINE_BREAKS;\n                }\n                else {\n                    return (checkLineBreaksIssues(tokType, lineTerminatorCharCodes) === false &&\n                        canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN));\n                }\n            });\n        }\n    });\n    let patternIdxToIsCustom;\n    let patternIdxToShort;\n    let emptyGroups;\n    let patternIdxToConfig;\n    tracer(\"Misc Mapping #2\", () => {\n        patternIdxToIsCustom = map(onlyRelevantTypes, isCustomPattern);\n        patternIdxToShort = map(allTransformedPatterns, isShortPattern);\n        emptyGroups = reduce(onlyRelevantTypes, (acc, clazz) => {\n            const groupName = clazz.GROUP;\n            if (isString(groupName) && !(groupName === Lexer.SKIPPED)) {\n                acc[groupName] = [];\n            }\n            return acc;\n        }, {});\n        patternIdxToConfig = map(allTransformedPatterns, (x, idx) => {\n            return {\n                pattern: allTransformedPatterns[idx],\n                longerAlt: patternIdxToLongerAltIdxArr[idx],\n                canLineTerminator: patternIdxToCanLineTerminator[idx],\n                isCustom: patternIdxToIsCustom[idx],\n                short: patternIdxToShort[idx],\n                group: patternIdxToGroup[idx],\n                push: patternIdxToPushMode[idx],\n                pop: patternIdxToPopMode[idx],\n                tokenTypeIdx: patternIdxToType[idx],\n                tokenType: onlyRelevantTypes[idx],\n            };\n        });\n    });\n    let canBeOptimized = true;\n    let charCodeToPatternIdxToConfig = [];\n    if (!options.safeMode) {\n        tracer(\"First Char Optimization\", () => {\n            charCodeToPatternIdxToConfig = reduce(onlyRelevantTypes, (result, currTokType, idx) => {\n                if (typeof currTokType.PATTERN === \"string\") {\n                    const charCode = currTokType.PATTERN.charCodeAt(0);\n                    const optimizedIdx = charCodeToOptimizedIndex(charCode);\n                    addToMapOfArrays(result, optimizedIdx, patternIdxToConfig[idx]);\n                }\n                else if (isArray(currTokType.START_CHARS_HINT)) {\n                    let lastOptimizedIdx;\n                    forEach(currTokType.START_CHARS_HINT, (charOrInt) => {\n                        const charCode = typeof charOrInt === \"string\"\n                            ? charOrInt.charCodeAt(0)\n                            : charOrInt;\n                        const currOptimizedIdx = charCodeToOptimizedIndex(charCode);\n                        // Avoid adding the config multiple times\n                        /* istanbul ignore else */\n                        // - Difficult to check this scenario effects as it is only a performance\n                        //   optimization that does not change correctness\n                        if (lastOptimizedIdx !== currOptimizedIdx) {\n                            lastOptimizedIdx = currOptimizedIdx;\n                            addToMapOfArrays(result, currOptimizedIdx, patternIdxToConfig[idx]);\n                        }\n                    });\n                }\n                else if (isRegExp(currTokType.PATTERN)) {\n                    if (currTokType.PATTERN.unicode) {\n                        canBeOptimized = false;\n                        if (options.ensureOptimizations) {\n                            PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                                `\\tUnable to analyze < ${currTokType.PATTERN.toString()} > pattern.\\n` +\n                                \"\\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\\n\" +\n                                \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                                \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE\");\n                        }\n                    }\n                    else {\n                        const optimizedCodes = getOptimizedStartCodesIndices(currTokType.PATTERN, options.ensureOptimizations);\n                        /* istanbul ignore if */\n                        // start code will only be empty given an empty regExp or failure of regexp-to-ast library\n                        // the first should be a different validation and the second cannot be tested.\n                        if (isEmpty(optimizedCodes)) {\n                            // we cannot understand what codes may start possible matches\n                            // The optimization correctness requires knowing start codes for ALL patterns.\n                            // Not actually sure this is an error, no debug message\n                            canBeOptimized = false;\n                        }\n                        forEach(optimizedCodes, (code) => {\n                            addToMapOfArrays(result, code, patternIdxToConfig[idx]);\n                        });\n                    }\n                }\n                else {\n                    if (options.ensureOptimizations) {\n                        PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                            `\\tTokenType: <${currTokType.name}> is using a custom token pattern without providing <start_chars_hint> parameter.\\n` +\n                            \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE\");\n                    }\n                    canBeOptimized = false;\n                }\n                return result;\n            }, []);\n        });\n    }\n    return {\n        emptyGroups: emptyGroups,\n        patternIdxToConfig: patternIdxToConfig,\n        charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,\n        hasCustom: hasCustom,\n        canBeOptimized: canBeOptimized,\n    };\n}\nexport function validatePatterns(tokenTypes, validModesNames) {\n    let errors = [];\n    const missingResult = findMissingPatterns(tokenTypes);\n    errors = errors.concat(missingResult.errors);\n    const invalidResult = findInvalidPatterns(missingResult.valid);\n    const validTokenTypes = invalidResult.valid;\n    errors = errors.concat(invalidResult.errors);\n    errors = errors.concat(validateRegExpPattern(validTokenTypes));\n    errors = errors.concat(findInvalidGroupType(validTokenTypes));\n    errors = errors.concat(findModesThatDoNotExist(validTokenTypes, validModesNames));\n    errors = errors.concat(findUnreachablePatterns(validTokenTypes));\n    return errors;\n}\nfunction validateRegExpPattern(tokenTypes) {\n    let errors = [];\n    const withRegExpPatterns = filter(tokenTypes, (currTokType) => isRegExp(currTokType[PATTERN]));\n    errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findUnsupportedFlags(withRegExpPatterns));\n    errors = errors.concat(findDuplicatePatterns(withRegExpPatterns));\n    errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns));\n    return errors;\n}\nexport function findMissingPatterns(tokenTypes) {\n    const tokenTypesWithMissingPattern = filter(tokenTypes, (currType) => {\n        return !has(currType, PATTERN);\n    });\n    const errors = map(tokenTypesWithMissingPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- missing static 'PATTERN' property\",\n            type: LexerDefinitionErrorType.MISSING_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithMissingPattern);\n    return { errors, valid };\n}\nexport function findInvalidPatterns(tokenTypes) {\n    const tokenTypesWithInvalidPattern = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return (!isRegExp(pattern) &&\n            !isFunction(pattern) &&\n            !has(pattern, \"exec\") &&\n            !isString(pattern));\n    });\n    const errors = map(tokenTypesWithInvalidPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' can only be a RegExp, a\" +\n                \" Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.\",\n            type: LexerDefinitionErrorType.INVALID_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithInvalidPattern);\n    return { errors, valid };\n}\nconst end_of_input = /[^\\\\][$]/;\nexport function findEndOfInputAnchor(tokenTypes) {\n    class EndAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitEndAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const endAnchorVisitor = new EndAnchorFinder();\n            endAnchorVisitor.visit(regexpAst);\n            return endAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return end_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain end of input anchor '$'\\n\" +\n                \"\\tSee chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.EOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findEmptyMatchRegExps(tokenTypes) {\n    const matchesEmptyString = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        return pattern.test(\"\");\n    });\n    const errors = map(matchesEmptyString, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' must not match an empty string\",\n            type: LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nconst start_of_input = /[^\\\\[][\\^]|^\\^/;\nexport function findStartOfInputAnchor(tokenTypes) {\n    class StartAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitStartAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const startAnchorVisitor = new StartAnchorFinder();\n            startAnchorVisitor.visit(regexpAst);\n            return startAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return start_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain start of input anchor '^'\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.SOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findUnsupportedFlags(tokenTypes) {\n    const invalidFlags = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return pattern instanceof RegExp && (pattern.multiline || pattern.global);\n    });\n    const errors = map(invalidFlags, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' may NOT contain global('g') or multiline('m')\",\n            type: LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\n// This can only test for identical duplicate RegExps, not semantically equivalent ones.\nexport function findDuplicatePatterns(tokenTypes) {\n    const found = [];\n    let identicalPatterns = map(tokenTypes, (outerType) => {\n        return reduce(tokenTypes, (result, innerType) => {\n            if (outerType.PATTERN.source === innerType.PATTERN.source &&\n                !includes(found, innerType) &&\n                innerType.PATTERN !== Lexer.NA) {\n                // this avoids duplicates in the result, each Token Type may only appear in one \"set\"\n                // in essence we are creating Equivalence classes on equality relation.\n                found.push(innerType);\n                result.push(innerType);\n                return result;\n            }\n            return result;\n        }, []);\n    });\n    identicalPatterns = compact(identicalPatterns);\n    const duplicatePatterns = filter(identicalPatterns, (currIdenticalSet) => {\n        return currIdenticalSet.length > 1;\n    });\n    const errors = map(duplicatePatterns, (setOfIdentical) => {\n        const tokenTypeNames = map(setOfIdentical, (currType) => {\n            return currType.name;\n        });\n        const dupPatternSrc = first(setOfIdentical).PATTERN;\n        return {\n            message: `The same RegExp pattern ->${dupPatternSrc}<-` +\n                `has been used in all of the following Token Types: ${tokenTypeNames.join(\", \")} <-`,\n            type: LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,\n            tokenTypes: setOfIdentical,\n        };\n    });\n    return errors;\n}\nexport function findInvalidGroupType(tokenTypes) {\n    const invalidTypes = filter(tokenTypes, (clazz) => {\n        if (!has(clazz, \"GROUP\")) {\n            return false;\n        }\n        const group = clazz.GROUP;\n        return group !== Lexer.SKIPPED && group !== Lexer.NA && !isString(group);\n    });\n    const errors = map(invalidTypes, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String\",\n            type: LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findModesThatDoNotExist(tokenTypes, validModes) {\n    const invalidModes = filter(tokenTypes, (clazz) => {\n        return (clazz.PUSH_MODE !== undefined && !includes(validModes, clazz.PUSH_MODE));\n    });\n    const errors = map(invalidModes, (tokType) => {\n        const msg = `Token Type: ->${tokType.name}<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->${tokType.PUSH_MODE}<-` +\n            `which does not exist`;\n        return {\n            message: msg,\n            type: LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,\n            tokenTypes: [tokType],\n        };\n    });\n    return errors;\n}\nexport function findUnreachablePatterns(tokenTypes) {\n    const errors = [];\n    const canBeTested = reduce(tokenTypes, (result, tokType, idx) => {\n        const pattern = tokType.PATTERN;\n        if (pattern === Lexer.NA) {\n            return result;\n        }\n        // a more comprehensive validation for all forms of regExps would require\n        // deeper regExp analysis capabilities\n        if (isString(pattern)) {\n            result.push({ str: pattern, idx, tokenType: tokType });\n        }\n        else if (isRegExp(pattern) && noMetaChar(pattern)) {\n            result.push({ str: pattern.source, idx, tokenType: tokType });\n        }\n        return result;\n    }, []);\n    forEach(tokenTypes, (tokType, testIdx) => {\n        forEach(canBeTested, ({ str, idx, tokenType }) => {\n            if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {\n                const msg = `Token: ->${tokenType.name}<- can never be matched.\\n` +\n                    `Because it appears AFTER the Token Type ->${tokType.name}<-` +\n                    `in the lexer's definition.\\n` +\n                    `See https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNREACHABLE`;\n                errors.push({\n                    message: msg,\n                    type: LexerDefinitionErrorType.UNREACHABLE_PATTERN,\n                    tokenTypes: [tokType, tokenType],\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction testTokenType(str, pattern) {\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        const regExpArray = pattern.exec(str);\n        return regExpArray !== null && regExpArray.index === 0;\n    }\n    else if (isFunction(pattern)) {\n        // maintain the API of custom patterns\n        return pattern(str, 0, [], {});\n    }\n    else if (has(pattern, \"exec\")) {\n        // maintain the API of custom patterns\n        return pattern.exec(str, 0, [], {});\n    }\n    else if (typeof pattern === \"string\") {\n        return pattern === str;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction noMetaChar(regExp) {\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n    const metaChars = [\n        \".\",\n        \"\\\\\",\n        \"[\",\n        \"]\",\n        \"|\",\n        \"^\",\n        \"$\",\n        \"(\",\n        \")\",\n        \"?\",\n        \"*\",\n        \"+\",\n        \"{\",\n    ];\n    return (find(metaChars, (char) => regExp.source.indexOf(char) !== -1) === undefined);\n}\nexport function addStartOfInput(pattern) {\n    const flags = pattern.ignoreCase ? \"i\" : \"\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`^(?:${pattern.source})`, flags);\n}\nexport function addStickyFlag(pattern) {\n    const flags = pattern.ignoreCase ? \"iy\" : \"y\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`${pattern.source}`, flags);\n}\nexport function performRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const errors = [];\n    // some run time checks to help the end users.\n    if (!has(lexerDefinition, DEFAULT_MODE)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                DEFAULT_MODE +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE,\n        });\n    }\n    if (!has(lexerDefinition, MODES)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                MODES +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY,\n        });\n    }\n    if (has(lexerDefinition, MODES) &&\n        has(lexerDefinition, DEFAULT_MODE) &&\n        !has(lexerDefinition.modes, lexerDefinition.defaultMode)) {\n        errors.push({\n            message: `A MultiMode Lexer cannot be initialized with a ${DEFAULT_MODE}: <${lexerDefinition.defaultMode}>` +\n                `which does not exist\\n`,\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST,\n        });\n    }\n    if (has(lexerDefinition, MODES)) {\n        forEach(lexerDefinition.modes, (currModeValue, currModeName) => {\n            forEach(currModeValue, (currTokType, currIdx) => {\n                if (isUndefined(currTokType)) {\n                    errors.push({\n                        message: `A Lexer cannot be initialized using an undefined Token Type. Mode:` +\n                            `<${currModeName}> at index: <${currIdx}>\\n`,\n                        type: LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED,\n                    });\n                }\n                else if (has(currTokType, \"LONGER_ALT\")) {\n                    const longerAlt = isArray(currTokType.LONGER_ALT)\n                        ? currTokType.LONGER_ALT\n                        : [currTokType.LONGER_ALT];\n                    forEach(longerAlt, (currLongerAlt) => {\n                        if (!isUndefined(currLongerAlt) &&\n                            !includes(currModeValue, currLongerAlt)) {\n                            errors.push({\n                                message: `A MultiMode Lexer cannot be initialized with a longer_alt <${currLongerAlt.name}> on token <${currTokType.name}> outside of mode <${currModeName}>\\n`,\n                                type: LexerDefinitionErrorType.MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE,\n                            });\n                        }\n                    });\n                }\n            });\n        });\n    }\n    return errors;\n}\nexport function performWarningRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const warnings = [];\n    let hasAnyLineBreak = false;\n    const allTokenTypes = compact(flatten(values(lexerDefinition.modes)));\n    const concreteTokenTypes = reject(allTokenTypes, (currType) => currType[PATTERN] === Lexer.NA);\n    const terminatorCharCodes = getCharCodes(lineTerminatorCharacters);\n    if (trackLines) {\n        forEach(concreteTokenTypes, (tokType) => {\n            const currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes);\n            if (currIssue !== false) {\n                const message = buildLineBreakIssueMessage(tokType, currIssue);\n                const warningDescriptor = {\n                    message,\n                    type: currIssue.issue,\n                    tokenType: tokType,\n                };\n                warnings.push(warningDescriptor);\n            }\n            else {\n                // we don't want to attempt to scan if the user explicitly specified the line_breaks option.\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    if (tokType.LINE_BREAKS === true) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n                else {\n                    if (canMatchCharCode(terminatorCharCodes, tokType.PATTERN)) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n            }\n        });\n    }\n    if (trackLines && !hasAnyLineBreak) {\n        warnings.push({\n            message: \"Warning: No LINE_BREAKS Found.\\n\" +\n                \"\\tThis Lexer has been defined to track line and column information,\\n\" +\n                \"\\tBut none of the Token Types can be identified as matching a line terminator.\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \\n\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS,\n        });\n    }\n    return warnings;\n}\nexport function cloneEmptyGroups(emptyGroups) {\n    const clonedResult = {};\n    const groupKeys = keys(emptyGroups);\n    forEach(groupKeys, (currKey) => {\n        const currGroupValue = emptyGroups[currKey];\n        /* istanbul ignore else */\n        if (isArray(currGroupValue)) {\n            clonedResult[currKey] = [];\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    });\n    return clonedResult;\n}\n// TODO: refactor to avoid duplication\nexport function isCustomPattern(tokenType) {\n    const pattern = tokenType.PATTERN;\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        return false;\n    }\n    else if (isFunction(pattern)) {\n        // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n        return true;\n    }\n    else if (has(pattern, \"exec\")) {\n        // ICustomPattern\n        return true;\n    }\n    else if (isString(pattern)) {\n        return false;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function isShortPattern(pattern) {\n    if (isString(pattern) && pattern.length === 1) {\n        return pattern.charCodeAt(0);\n    }\n    else {\n        return false;\n    }\n}\n/**\n * Faster than using a RegExp for default newline detection during lexing.\n */\nexport const LineTerminatorOptimizedTester = {\n    // implements /\\n|\\r\\n?/g.test\n    test: function (text) {\n        const len = text.length;\n        for (let i = this.lastIndex; i < len; i++) {\n            const c = text.charCodeAt(i);\n            if (c === 10) {\n                this.lastIndex = i + 1;\n                return true;\n            }\n            else if (c === 13) {\n                if (text.charCodeAt(i + 1) === 10) {\n                    this.lastIndex = i + 2;\n                }\n                else {\n                    this.lastIndex = i + 1;\n                }\n                return true;\n            }\n        }\n        return false;\n    },\n    lastIndex: 0,\n};\nfunction checkLineBreaksIssues(tokType, lineTerminatorCharCodes) {\n    if (has(tokType, \"LINE_BREAKS\")) {\n        // if the user explicitly declared the line_breaks option we will respect their choice\n        // and assume it is correct.\n        return false;\n    }\n    else {\n        /* istanbul ignore else */\n        if (isRegExp(tokType.PATTERN)) {\n            try {\n                // TODO: why is the casting suddenly needed?\n                canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);\n            }\n            catch (e) {\n                /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */\n                return {\n                    issue: LexerDefinitionErrorType.IDENTIFY_TERMINATOR,\n                    errMsg: e.message,\n                };\n            }\n            return false;\n        }\n        else if (isString(tokType.PATTERN)) {\n            // string literal patterns can always be analyzed to detect line terminator usage\n            return false;\n        }\n        else if (isCustomPattern(tokType)) {\n            // custom token types\n            return { issue: LexerDefinitionErrorType.CUSTOM_LINE_BREAK };\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n}\nexport function buildLineBreakIssueMessage(tokType, details) {\n    /* istanbul ignore else */\n    if (details.issue === LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {\n        return (\"Warning: unable to identify line terminator usage in pattern.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            `\\t Root cause: ${details.errMsg}.\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR\");\n    }\n    else if (details.issue === LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {\n        return (\"Warning: A Custom Token Pattern should specify the <line_breaks> option.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK\");\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction getCharCodes(charsOrCodes) {\n    const charCodes = map(charsOrCodes, (numOrString) => {\n        if (isString(numOrString)) {\n            return numOrString.charCodeAt(0);\n        }\n        else {\n            return numOrString;\n        }\n    });\n    return charCodes;\n}\nfunction addToMapOfArrays(map, key, value) {\n    if (map[key] === undefined) {\n        map[key] = [value];\n    }\n    else {\n        map[key].push(value);\n    }\n}\nexport const minOptimizationVal = 256;\n/**\n * We are mapping charCode above ASCI (256) into buckets each in the size of 256.\n * This is because ASCI are the most common start chars so each one of those will get its own\n * possible token configs vector.\n *\n * Tokens starting with charCodes \"above\" ASCI are uncommon, so we can \"afford\"\n * to place these into buckets of possible token configs, What we gain from\n * this is avoiding the case of creating an optimization 'charCodeToPatternIdxToConfig'\n * which would contain 10,000+ arrays of small size (e.g unicode Identifiers scenario).\n * Our 'charCodeToPatternIdxToConfig' max size will now be:\n * 256 + (2^16 / 2^8) - 1 === 511\n *\n * note the hack for fast division integer part extraction\n * See: https://stackoverflow.com/a/4228528\n */\nlet charCodeToOptimizedIdxMap = [];\nexport function charCodeToOptimizedIndex(charCode) {\n    return charCode < minOptimizationVal\n        ? charCode\n        : charCodeToOptimizedIdxMap[charCode];\n}\n/**\n * This is a compromise between cold start / hot running performance\n * Creating this array takes ~3ms on a modern machine,\n * But if we perform the computation at runtime as needed the CSS Lexer benchmark\n * performance degrades by ~10%\n *\n * TODO: Perhaps it should be lazy initialized only if a charCode > 255 is used.\n */\nfunction initCharCodeToOptimizedIndexMap() {\n    if (isEmpty(charCodeToOptimizedIdxMap)) {\n        charCodeToOptimizedIdxMap = new Array(65536);\n        for (let i = 0; i < 65536; i++) {\n            charCodeToOptimizedIdxMap[i] = i > 255 ? 255 + ~~(i / 255) : i;\n        }\n    }\n}\n//# sourceMappingURL=lexer.js.map","export function timer(func) {\n    const start = new Date().getTime();\n    const val = func();\n    const end = new Date().getTime();\n    const total = end - start;\n    return { time: total, value: val };\n}\n//# sourceMappingURL=timer.js.map","import { clone, compact, difference, flatten, forEach, has, includes, isArray, isEmpty, map, } from \"lodash-es\";\nexport function tokenStructuredMatcher(tokInstance, tokConstructor) {\n    const instanceType = tokInstance.tokenTypeIdx;\n    if (instanceType === tokConstructor.tokenTypeIdx) {\n        return true;\n    }\n    else {\n        return (tokConstructor.isParent === true &&\n            tokConstructor.categoryMatchesMap[instanceType] === true);\n    }\n}\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nexport function tokenStructuredMatcherNoCategories(token, tokType) {\n    return token.tokenTypeIdx === tokType.tokenTypeIdx;\n}\nexport let tokenShortNameIdx = 1;\nexport const tokenIdxToClass = {};\nexport function augmentTokenTypes(tokenTypes) {\n    // collect the parent Token Types as well.\n    const tokenTypesAndParents = expandCategories(tokenTypes);\n    // add required tokenType and categoryMatches properties\n    assignTokenDefaultProps(tokenTypesAndParents);\n    // fill up the categoryMatches\n    assignCategoriesMapProp(tokenTypesAndParents);\n    assignCategoriesTokensProp(tokenTypesAndParents);\n    forEach(tokenTypesAndParents, (tokType) => {\n        tokType.isParent = tokType.categoryMatches.length > 0;\n    });\n}\nexport function expandCategories(tokenTypes) {\n    let result = clone(tokenTypes);\n    let categories = tokenTypes;\n    let searching = true;\n    while (searching) {\n        categories = compact(flatten(map(categories, (currTokType) => currTokType.CATEGORIES)));\n        const newCategories = difference(categories, result);\n        result = result.concat(newCategories);\n        if (isEmpty(newCategories)) {\n            searching = false;\n        }\n        else {\n            categories = newCategories;\n        }\n    }\n    return result;\n}\nexport function assignTokenDefaultProps(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        if (!hasShortKeyProperty(currTokType)) {\n            tokenIdxToClass[tokenShortNameIdx] = currTokType;\n            currTokType.tokenTypeIdx = tokenShortNameIdx++;\n        }\n        // CATEGORIES? : TokenType | TokenType[]\n        if (hasCategoriesProperty(currTokType) &&\n            !isArray(currTokType.CATEGORIES)\n        // &&\n        // !isUndefined(currTokType.CATEGORIES.PATTERN)\n        ) {\n            currTokType.CATEGORIES = [currTokType.CATEGORIES];\n        }\n        if (!hasCategoriesProperty(currTokType)) {\n            currTokType.CATEGORIES = [];\n        }\n        if (!hasExtendingTokensTypesProperty(currTokType)) {\n            currTokType.categoryMatches = [];\n        }\n        if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n            currTokType.categoryMatchesMap = {};\n        }\n    });\n}\nexport function assignCategoriesTokensProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        // avoid duplications\n        currTokType.categoryMatches = [];\n        forEach(currTokType.categoryMatchesMap, (val, key) => {\n            currTokType.categoryMatches.push(tokenIdxToClass[key].tokenTypeIdx);\n        });\n    });\n}\nexport function assignCategoriesMapProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        singleAssignCategoriesToksMap([], currTokType);\n    });\n}\nexport function singleAssignCategoriesToksMap(path, nextNode) {\n    forEach(path, (pathNode) => {\n        nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true;\n    });\n    forEach(nextNode.CATEGORIES, (nextCategory) => {\n        const newPath = path.concat(nextNode);\n        // avoids infinite loops due to cyclic categories.\n        if (!includes(newPath, nextCategory)) {\n            singleAssignCategoriesToksMap(newPath, nextCategory);\n        }\n    });\n}\nexport function hasShortKeyProperty(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\nexport function hasCategoriesProperty(tokType) {\n    return has(tokType, \"CATEGORIES\");\n}\nexport function hasExtendingTokensTypesProperty(tokType) {\n    return has(tokType, \"categoryMatches\");\n}\nexport function hasExtendingTokensTypesMapProperty(tokType) {\n    return has(tokType, \"categoryMatchesMap\");\n}\nexport function isTokenType(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\n//# sourceMappingURL=tokens.js.map","import { analyzeTokenTypes, charCodeToOptimizedIndex, cloneEmptyGroups, DEFAULT_MODE, LineTerminatorOptimizedTester, performRuntimeChecks, performWarningRuntimeChecks, SUPPORT_STICKY, validatePatterns, } from \"./lexer.js\";\nimport { assign, clone, forEach, identity, isArray, isEmpty, isUndefined, keys, last, map, noop, reduce, reject, } from \"lodash-es\";\nimport { PRINT_WARNING, timer, toFastProperties } from \"@chevrotain/utils\";\nimport { augmentTokenTypes } from \"./tokens.js\";\nimport { defaultLexerErrorProvider } from \"./lexer_errors_public.js\";\nimport { clearRegExpParserCache } from \"./reg_exp_parser.js\";\nexport var LexerDefinitionErrorType;\n(function (LexerDefinitionErrorType) {\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MISSING_PATTERN\"] = 0] = \"MISSING_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_PATTERN\"] = 1] = \"INVALID_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EOI_ANCHOR_FOUND\"] = 2] = \"EOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNSUPPORTED_FLAGS_FOUND\"] = 3] = \"UNSUPPORTED_FLAGS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"DUPLICATE_PATTERNS_FOUND\"] = 4] = \"DUPLICATE_PATTERNS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_GROUP_TYPE_FOUND\"] = 5] = \"INVALID_GROUP_TYPE_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"PUSH_MODE_DOES_NOT_EXIST\"] = 6] = \"PUSH_MODE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\"] = 7] = \"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\"] = 8] = \"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\"] = 9] = \"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\"] = 10] = \"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"SOI_ANCHOR_FOUND\"] = 11] = \"SOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EMPTY_MATCH_PATTERN\"] = 12] = \"EMPTY_MATCH_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"NO_LINE_BREAKS_FLAGS\"] = 13] = \"NO_LINE_BREAKS_FLAGS\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNREACHABLE_PATTERN\"] = 14] = \"UNREACHABLE_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"IDENTIFY_TERMINATOR\"] = 15] = \"IDENTIFY_TERMINATOR\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"CUSTOM_LINE_BREAK\"] = 16] = \"CUSTOM_LINE_BREAK\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\"] = 17] = \"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\";\n})(LexerDefinitionErrorType || (LexerDefinitionErrorType = {}));\nconst DEFAULT_LEXER_CONFIG = {\n    deferDefinitionErrorsHandling: false,\n    positionTracking: \"full\",\n    lineTerminatorsPattern: /\\n|\\r\\n?/g,\n    lineTerminatorCharacters: [\"\\n\", \"\\r\"],\n    ensureOptimizations: false,\n    safeMode: false,\n    errorMessageProvider: defaultLexerErrorProvider,\n    traceInitPerf: false,\n    skipValidations: false,\n    recoveryEnabled: true,\n};\nObject.freeze(DEFAULT_LEXER_CONFIG);\nexport class Lexer {\n    constructor(lexerDefinition, config = DEFAULT_LEXER_CONFIG) {\n        this.lexerDefinition = lexerDefinition;\n        this.lexerDefinitionErrors = [];\n        this.lexerDefinitionWarning = [];\n        this.patternIdxToConfig = {};\n        this.charCodeToPatternIdxToConfig = {};\n        this.modes = [];\n        this.emptyGroups = {};\n        this.trackStartLines = true;\n        this.trackEndLines = true;\n        this.hasCustom = false;\n        this.canModeBeOptimized = {};\n        // Duplicated from the parser's perf trace trait to allow future extraction\n        // of the lexer to a separate package.\n        this.TRACE_INIT = (phaseDesc, phaseImpl) => {\n            // No need to optimize this using NOOP pattern because\n            // It is not called in a hot spot...\n            if (this.traceInitPerf === true) {\n                this.traceInitIndent++;\n                const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    console.log(`${indent}--> <${phaseDesc}>`);\n                }\n                const { time, value } = timer(phaseImpl);\n                /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n                const traceMethod = time > 10 ? console.warn : console.log;\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n                }\n                this.traceInitIndent--;\n                return value;\n            }\n            else {\n                return phaseImpl();\n            }\n        };\n        if (typeof config === \"boolean\") {\n            throw Error(\"The second argument to the Lexer constructor is now an ILexerConfig Object.\\n\" +\n                \"a boolean 2nd argument is no longer supported\");\n        }\n        // todo: defaults func?\n        this.config = assign({}, DEFAULT_LEXER_CONFIG, config);\n        const traceInitVal = this.config.traceInitPerf;\n        if (traceInitVal === true) {\n            this.traceInitMaxIdent = Infinity;\n            this.traceInitPerf = true;\n        }\n        else if (typeof traceInitVal === \"number\") {\n            this.traceInitMaxIdent = traceInitVal;\n            this.traceInitPerf = true;\n        }\n        this.traceInitIndent = -1;\n        this.TRACE_INIT(\"Lexer Constructor\", () => {\n            let actualDefinition;\n            let hasOnlySingleMode = true;\n            this.TRACE_INIT(\"Lexer Config handling\", () => {\n                if (this.config.lineTerminatorsPattern ===\n                    DEFAULT_LEXER_CONFIG.lineTerminatorsPattern) {\n                    // optimized built-in implementation for the defaults definition of lineTerminators\n                    this.config.lineTerminatorsPattern = LineTerminatorOptimizedTester;\n                }\n                else {\n                    if (this.config.lineTerminatorCharacters ===\n                        DEFAULT_LEXER_CONFIG.lineTerminatorCharacters) {\n                        throw Error(\"Error: Missing <lineTerminatorCharacters> property on the Lexer config.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS\");\n                    }\n                }\n                if (config.safeMode && config.ensureOptimizations) {\n                    throw Error('\"safeMode\" and \"ensureOptimizations\" flags are mutually exclusive.');\n                }\n                this.trackStartLines = /full|onlyStart/i.test(this.config.positionTracking);\n                this.trackEndLines = /full/i.test(this.config.positionTracking);\n                // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.\n                if (isArray(lexerDefinition)) {\n                    actualDefinition = {\n                        modes: { defaultMode: clone(lexerDefinition) },\n                        defaultMode: DEFAULT_MODE,\n                    };\n                }\n                else {\n                    // no conversion needed, input should already be a IMultiModeLexerDefinition\n                    hasOnlySingleMode = false;\n                    actualDefinition = clone(lexerDefinition);\n                }\n            });\n            if (this.config.skipValidations === false) {\n                this.TRACE_INIT(\"performRuntimeChecks\", () => {\n                    this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(performRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n                this.TRACE_INIT(\"performWarningRuntimeChecks\", () => {\n                    this.lexerDefinitionWarning = this.lexerDefinitionWarning.concat(performWarningRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n            }\n            // for extra robustness to avoid throwing an none informative error message\n            actualDefinition.modes = actualDefinition.modes\n                ? actualDefinition.modes\n                : {};\n            // an error of undefined TokenTypes will be detected in \"performRuntimeChecks\" above.\n            // this transformation is to increase robustness in the case of partially invalid lexer definition.\n            forEach(actualDefinition.modes, (currModeValue, currModeName) => {\n                actualDefinition.modes[currModeName] = reject(currModeValue, (currTokType) => isUndefined(currTokType));\n            });\n            const allModeNames = keys(actualDefinition.modes);\n            forEach(actualDefinition.modes, (currModDef, currModName) => {\n                this.TRACE_INIT(`Mode: <${currModName}> processing`, () => {\n                    this.modes.push(currModName);\n                    if (this.config.skipValidations === false) {\n                        this.TRACE_INIT(`validatePatterns`, () => {\n                            this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(validatePatterns(currModDef, allModeNames));\n                        });\n                    }\n                    // If definition errors were encountered, the analysis phase may fail unexpectedly/\n                    // Considering a lexer with definition errors may never be used, there is no point\n                    // to performing the analysis anyhow...\n                    if (isEmpty(this.lexerDefinitionErrors)) {\n                        augmentTokenTypes(currModDef);\n                        let currAnalyzeResult;\n                        this.TRACE_INIT(`analyzeTokenTypes`, () => {\n                            currAnalyzeResult = analyzeTokenTypes(currModDef, {\n                                lineTerminatorCharacters: this.config.lineTerminatorCharacters,\n                                positionTracking: config.positionTracking,\n                                ensureOptimizations: config.ensureOptimizations,\n                                safeMode: config.safeMode,\n                                tracer: this.TRACE_INIT,\n                            });\n                        });\n                        this.patternIdxToConfig[currModName] =\n                            currAnalyzeResult.patternIdxToConfig;\n                        this.charCodeToPatternIdxToConfig[currModName] =\n                            currAnalyzeResult.charCodeToPatternIdxToConfig;\n                        this.emptyGroups = assign({}, this.emptyGroups, currAnalyzeResult.emptyGroups);\n                        this.hasCustom = currAnalyzeResult.hasCustom || this.hasCustom;\n                        this.canModeBeOptimized[currModName] =\n                            currAnalyzeResult.canBeOptimized;\n                    }\n                });\n            });\n            this.defaultMode = actualDefinition.defaultMode;\n            if (!isEmpty(this.lexerDefinitionErrors) &&\n                !this.config.deferDefinitionErrorsHandling) {\n                const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                    return error.message;\n                });\n                const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n                throw new Error(\"Errors detected in definition of Lexer:\\n\" + allErrMessagesString);\n            }\n            // Only print warning if there are no errors, This will avoid pl\n            forEach(this.lexerDefinitionWarning, (warningDescriptor) => {\n                PRINT_WARNING(warningDescriptor.message);\n            });\n            this.TRACE_INIT(\"Choosing sub-methods implementations\", () => {\n                // Choose the relevant internal implementations for this specific parser.\n                // These implementations should be in-lined by the JavaScript engine\n                // to provide optimal performance in each scenario.\n                if (SUPPORT_STICKY) {\n                    this.chopInput = identity;\n                    this.match = this.matchWithTest;\n                }\n                else {\n                    this.updateLastIndex = noop;\n                    this.match = this.matchWithExec;\n                }\n                if (hasOnlySingleMode) {\n                    this.handleModes = noop;\n                }\n                if (this.trackStartLines === false) {\n                    this.computeNewColumn = identity;\n                }\n                if (this.trackEndLines === false) {\n                    this.updateTokenEndLineColumnLocation = noop;\n                }\n                if (/full/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createFullToken;\n                }\n                else if (/onlyStart/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createStartOnlyToken;\n                }\n                else if (/onlyOffset/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createOffsetOnlyToken;\n                }\n                else {\n                    throw Error(`Invalid <positionTracking> config option: \"${this.config.positionTracking}\"`);\n                }\n                if (this.hasCustom) {\n                    this.addToken = this.addTokenUsingPush;\n                    this.handlePayload = this.handlePayloadWithCustom;\n                }\n                else {\n                    this.addToken = this.addTokenUsingMemberAccess;\n                    this.handlePayload = this.handlePayloadNoCustom;\n                }\n            });\n            this.TRACE_INIT(\"Failed Optimization Warnings\", () => {\n                const unOptimizedModes = reduce(this.canModeBeOptimized, (cannotBeOptimized, canBeOptimized, modeName) => {\n                    if (canBeOptimized === false) {\n                        cannotBeOptimized.push(modeName);\n                    }\n                    return cannotBeOptimized;\n                }, []);\n                if (config.ensureOptimizations && !isEmpty(unOptimizedModes)) {\n                    throw Error(`Lexer Modes: < ${unOptimizedModes.join(\", \")} > cannot be optimized.\\n` +\n                        '\\t Disable the \"ensureOptimizations\" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\\n' +\n                        \"\\t Or inspect the console log for details on how to resolve these issues.\");\n                }\n            });\n            this.TRACE_INIT(\"clearRegExpParserCache\", () => {\n                clearRegExpParserCache();\n            });\n            this.TRACE_INIT(\"toFastProperties\", () => {\n                toFastProperties(this);\n            });\n        });\n    }\n    tokenize(text, initialMode = this.defaultMode) {\n        if (!isEmpty(this.lexerDefinitionErrors)) {\n            const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                return error.message;\n            });\n            const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n            throw new Error(\"Unable to Tokenize because Errors detected in definition of Lexer:\\n\" +\n                allErrMessagesString);\n        }\n        return this.tokenizeInternal(text, initialMode);\n    }\n    // There is quite a bit of duplication between this and \"tokenizeInternalLazy\"\n    // This is intentional due to performance considerations.\n    // this method also used quite a bit of `!` none null assertions because it is too optimized\n    // for `tsc` to always understand it is \"safe\"\n    tokenizeInternal(text, initialMode) {\n        let i, j, k, matchAltImage, longerAlt, matchedImage, payload, altPayload, imageLength, group, tokType, newToken, errLength, droppedChar, msg, match;\n        const orgText = text;\n        const orgLength = orgText.length;\n        let offset = 0;\n        let matchedTokensIndex = 0;\n        // initializing the tokensArray to the \"guessed\" size.\n        // guessing too little will still reduce the number of array re-sizes on pushes.\n        // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory\n        // but would still have a faster runtime by avoiding (All but one) array resizing.\n        const guessedNumberOfTokens = this.hasCustom\n            ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.\n            : Math.floor(text.length / 10);\n        const matchedTokens = new Array(guessedNumberOfTokens);\n        const errors = [];\n        let line = this.trackStartLines ? 1 : undefined;\n        let column = this.trackStartLines ? 1 : undefined;\n        const groups = cloneEmptyGroups(this.emptyGroups);\n        const trackLines = this.trackStartLines;\n        const lineTerminatorPattern = this.config.lineTerminatorsPattern;\n        let currModePatternsLength = 0;\n        let patternIdxToConfig = [];\n        let currCharCodeToPatternIdxToConfig = [];\n        const modeStack = [];\n        const emptyArray = [];\n        Object.freeze(emptyArray);\n        let getPossiblePatterns;\n        function getPossiblePatternsSlow() {\n            return patternIdxToConfig;\n        }\n        function getPossiblePatternsOptimized(charCode) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(charCode);\n            const possiblePatterns = currCharCodeToPatternIdxToConfig[optimizedCharIdx];\n            if (possiblePatterns === undefined) {\n                return emptyArray;\n            }\n            else {\n                return possiblePatterns;\n            }\n        }\n        const pop_mode = (popToken) => {\n            // TODO: perhaps avoid this error in the edge case there is no more input?\n            if (modeStack.length === 1 &&\n                // if we have both a POP_MODE and a PUSH_MODE this is in-fact a \"transition\"\n                // So no error should occur.\n                popToken.tokenType.PUSH_MODE === undefined) {\n                // if we try to pop the last mode there lexer will no longer have ANY mode.\n                // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.\n                const msg = this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(popToken);\n                errors.push({\n                    offset: popToken.startOffset,\n                    line: popToken.startLine,\n                    column: popToken.startColumn,\n                    length: popToken.image.length,\n                    message: msg,\n                });\n            }\n            else {\n                modeStack.pop();\n                const newMode = last(modeStack);\n                patternIdxToConfig = this.patternIdxToConfig[newMode];\n                currCharCodeToPatternIdxToConfig =\n                    this.charCodeToPatternIdxToConfig[newMode];\n                currModePatternsLength = patternIdxToConfig.length;\n                const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n                if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                    getPossiblePatterns = getPossiblePatternsOptimized;\n                }\n                else {\n                    getPossiblePatterns = getPossiblePatternsSlow;\n                }\n            }\n        };\n        function push_mode(newMode) {\n            modeStack.push(newMode);\n            currCharCodeToPatternIdxToConfig =\n                this.charCodeToPatternIdxToConfig[newMode];\n            patternIdxToConfig = this.patternIdxToConfig[newMode];\n            currModePatternsLength = patternIdxToConfig.length;\n            currModePatternsLength = patternIdxToConfig.length;\n            const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n            if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                getPossiblePatterns = getPossiblePatternsOptimized;\n            }\n            else {\n                getPossiblePatterns = getPossiblePatternsSlow;\n            }\n        }\n        // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not\n        // seem to matter performance wise.\n        push_mode.call(this, initialMode);\n        let currConfig;\n        const recoveryEnabled = this.config.recoveryEnabled;\n        while (offset < orgLength) {\n            matchedImage = null;\n            const nextCharCode = orgText.charCodeAt(offset);\n            const chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode);\n            const chosenPatternsLength = chosenPatternIdxToConfig.length;\n            for (i = 0; i < chosenPatternsLength; i++) {\n                currConfig = chosenPatternIdxToConfig[i];\n                const currPattern = currConfig.pattern;\n                payload = null;\n                // manually in-lined because > 600 chars won't be in-lined in V8\n                const singleCharCode = currConfig.short;\n                if (singleCharCode !== false) {\n                    if (nextCharCode === singleCharCode) {\n                        // single character string\n                        matchedImage = currPattern;\n                    }\n                }\n                else if (currConfig.isCustom === true) {\n                    match = currPattern.exec(orgText, offset, matchedTokens, groups);\n                    if (match !== null) {\n                        matchedImage = match[0];\n                        if (match.payload !== undefined) {\n                            payload = match.payload;\n                        }\n                    }\n                    else {\n                        matchedImage = null;\n                    }\n                }\n                else {\n                    this.updateLastIndex(currPattern, offset);\n                    matchedImage = this.match(currPattern, text, offset);\n                }\n                if (matchedImage !== null) {\n                    // even though this pattern matched we must try a another longer alternative.\n                    // this can be used to prioritize keywords over identifiers\n                    longerAlt = currConfig.longerAlt;\n                    if (longerAlt !== undefined) {\n                        // TODO: micro optimize, avoid extra prop access\n                        // by saving/linking longerAlt on the original config?\n                        const longerAltLength = longerAlt.length;\n                        for (k = 0; k < longerAltLength; k++) {\n                            const longerAltConfig = patternIdxToConfig[longerAlt[k]];\n                            const longerAltPattern = longerAltConfig.pattern;\n                            altPayload = null;\n                            // single Char can never be a longer alt so no need to test it.\n                            // manually in-lined because > 600 chars won't be in-lined in V8\n                            if (longerAltConfig.isCustom === true) {\n                                match = longerAltPattern.exec(orgText, offset, matchedTokens, groups);\n                                if (match !== null) {\n                                    matchAltImage = match[0];\n                                    if (match.payload !== undefined) {\n                                        altPayload = match.payload;\n                                    }\n                                }\n                                else {\n                                    matchAltImage = null;\n                                }\n                            }\n                            else {\n                                this.updateLastIndex(longerAltPattern, offset);\n                                matchAltImage = this.match(longerAltPattern, text, offset);\n                            }\n                            if (matchAltImage && matchAltImage.length > matchedImage.length) {\n                                matchedImage = matchAltImage;\n                                payload = altPayload;\n                                currConfig = longerAltConfig;\n                                // Exit the loop early after matching one of the longer alternatives\n                                // The first matched alternative takes precedence\n                                break;\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n            // successful match\n            if (matchedImage !== null) {\n                imageLength = matchedImage.length;\n                group = currConfig.group;\n                if (group !== undefined) {\n                    tokType = currConfig.tokenTypeIdx;\n                    // TODO: \"offset + imageLength\" and the new column may be computed twice in case of \"full\" location information inside\n                    // createFullToken method\n                    newToken = this.createTokenInstance(matchedImage, offset, tokType, currConfig.tokenType, line, column, imageLength);\n                    this.handlePayload(newToken, payload);\n                    // TODO: optimize NOOP in case there are no special groups?\n                    if (group === false) {\n                        matchedTokensIndex = this.addToken(matchedTokens, matchedTokensIndex, newToken);\n                    }\n                    else {\n                        groups[group].push(newToken);\n                    }\n                }\n                text = this.chopInput(text, imageLength);\n                offset = offset + imageLength;\n                // TODO: with newlines the column may be assigned twice\n                column = this.computeNewColumn(column, imageLength);\n                if (trackLines === true && currConfig.canLineTerminator === true) {\n                    let numOfLTsInMatch = 0;\n                    let foundTerminator;\n                    let lastLTEndOffset;\n                    lineTerminatorPattern.lastIndex = 0;\n                    do {\n                        foundTerminator = lineTerminatorPattern.test(matchedImage);\n                        if (foundTerminator === true) {\n                            lastLTEndOffset = lineTerminatorPattern.lastIndex - 1;\n                            numOfLTsInMatch++;\n                        }\n                    } while (foundTerminator === true);\n                    if (numOfLTsInMatch !== 0) {\n                        line = line + numOfLTsInMatch;\n                        column = imageLength - lastLTEndOffset;\n                        this.updateTokenEndLineColumnLocation(newToken, group, lastLTEndOffset, numOfLTsInMatch, line, column, imageLength);\n                    }\n                }\n                // will be NOOP if no modes present\n                this.handleModes(currConfig, pop_mode, push_mode, newToken);\n            }\n            else {\n                // error recovery, drop characters until we identify a valid token's start point\n                const errorStartOffset = offset;\n                const errorLine = line;\n                const errorColumn = column;\n                let foundResyncPoint = recoveryEnabled === false;\n                while (foundResyncPoint === false && offset < orgLength) {\n                    // Identity Func (when sticky flag is enabled)\n                    text = this.chopInput(text, 1);\n                    offset++;\n                    for (j = 0; j < currModePatternsLength; j++) {\n                        const currConfig = patternIdxToConfig[j];\n                        const currPattern = currConfig.pattern;\n                        // manually in-lined because > 600 chars won't be in-lined in V8\n                        const singleCharCode = currConfig.short;\n                        if (singleCharCode !== false) {\n                            if (orgText.charCodeAt(offset) === singleCharCode) {\n                                // single character string\n                                foundResyncPoint = true;\n                            }\n                        }\n                        else if (currConfig.isCustom === true) {\n                            foundResyncPoint =\n                                currPattern.exec(orgText, offset, matchedTokens, groups) !== null;\n                        }\n                        else {\n                            this.updateLastIndex(currPattern, offset);\n                            foundResyncPoint = currPattern.exec(text) !== null;\n                        }\n                        if (foundResyncPoint === true) {\n                            break;\n                        }\n                    }\n                }\n                errLength = offset - errorStartOffset;\n                column = this.computeNewColumn(column, errLength);\n                // at this point we either re-synced or reached the end of the input text\n                msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(orgText, errorStartOffset, errLength, errorLine, errorColumn);\n                errors.push({\n                    offset: errorStartOffset,\n                    line: errorLine,\n                    column: errorColumn,\n                    length: errLength,\n                    message: msg,\n                });\n                if (recoveryEnabled === false) {\n                    break;\n                }\n            }\n        }\n        // if we do have custom patterns which push directly into the\n        // TODO: custom tokens should not push directly??\n        if (!this.hasCustom) {\n            // if we guessed a too large size for the tokens array this will shrink it to the right size.\n            matchedTokens.length = matchedTokensIndex;\n        }\n        return {\n            tokens: matchedTokens,\n            groups: groups,\n            errors: errors,\n        };\n    }\n    handleModes(config, pop_mode, push_mode, newToken) {\n        if (config.pop === true) {\n            // need to save the PUSH_MODE property as if the mode is popped\n            // patternIdxToPopMode is updated to reflect the new mode after popping the stack\n            const pushMode = config.push;\n            pop_mode(newToken);\n            if (pushMode !== undefined) {\n                push_mode.call(this, pushMode);\n            }\n        }\n        else if (config.push !== undefined) {\n            push_mode.call(this, config.push);\n        }\n    }\n    chopInput(text, length) {\n        return text.substring(length);\n    }\n    updateLastIndex(regExp, newLastIndex) {\n        regExp.lastIndex = newLastIndex;\n    }\n    // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler\n    updateTokenEndLineColumnLocation(newToken, group, lastLTIdx, numOfLTsInMatch, line, column, imageLength) {\n        let lastCharIsLT, fixForEndingInLT;\n        if (group !== undefined) {\n            // a none skipped multi line Token, need to update endLine/endColumn\n            lastCharIsLT = lastLTIdx === imageLength - 1;\n            fixForEndingInLT = lastCharIsLT ? -1 : 0;\n            if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {\n                // if a token ends in a LT that last LT only affects the line numbering of following Tokens\n                newToken.endLine = line + fixForEndingInLT;\n                // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)\n                // inclusive to exclusive range.\n                newToken.endColumn = column - 1 + -fixForEndingInLT;\n            }\n            // else single LT in the last character of a token, no need to modify the endLine/EndColumn\n        }\n    }\n    computeNewColumn(oldColumn, imageLength) {\n        return oldColumn + imageLength;\n    }\n    createOffsetOnlyToken(image, startOffset, tokenTypeIdx, tokenType) {\n        return {\n            image,\n            startOffset,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createStartOnlyToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn) {\n        return {\n            image,\n            startOffset,\n            startLine,\n            startColumn,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createFullToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn, imageLength) {\n        return {\n            image,\n            startOffset,\n            endOffset: startOffset + imageLength - 1,\n            startLine,\n            endLine: startLine,\n            startColumn,\n            endColumn: startColumn + imageLength - 1,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    addTokenUsingPush(tokenVector, index, tokenToAdd) {\n        tokenVector.push(tokenToAdd);\n        return index;\n    }\n    addTokenUsingMemberAccess(tokenVector, index, tokenToAdd) {\n        tokenVector[index] = tokenToAdd;\n        index++;\n        return index;\n    }\n    handlePayloadNoCustom(token, payload) { }\n    handlePayloadWithCustom(token, payload) {\n        if (payload !== null) {\n            token.payload = payload;\n        }\n    }\n    matchWithTest(pattern, text, offset) {\n        const found = pattern.test(text);\n        if (found === true) {\n            return text.substring(offset, pattern.lastIndex);\n        }\n        return null;\n    }\n    matchWithExec(pattern, text) {\n        const regExpArray = pattern.exec(text);\n        return regExpArray !== null ? regExpArray[0] : null;\n    }\n}\nLexer.SKIPPED = \"This marks a skipped Token pattern, this means each token identified by it will\" +\n    \"be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.\";\nLexer.NA = /NOT_APPLICABLE/;\n//# sourceMappingURL=lexer_public.js.map","export const defaultLexerErrorProvider = {\n    buildUnableToPopLexerModeMessage(token) {\n        return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`;\n    },\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return (`unexpected character: ->${fullText.charAt(startOffset)}<- at offset: ${startOffset},` + ` skipped ${length} characters.`);\n    },\n};\n//# sourceMappingURL=lexer_errors_public.js.map","import { has, isString, isUndefined } from \"lodash-es\";\nimport { Lexer } from \"./lexer_public.js\";\nimport { augmentTokenTypes, tokenStructuredMatcher } from \"./tokens.js\";\nexport function tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\nexport function tokenName(tokType) {\n    return tokType.name;\n}\nexport function hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nconst PARENT = \"parent\";\nconst CATEGORIES = \"categories\";\nconst LABEL = \"label\";\nconst GROUP = \"group\";\nconst PUSH_MODE = \"push_mode\";\nconst POP_MODE = \"pop_mode\";\nconst LONGER_ALT = \"longer_alt\";\nconst LINE_BREAKS = \"line_breaks\";\nconst START_CHARS_HINT = \"start_chars_hint\";\nexport function createToken(config) {\n    return createTokenInternal(config);\n}\nfunction createTokenInternal(config) {\n    const pattern = config.pattern;\n    const tokenType = {};\n    tokenType.name = config.name;\n    if (!isUndefined(pattern)) {\n        tokenType.PATTERN = pattern;\n    }\n    if (has(config, PARENT)) {\n        throw (\"The parent property is no longer supported.\\n\" +\n            \"See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.\");\n    }\n    if (has(config, CATEGORIES)) {\n        // casting to ANY as this will be fixed inside `augmentTokenTypes``\n        tokenType.CATEGORIES = config[CATEGORIES];\n    }\n    augmentTokenTypes([tokenType]);\n    if (has(config, LABEL)) {\n        tokenType.LABEL = config[LABEL];\n    }\n    if (has(config, GROUP)) {\n        tokenType.GROUP = config[GROUP];\n    }\n    if (has(config, POP_MODE)) {\n        tokenType.POP_MODE = config[POP_MODE];\n    }\n    if (has(config, PUSH_MODE)) {\n        tokenType.PUSH_MODE = config[PUSH_MODE];\n    }\n    if (has(config, LONGER_ALT)) {\n        tokenType.LONGER_ALT = config[LONGER_ALT];\n    }\n    if (has(config, LINE_BREAKS)) {\n        tokenType.LINE_BREAKS = config[LINE_BREAKS];\n    }\n    if (has(config, START_CHARS_HINT)) {\n        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n    }\n    return tokenType;\n}\nexport const EOF = createToken({ name: \"EOF\", pattern: Lexer.NA });\naugmentTokenTypes([EOF]);\nexport function createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n    return {\n        image,\n        startOffset,\n        endOffset,\n        startLine,\n        endLine,\n        startColumn,\n        endColumn,\n        tokenTypeIdx: tokType.tokenTypeIdx,\n        tokenType: tokType,\n    };\n}\nexport function tokenMatcher(token, tokType) {\n    return tokenStructuredMatcher(token, tokType);\n}\n//# sourceMappingURL=tokens_public.js.map","import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public.js\";\nimport { first, map, reduce } from \"lodash-es\";\nimport { getProductionDslName, NonTerminal, Rule, Terminal, } from \"@chevrotain/gast\";\nexport const defaultParserErrorProvider = {\n    buildMismatchTokenMessage({ expected, actual, previous, ruleName }) {\n        const hasLabel = hasTokenLabel(expected);\n        const expectedMsg = hasLabel\n            ? `--> ${tokenLabel(expected)} <--`\n            : `token of type --> ${expected.name} <--`;\n        const msg = `Expecting ${expectedMsg} but found --> '${actual.image}' <--`;\n        return msg;\n    },\n    buildNotAllInputParsedMessage({ firstRedundant, ruleName }) {\n        return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n    },\n    buildNoViableAltMessage({ expectedPathsPerAlt, actual, previous, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const allLookAheadPaths = reduce(expectedPathsPerAlt, (result, currAltPaths) => result.concat(currAltPaths), []);\n            const nextValidTokenSequences = map(allLookAheadPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\", \")}]`);\n            const nextValidSequenceItems = map(nextValidTokenSequences, (itemMsg, idx) => `  ${idx + 1}. ${itemMsg}`);\n            const calculatedDescription = `one of these possible Token sequences:\\n${nextValidSequenceItems.join(\"\\n\")}`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n    buildEarlyExitMessage({ expectedIterationPaths, actual, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const nextValidTokenSequences = map(expectedIterationPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\",\")}]`);\n            const calculatedDescription = `expecting at least one iteration which starts with one of these possible Token sequences::\\n  ` +\n                `<${nextValidTokenSequences.join(\" ,\")}>`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n};\nObject.freeze(defaultParserErrorProvider);\nexport const defaultGrammarResolverErrorProvider = {\n    buildRuleNotFoundError(topLevelRule, undefinedRule) {\n        const msg = \"Invalid grammar, reference to a rule which is not defined: ->\" +\n            undefinedRule.nonTerminalName +\n            \"<-\\n\" +\n            \"inside top level rule: ->\" +\n            topLevelRule.name +\n            \"<-\";\n        return msg;\n    },\n};\nexport const defaultGrammarValidatorErrorProvider = {\n    buildDuplicateFoundError(topLevelRule, duplicateProds) {\n        function getExtraProductionArgument(prod) {\n            if (prod instanceof Terminal) {\n                return prod.terminalType.name;\n            }\n            else if (prod instanceof NonTerminal) {\n                return prod.nonTerminalName;\n            }\n            else {\n                return \"\";\n            }\n        }\n        const topLevelName = topLevelRule.name;\n        const duplicateProd = first(duplicateProds);\n        const index = duplicateProd.idx;\n        const dslName = getProductionDslName(duplicateProd);\n        const extraArgument = getExtraProductionArgument(duplicateProd);\n        const hasExplicitIndex = index > 0;\n        let msg = `->${dslName}${hasExplicitIndex ? index : \"\"}<- ${extraArgument ? `with argument: ->${extraArgument}<-` : \"\"}\n                  appears more than once (${duplicateProds.length} times) in the top level rule: ->${topLevelName}<-.                  \n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  `;\n        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n        msg = msg.replace(/[ \\t]+/g, \" \");\n        msg = msg.replace(/\\s\\s+/g, \"\\n\");\n        return msg;\n    },\n    buildNamespaceConflictError(rule) {\n        const errMsg = `Namespace conflict found in grammar.\\n` +\n            `The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <${rule.name}>.\\n` +\n            `To resolve this make sure each Terminal and Non-Terminal names are unique\\n` +\n            `This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n` +\n            `and Non-Terminal names start with a lower case letter.`;\n        return errMsg;\n    },\n    buildAlternationPrefixAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currTok) => tokenLabel(currTok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        const errMsg = `Ambiguous alternatives: <${options.ambiguityIndices.join(\" ,\")}> due to common lookahead prefix\\n` +\n            `in <OR${occurrence}> inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n` +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n` +\n            `For Further details.`;\n        return errMsg;\n    },\n    buildAlternationAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\" ,\")}> in <OR${occurrence}>` +\n            ` inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n        currMessage =\n            currMessage +\n                `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n                `For Further details.`;\n        return currMessage;\n    },\n    buildEmptyRepetitionError(options) {\n        let dslName = getProductionDslName(options.repetition);\n        if (options.repetition.idx !== 0) {\n            dslName += options.repetition.idx;\n        }\n        const errMsg = `The repetition <${dslName}> within Rule <${options.topLevelRule.name}> can never consume any tokens.\\n` +\n            `This could lead to an infinite loop.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildTokenNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildEmptyAlternationError(options) {\n        const errMsg = `Ambiguous empty alternative: <${options.emptyChoiceIdx + 1}>` +\n            ` in <OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n` +\n            `Only the last alternative may be an empty alternative.`;\n        return errMsg;\n    },\n    buildTooManyAlternativesError(options) {\n        const errMsg = `An Alternation cannot have more than 256 alternatives:\\n` +\n            `<OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n has ${options.alternation.definition.length + 1} alternatives.`;\n        return errMsg;\n    },\n    buildLeftRecursionError(options) {\n        const ruleName = options.topLevelRule.name;\n        const pathNames = map(options.leftRecursionPath, (currRule) => currRule.name);\n        const leftRecursivePath = `${ruleName} --> ${pathNames\n            .concat([ruleName])\n            .join(\" --> \")}`;\n        const errMsg = `Left Recursion found in grammar.\\n` +\n            `rule: <${ruleName}> can be invoked from itself (directly or indirectly)\\n` +\n            `without consuming any Tokens. The grammar path that causes this is: \\n ${leftRecursivePath}\\n` +\n            ` To fix this refactor your grammar to remove the left recursion.\\n` +\n            `see: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildInvalidRuleNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildDuplicateRuleNameError(options) {\n        let ruleName;\n        if (options.topLevelRule instanceof Rule) {\n            ruleName = options.topLevelRule.name;\n        }\n        else {\n            ruleName = options.topLevelRule;\n        }\n        const errMsg = `Duplicate definition, rule: ->${ruleName}<- is already defined in the grammar: ->${options.grammarName}<-`;\n        return errMsg;\n    },\n};\n//# sourceMappingURL=errors_public.js.map","import { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { forEach, values } from \"lodash-es\";\nimport { GAstVisitor } from \"@chevrotain/gast\";\nexport function resolveGrammar(topLevels, errMsgProvider) {\n    const refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n    refResolver.resolveRefs();\n    return refResolver.errors;\n}\nexport class GastRefResolverVisitor extends GAstVisitor {\n    constructor(nameToTopRule, errMsgProvider) {\n        super();\n        this.nameToTopRule = nameToTopRule;\n        this.errMsgProvider = errMsgProvider;\n        this.errors = [];\n    }\n    resolveRefs() {\n        forEach(values(this.nameToTopRule), (prod) => {\n            this.currTopLevel = prod;\n            prod.accept(this);\n        });\n    }\n    visitNonTerminal(node) {\n        const ref = this.nameToTopRule[node.nonTerminalName];\n        if (!ref) {\n            const msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);\n            this.errors.push({\n                message: msg,\n                type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n                ruleName: this.currTopLevel.name,\n                unresolvedRefName: node.nonTerminalName,\n            });\n        }\n        else {\n            node.referencedRule = ref;\n        }\n    }\n}\n//# sourceMappingURL=resolver.js.map","import baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nexport default flatMap;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction dropRight(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nexport default dropRight;\n","import { clone, drop, dropRight, first as _first, forEach, isEmpty, last, } from \"lodash-es\";\nimport { first } from \"./first.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nexport class AbstractNextPossibleTokensWalker extends RestWalker {\n    constructor(topProd, path) {\n        super();\n        this.topProd = topProd;\n        this.path = path;\n        this.possibleTokTypes = [];\n        this.nextProductionName = \"\";\n        this.nextProductionOccurrence = 0;\n        this.found = false;\n        this.isAtEndOfPath = false;\n    }\n    startWalking() {\n        this.found = false;\n        if (this.path.ruleStack[0] !== this.topProd.name) {\n            throw Error(\"The path does not start with the walker's top Rule!\");\n        }\n        // immutable for the win\n        this.ruleStack = clone(this.path.ruleStack).reverse(); // intelij bug requires assertion\n        this.occurrenceStack = clone(this.path.occurrenceStack).reverse(); // intelij bug requires assertion\n        // already verified that the first production is valid, we now seek the 2nd production\n        this.ruleStack.pop();\n        this.occurrenceStack.pop();\n        this.updateExpectedNext();\n        this.walk(this.topProd);\n        return this.possibleTokTypes;\n    }\n    walk(prod, prevRest = []) {\n        // stop scanning once we found the path\n        if (!this.found) {\n            super.walk(prod, prevRest);\n        }\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        // found the next production, need to keep walking in it\n        if (refProd.referencedRule.name === this.nextProductionName &&\n            refProd.idx === this.nextProductionOccurrence) {\n            const fullRest = currRest.concat(prevRest);\n            this.updateExpectedNext();\n            this.walk(refProd.referencedRule, fullRest);\n        }\n    }\n    updateExpectedNext() {\n        // need to consume the Terminal\n        if (isEmpty(this.ruleStack)) {\n            // must reset nextProductionXXX to avoid walking down another Top Level production while what we are\n            // really seeking is the last Terminal...\n            this.nextProductionName = \"\";\n            this.nextProductionOccurrence = 0;\n            this.isAtEndOfPath = true;\n        }\n        else {\n            this.nextProductionName = this.ruleStack.pop();\n            this.nextProductionOccurrence = this.occurrenceStack.pop();\n        }\n    }\n}\nexport class NextAfterTokenWalker extends AbstractNextPossibleTokensWalker {\n    constructor(topProd, path) {\n        super(topProd, path);\n        this.path = path;\n        this.nextTerminalName = \"\";\n        this.nextTerminalOccurrence = 0;\n        this.nextTerminalName = this.path.lastTok.name;\n        this.nextTerminalOccurrence = this.path.lastTokOccurrence;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        if (this.isAtEndOfPath &&\n            terminal.terminalType.name === this.nextTerminalName &&\n            terminal.idx === this.nextTerminalOccurrence &&\n            !this.found) {\n            const fullRest = currRest.concat(prevRest);\n            const restProd = new Alternative({ definition: fullRest });\n            this.possibleTokTypes = first(restProd);\n            this.found = true;\n        }\n    }\n}\n/**\n * This walker only \"walks\" a single \"TOP\" level in the Grammar Ast, this means\n * it never \"follows\" production refs\n */\nexport class AbstractNextTerminalAfterProductionWalker extends RestWalker {\n    constructor(topRule, occurrence) {\n        super();\n        this.topRule = topRule;\n        this.occurrence = occurrence;\n        this.result = {\n            token: undefined,\n            occurrence: undefined,\n            isEndOfRule: undefined,\n        };\n    }\n    startWalking() {\n        this.walk(this.topRule);\n        return this.result;\n    }\n}\nexport class NextTerminalAfterManyWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkMany(manyProd, currRest, prevRest) {\n        if (manyProd.idx === this.occurrence) {\n            const firstAfterMany = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterMany === undefined;\n            if (firstAfterMany instanceof Terminal) {\n                this.result.token = firstAfterMany.terminalType;\n                this.result.occurrence = firstAfterMany.idx;\n            }\n        }\n        else {\n            super.walkMany(manyProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterManySepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (manySepProd.idx === this.occurrence) {\n            const firstAfterManySep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterManySep === undefined;\n            if (firstAfterManySep instanceof Terminal) {\n                this.result.token = firstAfterManySep.terminalType;\n                this.result.occurrence = firstAfterManySep.idx;\n            }\n        }\n        else {\n            super.walkManySep(manySepProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterAtLeastOneWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (atLeastOneProd.idx === this.occurrence) {\n            const firstAfterAtLeastOne = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterAtLeastOne === undefined;\n            if (firstAfterAtLeastOne instanceof Terminal) {\n                this.result.token = firstAfterAtLeastOne.terminalType;\n                this.result.occurrence = firstAfterAtLeastOne.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOne(atLeastOneProd, currRest, prevRest);\n        }\n    }\n}\n// TODO: reduce code duplication in the AfterWalkers\nexport class NextTerminalAfterAtLeastOneSepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest) {\n        if (atleastOneSepProd.idx === this.occurrence) {\n            const firstAfterfirstAfterAtLeastOneSep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterfirstAfterAtLeastOneSep === undefined;\n            if (firstAfterfirstAfterAtLeastOneSep instanceof Terminal) {\n                this.result.token = firstAfterfirstAfterAtLeastOneSep.terminalType;\n                this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest);\n        }\n    }\n}\nexport function possiblePathsFrom(targetDef, maxLength, currPath = []) {\n    // avoid side effects\n    currPath = clone(currPath);\n    let result = [];\n    let i = 0;\n    // TODO: avoid inner funcs\n    function remainingPathWith(nextDef) {\n        return nextDef.concat(drop(targetDef, i + 1));\n    }\n    // TODO: avoid inner funcs\n    function getAlternativesForProd(definition) {\n        const alternatives = possiblePathsFrom(remainingPathWith(definition), maxLength, currPath);\n        return result.concat(alternatives);\n    }\n    /**\n     * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the\n     * following (rest) of the targetDef.\n     *\n     * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the\n     * the optional production.\n     */\n    while (currPath.length < maxLength && i < targetDef.length) {\n        const prod = targetDef[i];\n        /* istanbul ignore else */\n        if (prod instanceof Alternative) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof NonTerminal) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof Option) {\n            result = getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            const newDef = [\n                new Alternative({ definition: prod.definition }),\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ];\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Repetition) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Alternation) {\n            forEach(prod.definition, (currAlt) => {\n                // TODO: this is a limited check for empty alternatives\n                //   It would prevent a common case of infinite loops during parser initialization.\n                //   However **in-directly** empty alternatives may still cause issues.\n                if (isEmpty(currAlt.definition) === false) {\n                    result = getAlternativesForProd(currAlt.definition);\n                }\n            });\n            return result;\n        }\n        else if (prod instanceof Terminal) {\n            currPath.push(prod.terminalType);\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n        i++;\n    }\n    result.push({\n        partialPath: currPath,\n        suffixDef: drop(targetDef, i),\n    });\n    return result;\n}\nexport function nextPossibleTokensAfter(initialDef, tokenVector, tokMatcher, maxLookAhead) {\n    const EXIT_NON_TERMINAL = \"EXIT_NONE_TERMINAL\";\n    // to avoid creating a new Array each time.\n    const EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL];\n    const EXIT_ALTERNATIVE = \"EXIT_ALTERNATIVE\";\n    let foundCompletePath = false;\n    const tokenVectorLength = tokenVector.length;\n    const minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1;\n    const result = [];\n    const possiblePaths = [];\n    possiblePaths.push({\n        idx: -1,\n        def: initialDef,\n        ruleStack: [],\n        occurrenceStack: [],\n    });\n    while (!isEmpty(possiblePaths)) {\n        const currPath = possiblePaths.pop();\n        // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)\n        if (currPath === EXIT_ALTERNATIVE) {\n            if (foundCompletePath &&\n                last(possiblePaths).idx <= minimalAlternativesIndex) {\n                // remove irrelevant alternative\n                possiblePaths.pop();\n            }\n            continue;\n        }\n        const currDef = currPath.def;\n        const currIdx = currPath.idx;\n        const currRuleStack = currPath.ruleStack;\n        const currOccurrenceStack = currPath.occurrenceStack;\n        // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT\n        if (isEmpty(currDef)) {\n            continue;\n        }\n        const prod = currDef[0];\n        /* istanbul ignore else */\n        if (prod === EXIT_NON_TERMINAL) {\n            const nextPath = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: dropRight(currRuleStack),\n                occurrenceStack: dropRight(currOccurrenceStack),\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Terminal) {\n            /* istanbul ignore else */\n            if (currIdx < tokenVectorLength - 1) {\n                const nextIdx = currIdx + 1;\n                const actualToken = tokenVector[nextIdx];\n                if (tokMatcher(actualToken, prod.terminalType)) {\n                    const nextPath = {\n                        idx: nextIdx,\n                        def: drop(currDef),\n                        ruleStack: currRuleStack,\n                        occurrenceStack: currOccurrenceStack,\n                    };\n                    possiblePaths.push(nextPath);\n                }\n                // end of the line\n            }\n            else if (currIdx === tokenVectorLength - 1) {\n                // IGNORE ABOVE ELSE\n                result.push({\n                    nextTokenType: prod.terminalType,\n                    nextTokenOccurrence: prod.idx,\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                });\n                foundCompletePath = true;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        }\n        else if (prod instanceof NonTerminal) {\n            const newRuleStack = clone(currRuleStack);\n            newRuleStack.push(prod.nonTerminalName);\n            const newOccurrenceStack = clone(currOccurrenceStack);\n            newOccurrenceStack.push(prod.idx);\n            const nextPath = {\n                idx: currIdx,\n                def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, drop(currDef)),\n                ruleStack: newRuleStack,\n                occurrenceStack: newOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Option) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const nextPathWith = {\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const secondIteration = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const secondIteration = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const nthRepetition = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Repetition) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?\n            const nthRepetition = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Alternation) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            for (let i = prod.definition.length - 1; i >= 0; i--) {\n                const currAlt = prod.definition[i];\n                const currAltPath = {\n                    idx: currIdx,\n                    def: currAlt.definition.concat(drop(currDef)),\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                };\n                possiblePaths.push(currAltPath);\n                possiblePaths.push(EXIT_ALTERNATIVE);\n            }\n        }\n        else if (prod instanceof Alternative) {\n            possiblePaths.push({\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            });\n        }\n        else if (prod instanceof Rule) {\n            // last because we should only encounter at most a single one of these per invocation.\n            possiblePaths.push(expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack));\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n    return result;\n}\nfunction expandTopLevelRule(topRule, currIdx, currRuleStack, currOccurrenceStack) {\n    const newRuleStack = clone(currRuleStack);\n    newRuleStack.push(topRule.name);\n    const newCurrOccurrenceStack = clone(currOccurrenceStack);\n    // top rule is always assumed to have been called with occurrence index 1\n    newCurrOccurrenceStack.push(1);\n    return {\n        idx: currIdx,\n        def: topRule.definition,\n        ruleStack: newRuleStack,\n        occurrenceStack: newCurrOccurrenceStack,\n    };\n}\n//# sourceMappingURL=interpreter.js.map","import { every, flatten, forEach, has, isEmpty, map, reduce } from \"lodash-es\";\nimport { possiblePathsFrom } from \"./interpreter.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../scan/tokens.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, } from \"@chevrotain/gast\";\nexport var PROD_TYPE;\n(function (PROD_TYPE) {\n    PROD_TYPE[PROD_TYPE[\"OPTION\"] = 0] = \"OPTION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION\"] = 1] = \"REPETITION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY\"] = 2] = \"REPETITION_MANDATORY\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY_WITH_SEPARATOR\"] = 3] = \"REPETITION_MANDATORY_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_WITH_SEPARATOR\"] = 4] = \"REPETITION_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"ALTERNATION\"] = 5] = \"ALTERNATION\";\n})(PROD_TYPE || (PROD_TYPE = {}));\nexport function getProdType(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof Option || prod === \"Option\") {\n        return PROD_TYPE.OPTION;\n    }\n    else if (prod instanceof Repetition || prod === \"Repetition\") {\n        return PROD_TYPE.REPETITION;\n    }\n    else if (prod instanceof RepetitionMandatory ||\n        prod === \"RepetitionMandatory\") {\n        return PROD_TYPE.REPETITION_MANDATORY;\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator ||\n        prod === \"RepetitionMandatoryWithSeparator\") {\n        return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;\n    }\n    else if (prod instanceof RepetitionWithSeparator ||\n        prod === \"RepetitionWithSeparator\") {\n        return PROD_TYPE.REPETITION_WITH_SEPARATOR;\n    }\n    else if (prod instanceof Alternation || prod === \"Alternation\") {\n        return PROD_TYPE.ALTERNATION;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function getLookaheadPaths(options) {\n    const { occurrence, rule, prodType, maxLookahead } = options;\n    const type = getProdType(prodType);\n    if (type === PROD_TYPE.ALTERNATION) {\n        return getLookaheadPathsForOr(occurrence, rule, maxLookahead);\n    }\n    else {\n        return getLookaheadPathsForOptionalProd(occurrence, rule, type, maxLookahead);\n    }\n}\nexport function buildLookaheadFuncForOr(occurrence, ruleGrammar, maxLookahead, hasPredicates, dynamicTokensEnabled, laFuncBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOr(occurrence, ruleGrammar, maxLookahead);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return laFuncBuilder(lookAheadPaths, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n}\n/**\n *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare\n *  the lookahead \"inside\" the production and the lookahead immediately \"after\" it in the same top level rule (context free).\n *\n *  Example: given a production:\n *  ABC(DE)?DF\n *\n *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two\n *  alternatives.\n *\n *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.\n */\nexport function buildLookaheadFuncForOptionalProd(occurrence, ruleGrammar, k, dynamicTokensEnabled, prodType, lookaheadBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return lookaheadBuilder(lookAheadPaths[0], tokenMatcher, dynamicTokensEnabled);\n}\nexport function buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    const numOfAlts = alts.length;\n    const areAllOneTokenLookahead = every(alts, (currAlt) => {\n        return every(currAlt, (currPath) => {\n            return currPath.length === 1;\n        });\n    });\n    // This version takes into account the predicates as well.\n    if (hasPredicates) {\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function (orAlts) {\n            // unfortunately the predicates must be extracted every single time\n            // as they cannot be cached due to references to parameters(vars) which are no longer valid.\n            // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)\n            const predicates = map(orAlts, (currAlt) => currAlt.GATE);\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                const currPredicate = predicates[t];\n                if (currPredicate !== undefined && currPredicate.call(this) === false) {\n                    // if the predicate does not match there is no point in checking the paths\n                    continue;\n                }\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n    else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        // optimized (common) case of all the lookaheads paths requiring only\n        // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.\n        const singleTokenAlts = map(alts, (currAlt) => {\n            return flatten(currAlt);\n        });\n        const choiceToAlt = reduce(singleTokenAlts, (result, currAlt, idx) => {\n            forEach(currAlt, (currTokType) => {\n                if (!has(result, currTokType.tokenTypeIdx)) {\n                    result[currTokType.tokenTypeIdx] = idx;\n                }\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    if (!has(result, currExtendingType)) {\n                        result[currExtendingType] = idx;\n                    }\n                });\n            });\n            return result;\n        }, {});\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            const nextToken = this.LA(1);\n            return choiceToAlt[nextToken.tokenTypeIdx];\n        };\n    }\n    else {\n        // optimized lookahead without needing to check the predicates at all.\n        // this causes code duplication which is intentional to improve performance.\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n}\nexport function buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled) {\n    const areAllOneTokenLookahead = every(alt, (currPath) => {\n        return currPath.length === 1;\n    });\n    const numOfPaths = alt.length;\n    // optimized (common) case of all the lookaheads paths requiring only\n    // a single token lookahead.\n    if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        const singleTokensTypes = flatten(alt);\n        if (singleTokensTypes.length === 1 &&\n            isEmpty(singleTokensTypes[0].categoryMatches)) {\n            const expectedTokenType = singleTokensTypes[0];\n            const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n            return function () {\n                return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n            };\n        }\n        else {\n            const choiceToAlt = reduce(singleTokensTypes, (result, currTokType, idx) => {\n                result[currTokType.tokenTypeIdx] = true;\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    result[currExtendingType] = true;\n                });\n                return result;\n            }, []);\n            return function () {\n                const nextToken = this.LA(1);\n                return choiceToAlt[nextToken.tokenTypeIdx] === true;\n            };\n        }\n    }\n    else {\n        return function () {\n            nextPath: for (let j = 0; j < numOfPaths; j++) {\n                const currPath = alt[j];\n                const currPathLength = currPath.length;\n                for (let i = 0; i < currPathLength; i++) {\n                    const nextToken = this.LA(i + 1);\n                    if (tokenMatcher(nextToken, currPath[i]) === false) {\n                        // mismatch in current path\n                        // try the next pth\n                        continue nextPath;\n                    }\n                }\n                // found a full path that matches.\n                return true;\n            }\n            // none of the paths matched\n            return false;\n        };\n    }\n}\nclass RestDefinitionFinderWalker extends RestWalker {\n    constructor(topProd, targetOccurrence, targetProdType) {\n        super();\n        this.topProd = topProd;\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.restDef;\n    }\n    checkIsTarget(node, expectedProdType, currRest, prevRest) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdType) {\n            this.restDef = currRest.concat(prevRest);\n            return true;\n        }\n        // performance optimization, do not iterate over the entire Grammar ast after we have found the target\n        return false;\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {\n            super.walkOption(optionProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneProd, PROD_TYPE.REPETITION_MANDATORY, currRest, prevRest)) {\n            super.walkOption(atLeastOneProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneSepProd, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(atLeastOneSepProd, currRest, prevRest);\n        }\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)) {\n            super.walkOption(manyProd, currRest, prevRest);\n        }\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manySepProd, PROD_TYPE.REPETITION_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(manySepProd, currRest, prevRest);\n        }\n    }\n}\n/**\n * Returns the definition of a target production in a top level level rule.\n */\nclass InsideDefinitionFinderVisitor extends GAstVisitor {\n    constructor(targetOccurrence, targetProdType, targetRef) {\n        super();\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n        this.targetRef = targetRef;\n        this.result = [];\n    }\n    checkIsTarget(node, expectedProdName) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdName &&\n            (this.targetRef === undefined || node === this.targetRef)) {\n            this.result = node.definition;\n        }\n    }\n    visitOption(node) {\n        this.checkIsTarget(node, PROD_TYPE.OPTION);\n    }\n    visitRepetition(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION);\n    }\n    visitRepetitionMandatory(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY);\n    }\n    visitRepetitionMandatoryWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);\n    }\n    visitRepetitionWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR);\n    }\n    visitAlternation(node) {\n        this.checkIsTarget(node, PROD_TYPE.ALTERNATION);\n    }\n}\nfunction initializeArrayOfArrays(size) {\n    const result = new Array(size);\n    for (let i = 0; i < size; i++) {\n        result[i] = [];\n    }\n    return result;\n}\n/**\n * A sort of hash function between a Path in the grammar and a string.\n * Note that this returns multiple \"hashes\" to support the scenario of token categories.\n * -  A single path with categories may match multiple **actual** paths.\n */\nfunction pathToHashKeys(path) {\n    let keys = [\"\"];\n    for (let i = 0; i < path.length; i++) {\n        const tokType = path[i];\n        const longerKeys = [];\n        for (let j = 0; j < keys.length; j++) {\n            const currShorterKey = keys[j];\n            longerKeys.push(currShorterKey + \"_\" + tokType.tokenTypeIdx);\n            for (let t = 0; t < tokType.categoryMatches.length; t++) {\n                const categoriesKeySuffix = \"_\" + tokType.categoryMatches[t];\n                longerKeys.push(currShorterKey + categoriesKeySuffix);\n            }\n        }\n        keys = longerKeys;\n    }\n    return keys;\n}\n/**\n * Imperative style due to being called from a hot spot\n */\nfunction isUniquePrefixHash(altKnownPathsKeys, searchPathKeys, idx) {\n    for (let currAltIdx = 0; currAltIdx < altKnownPathsKeys.length; currAltIdx++) {\n        // We only want to test vs the other alternatives\n        if (currAltIdx === idx) {\n            continue;\n        }\n        const otherAltKnownPathsKeys = altKnownPathsKeys[currAltIdx];\n        for (let searchIdx = 0; searchIdx < searchPathKeys.length; searchIdx++) {\n            const searchKey = searchPathKeys[searchIdx];\n            if (otherAltKnownPathsKeys[searchKey] === true) {\n                return false;\n            }\n        }\n    }\n    // None of the SearchPathKeys were found in any of the other alternatives\n    return true;\n}\nexport function lookAheadSequenceFromAlternatives(altsDefs, k) {\n    const partialAlts = map(altsDefs, (currAlt) => possiblePathsFrom([currAlt], 1));\n    const finalResult = initializeArrayOfArrays(partialAlts.length);\n    const altsHashes = map(partialAlts, (currAltPaths) => {\n        const dict = {};\n        forEach(currAltPaths, (item) => {\n            const keys = pathToHashKeys(item.partialPath);\n            forEach(keys, (currKey) => {\n                dict[currKey] = true;\n            });\n        });\n        return dict;\n    });\n    let newData = partialAlts;\n    // maxLookahead loop\n    for (let pathLength = 1; pathLength <= k; pathLength++) {\n        const currDataset = newData;\n        newData = initializeArrayOfArrays(currDataset.length);\n        // alternatives loop\n        for (let altIdx = 0; altIdx < currDataset.length; altIdx++) {\n            const currAltPathsAndSuffixes = currDataset[altIdx];\n            // paths in current alternative loop\n            for (let currPathIdx = 0; currPathIdx < currAltPathsAndSuffixes.length; currPathIdx++) {\n                const currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath;\n                const suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef;\n                const prefixKeys = pathToHashKeys(currPathPrefix);\n                const isUnique = isUniquePrefixHash(altsHashes, prefixKeys, altIdx);\n                // End of the line for this path.\n                if (isUnique || isEmpty(suffixDef) || currPathPrefix.length === k) {\n                    const currAltResult = finalResult[altIdx];\n                    // TODO: Can we implement a containsPath using Maps/Dictionaries?\n                    if (containsPath(currAltResult, currPathPrefix) === false) {\n                        currAltResult.push(currPathPrefix);\n                        // Update all new  keys for the current path.\n                        for (let j = 0; j < prefixKeys.length; j++) {\n                            const currKey = prefixKeys[j];\n                            altsHashes[altIdx][currKey] = true;\n                        }\n                    }\n                }\n                // Expand longer paths\n                else {\n                    const newPartialPathsAndSuffixes = possiblePathsFrom(suffixDef, pathLength + 1, currPathPrefix);\n                    newData[altIdx] = newData[altIdx].concat(newPartialPathsAndSuffixes);\n                    // Update keys for new known paths\n                    forEach(newPartialPathsAndSuffixes, (item) => {\n                        const prefixKeys = pathToHashKeys(item.partialPath);\n                        forEach(prefixKeys, (key) => {\n                            altsHashes[altIdx][key] = true;\n                        });\n                    });\n                }\n            }\n        }\n    }\n    return finalResult;\n}\nexport function getLookaheadPathsForOr(occurrence, ruleGrammar, k, orProd) {\n    const visitor = new InsideDefinitionFinderVisitor(occurrence, PROD_TYPE.ALTERNATION, orProd);\n    ruleGrammar.accept(visitor);\n    return lookAheadSequenceFromAlternatives(visitor.result, k);\n}\nexport function getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k) {\n    const insideDefVisitor = new InsideDefinitionFinderVisitor(occurrence, prodType);\n    ruleGrammar.accept(insideDefVisitor);\n    const insideDef = insideDefVisitor.result;\n    const afterDefWalker = new RestDefinitionFinderWalker(ruleGrammar, occurrence, prodType);\n    const afterDef = afterDefWalker.startWalking();\n    const insideFlat = new AlternativeGAST({ definition: insideDef });\n    const afterFlat = new AlternativeGAST({ definition: afterDef });\n    return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k);\n}\nexport function containsPath(alternative, searchPath) {\n    compareOtherPath: for (let i = 0; i < alternative.length; i++) {\n        const otherPath = alternative[i];\n        if (otherPath.length !== searchPath.length) {\n            continue;\n        }\n        for (let j = 0; j < otherPath.length; j++) {\n            const searchTok = searchPath[j];\n            const otherTok = otherPath[j];\n            const matchingTokens = searchTok === otherTok ||\n                otherTok.categoryMatchesMap[searchTok.tokenTypeIdx] !== undefined;\n            if (matchingTokens === false) {\n                continue compareOtherPath;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nexport function isStrictPrefixOfPath(prefix, other) {\n    return (prefix.length < other.length &&\n        every(prefix, (tokType, idx) => {\n            const otherTokType = other[idx];\n            return (tokType === otherTokType ||\n                otherTokType.categoryMatchesMap[tokType.tokenTypeIdx]);\n        }));\n}\nexport function areTokenCategoriesNotUsed(lookAheadPaths) {\n    return every(lookAheadPaths, (singleAltPaths) => every(singleAltPaths, (singlePath) => every(singlePath, (token) => isEmpty(token.categoryMatches))));\n}\n//# sourceMappingURL=lookahead.js.map","import { clone, compact, difference, drop, dropRight, filter, first, flatMap, flatten, forEach, groupBy, includes, isEmpty, map, pickBy, reduce, reject, values, } from \"lodash-es\";\nimport { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, getProductionDslName, isOptionalProd, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\nimport { containsPath, getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, getProdType, isStrictPrefixOfPath, } from \"./lookahead.js\";\nimport { nextPossibleTokensAfter } from \"./interpreter.js\";\nimport { tokenStructuredMatcher } from \"../../scan/tokens.js\";\nexport function validateLookahead(options) {\n    const lookaheadValidationErrorMessages = options.lookaheadStrategy.validate({\n        rules: options.rules,\n        tokenTypes: options.tokenTypes,\n        grammarName: options.grammarName,\n    });\n    return map(lookaheadValidationErrorMessages, (errorMessage) => (Object.assign({ type: ParserDefinitionErrorType.CUSTOM_LOOKAHEAD_VALIDATION }, errorMessage)));\n}\nexport function validateGrammar(topLevels, tokenTypes, errMsgProvider, grammarName) {\n    const duplicateErrors = flatMap(topLevels, (currTopLevel) => validateDuplicateProductions(currTopLevel, errMsgProvider));\n    const termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider);\n    const tooManyAltsErrors = flatMap(topLevels, (curRule) => validateTooManyAlts(curRule, errMsgProvider));\n    const duplicateRulesError = flatMap(topLevels, (curRule) => validateRuleDoesNotAlreadyExist(curRule, topLevels, grammarName, errMsgProvider));\n    return duplicateErrors.concat(termsNamespaceConflictErrors, tooManyAltsErrors, duplicateRulesError);\n}\nfunction validateDuplicateProductions(topLevelRule, errMsgProvider) {\n    const collectorVisitor = new OccurrenceValidationCollector();\n    topLevelRule.accept(collectorVisitor);\n    const allRuleProductions = collectorVisitor.allProductions;\n    const productionGroups = groupBy(allRuleProductions, identifyProductionForDuplicates);\n    const duplicates = pickBy(productionGroups, (currGroup) => {\n        return currGroup.length > 1;\n    });\n    const errors = map(values(duplicates), (currDuplicates) => {\n        const firstProd = first(currDuplicates);\n        const msg = errMsgProvider.buildDuplicateFoundError(topLevelRule, currDuplicates);\n        const dslName = getProductionDslName(firstProd);\n        const defError = {\n            message: msg,\n            type: ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,\n            ruleName: topLevelRule.name,\n            dslName: dslName,\n            occurrence: firstProd.idx,\n        };\n        const param = getExtraProductionArgument(firstProd);\n        if (param) {\n            defError.parameter = param;\n        }\n        return defError;\n    });\n    return errors;\n}\nexport function identifyProductionForDuplicates(prod) {\n    return `${getProductionDslName(prod)}_#_${prod.idx}_#_${getExtraProductionArgument(prod)}`;\n}\nfunction getExtraProductionArgument(prod) {\n    if (prod instanceof Terminal) {\n        return prod.terminalType.name;\n    }\n    else if (prod instanceof NonTerminal) {\n        return prod.nonTerminalName;\n    }\n    else {\n        return \"\";\n    }\n}\nexport class OccurrenceValidationCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitNonTerminal(subrule) {\n        this.allProductions.push(subrule);\n    }\n    visitOption(option) {\n        this.allProductions.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n    visitAlternation(or) {\n        this.allProductions.push(or);\n    }\n    visitTerminal(terminal) {\n        this.allProductions.push(terminal);\n    }\n}\nexport function validateRuleDoesNotAlreadyExist(rule, allRules, className, errMsgProvider) {\n    const errors = [];\n    const occurrences = reduce(allRules, (result, curRule) => {\n        if (curRule.name === rule.name) {\n            return result + 1;\n        }\n        return result;\n    }, 0);\n    if (occurrences > 1) {\n        const errMsg = errMsgProvider.buildDuplicateRuleNameError({\n            topLevelRule: rule,\n            grammarName: className,\n        });\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n            ruleName: rule.name,\n        });\n    }\n    return errors;\n}\n// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?\n// This is not part of the IGrammarErrorProvider because the validation cannot be performed on\n// The grammar structure, only at runtime.\nexport function validateRuleIsOverridden(ruleName, definedRulesNames, className) {\n    const errors = [];\n    let errMsg;\n    if (!includes(definedRulesNames, ruleName)) {\n        errMsg =\n            `Invalid rule override, rule: ->${ruleName}<- cannot be overridden in the grammar: ->${className}<-` +\n                `as it is not defined in any of the super grammars `;\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,\n            ruleName: ruleName,\n        });\n    }\n    return errors;\n}\nexport function validateNoLeftRecursion(topRule, currRule, errMsgProvider, path = []) {\n    const errors = [];\n    const nextNonTerminals = getFirstNoneTerminal(currRule.definition);\n    if (isEmpty(nextNonTerminals)) {\n        return [];\n    }\n    else {\n        const ruleName = topRule.name;\n        const foundLeftRecursion = includes(nextNonTerminals, topRule);\n        if (foundLeftRecursion) {\n            errors.push({\n                message: errMsgProvider.buildLeftRecursionError({\n                    topLevelRule: topRule,\n                    leftRecursionPath: path,\n                }),\n                type: ParserDefinitionErrorType.LEFT_RECURSION,\n                ruleName: ruleName,\n            });\n        }\n        // we are only looking for cyclic paths leading back to the specific topRule\n        // other cyclic paths are ignored, we still need this difference to avoid infinite loops...\n        const validNextSteps = difference(nextNonTerminals, path.concat([topRule]));\n        const errorsFromNextSteps = flatMap(validNextSteps, (currRefRule) => {\n            const newPath = clone(path);\n            newPath.push(currRefRule);\n            return validateNoLeftRecursion(topRule, currRefRule, errMsgProvider, newPath);\n        });\n        return errors.concat(errorsFromNextSteps);\n    }\n}\nexport function getFirstNoneTerminal(definition) {\n    let result = [];\n    if (isEmpty(definition)) {\n        return result;\n    }\n    const firstProd = first(definition);\n    /* istanbul ignore else */\n    if (firstProd instanceof NonTerminal) {\n        result.push(firstProd.referencedRule);\n    }\n    else if (firstProd instanceof AlternativeGAST ||\n        firstProd instanceof Option ||\n        firstProd instanceof RepetitionMandatory ||\n        firstProd instanceof RepetitionMandatoryWithSeparator ||\n        firstProd instanceof RepetitionWithSeparator ||\n        firstProd instanceof Repetition) {\n        result = result.concat(getFirstNoneTerminal(firstProd.definition));\n    }\n    else if (firstProd instanceof Alternation) {\n        // each sub definition in alternation is a FLAT\n        result = flatten(map(firstProd.definition, (currSubDef) => getFirstNoneTerminal(currSubDef.definition)));\n    }\n    else if (firstProd instanceof Terminal) {\n        // nothing to see, move along\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n    const isFirstOptional = isOptionalProd(firstProd);\n    const hasMore = definition.length > 1;\n    if (isFirstOptional && hasMore) {\n        const rest = drop(definition);\n        return result.concat(getFirstNoneTerminal(rest));\n    }\n    else {\n        return result;\n    }\n}\nclass OrCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.alternations = [];\n    }\n    visitAlternation(node) {\n        this.alternations.push(node);\n    }\n}\nexport function validateEmptyOrAlternative(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        const exceptLast = dropRight(currOr.definition);\n        return flatMap(exceptLast, (currAlternative, currAltIdx) => {\n            const possibleFirstInAlt = nextPossibleTokensAfter([currAlternative], [], tokenStructuredMatcher, 1);\n            if (isEmpty(possibleFirstInAlt)) {\n                return [\n                    {\n                        message: errMsgProvider.buildEmptyAlternationError({\n                            topLevelRule: topLevelRule,\n                            alternation: currOr,\n                            emptyChoiceIdx: currAltIdx,\n                        }),\n                        type: ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,\n                        ruleName: topLevelRule.name,\n                        occurrence: currOr.idx,\n                        alternative: currAltIdx + 1,\n                    },\n                ];\n            }\n            else {\n                return [];\n            }\n        });\n    });\n    return errors;\n}\nexport function validateAmbiguousAlternationAlternatives(topLevelRule, globalMaxLookahead, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    let ors = orCollector.alternations;\n    // New Handling of ignoring ambiguities\n    // - https://github.com/chevrotain/chevrotain/issues/869\n    ors = reject(ors, (currOr) => currOr.ignoreAmbiguities === true);\n    const errors = flatMap(ors, (currOr) => {\n        const currOccurrence = currOr.idx;\n        const actualMaxLookahead = currOr.maxLookahead || globalMaxLookahead;\n        const alternatives = getLookaheadPathsForOr(currOccurrence, topLevelRule, actualMaxLookahead, currOr);\n        const altsAmbiguityErrors = checkAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        const altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        return altsAmbiguityErrors.concat(altsPrefixAmbiguityErrors);\n    });\n    return errors;\n}\nexport class RepetitionCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n}\nexport function validateTooManyAlts(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        if (currOr.definition.length > 255) {\n            return [\n                {\n                    message: errMsgProvider.buildTooManyAlternativesError({\n                        topLevelRule: topLevelRule,\n                        alternation: currOr,\n                    }),\n                    type: ParserDefinitionErrorType.TOO_MANY_ALTS,\n                    ruleName: topLevelRule.name,\n                    occurrence: currOr.idx,\n                },\n            ];\n        }\n        else {\n            return [];\n        }\n    });\n    return errors;\n}\nexport function validateSomeNonEmptyLookaheadPath(topLevelRules, maxLookahead, errMsgProvider) {\n    const errors = [];\n    forEach(topLevelRules, (currTopRule) => {\n        const collectorVisitor = new RepetitionCollector();\n        currTopRule.accept(collectorVisitor);\n        const allRuleProductions = collectorVisitor.allProductions;\n        forEach(allRuleProductions, (currProd) => {\n            const prodType = getProdType(currProd);\n            const actualMaxLookahead = currProd.maxLookahead || maxLookahead;\n            const currOccurrence = currProd.idx;\n            const paths = getLookaheadPathsForOptionalProd(currOccurrence, currTopRule, prodType, actualMaxLookahead);\n            const pathsInsideProduction = paths[0];\n            if (isEmpty(flatten(pathsInsideProduction))) {\n                const errMsg = errMsgProvider.buildEmptyRepetitionError({\n                    topLevelRule: currTopRule,\n                    repetition: currProd,\n                });\n                errors.push({\n                    message: errMsg,\n                    type: ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,\n                    ruleName: currTopRule.name,\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction checkAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    const foundAmbiguousPaths = [];\n    const identicalAmbiguities = reduce(alternatives, (result, currAlt, currAltIdx) => {\n        // ignore (skip) ambiguities with this alternative\n        if (alternation.definition[currAltIdx].ignoreAmbiguities === true) {\n            return result;\n        }\n        forEach(currAlt, (currPath) => {\n            const altsCurrPathAppearsIn = [currAltIdx];\n            forEach(alternatives, (currOtherAlt, currOtherAltIdx) => {\n                if (currAltIdx !== currOtherAltIdx &&\n                    containsPath(currOtherAlt, currPath) &&\n                    // ignore (skip) ambiguities with this \"other\" alternative\n                    alternation.definition[currOtherAltIdx].ignoreAmbiguities !== true) {\n                    altsCurrPathAppearsIn.push(currOtherAltIdx);\n                }\n            });\n            if (altsCurrPathAppearsIn.length > 1 &&\n                !containsPath(foundAmbiguousPaths, currPath)) {\n                foundAmbiguousPaths.push(currPath);\n                result.push({\n                    alts: altsCurrPathAppearsIn,\n                    path: currPath,\n                });\n            }\n        });\n        return result;\n    }, []);\n    const currErrors = map(identicalAmbiguities, (currAmbDescriptor) => {\n        const ambgIndices = map(currAmbDescriptor.alts, (currAltIdx) => currAltIdx + 1);\n        const currMessage = errMsgProvider.buildAlternationAmbiguityError({\n            topLevelRule: rule,\n            alternation: alternation,\n            ambiguityIndices: ambgIndices,\n            prefixPath: currAmbDescriptor.path,\n        });\n        return {\n            message: currMessage,\n            type: ParserDefinitionErrorType.AMBIGUOUS_ALTS,\n            ruleName: rule.name,\n            occurrence: alternation.idx,\n            alternatives: currAmbDescriptor.alts,\n        };\n    });\n    return currErrors;\n}\nexport function checkPrefixAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    // flatten\n    const pathsAndIndices = reduce(alternatives, (result, currAlt, idx) => {\n        const currPathsAndIdx = map(currAlt, (currPath) => {\n            return { idx: idx, path: currPath };\n        });\n        return result.concat(currPathsAndIdx);\n    }, []);\n    const errors = compact(flatMap(pathsAndIndices, (currPathAndIdx) => {\n        const alternativeGast = alternation.definition[currPathAndIdx.idx];\n        // ignore (skip) ambiguities with this alternative\n        if (alternativeGast.ignoreAmbiguities === true) {\n            return [];\n        }\n        const targetIdx = currPathAndIdx.idx;\n        const targetPath = currPathAndIdx.path;\n        const prefixAmbiguitiesPathsAndIndices = filter(pathsAndIndices, (searchPathAndIdx) => {\n            // prefix ambiguity can only be created from lower idx (higher priority) path\n            return (\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[searchPathAndIdx.idx].ignoreAmbiguities !==\n                true &&\n                searchPathAndIdx.idx < targetIdx &&\n                // checking for strict prefix because identical lookaheads\n                // will be be detected using a different validation.\n                isStrictPrefixOfPath(searchPathAndIdx.path, targetPath));\n        });\n        const currPathPrefixErrors = map(prefixAmbiguitiesPathsAndIndices, (currAmbPathAndIdx) => {\n            const ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1];\n            const occurrence = alternation.idx === 0 ? \"\" : alternation.idx;\n            const message = errMsgProvider.buildAlternationPrefixAmbiguityError({\n                topLevelRule: rule,\n                alternation: alternation,\n                ambiguityIndices: ambgIndices,\n                prefixPath: currAmbPathAndIdx.path,\n            });\n            return {\n                message: message,\n                type: ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,\n                ruleName: rule.name,\n                occurrence: occurrence,\n                alternatives: ambgIndices,\n            };\n        });\n        return currPathPrefixErrors;\n    }));\n    return errors;\n}\nfunction checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider) {\n    const errors = [];\n    const tokenNames = map(tokenTypes, (currToken) => currToken.name);\n    forEach(topLevels, (currRule) => {\n        const currRuleName = currRule.name;\n        if (includes(tokenNames, currRuleName)) {\n            const errMsg = errMsgProvider.buildNamespaceConflictError(currRule);\n            errors.push({\n                message: errMsg,\n                type: ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,\n                ruleName: currRuleName,\n            });\n        }\n    });\n    return errors;\n}\n//# sourceMappingURL=checks.js.map","import { includes } from \"lodash-es\";\nconst MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nconst NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nconst EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nconst NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\nconst RECOGNITION_EXCEPTION_NAMES = [\n    MISMATCHED_TOKEN_EXCEPTION,\n    NO_VIABLE_ALT_EXCEPTION,\n    EARLY_EXIT_EXCEPTION,\n    NOT_ALL_INPUT_PARSED_EXCEPTION,\n];\nObject.freeze(RECOGNITION_EXCEPTION_NAMES);\n// hacks to bypass no support for custom Errors in javascript/typescript\nexport function isRecognitionException(error) {\n    // can't do instanceof on hacked custom js exceptions\n    return includes(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\nclass RecognitionException extends Error {\n    constructor(message, token) {\n        super(message);\n        this.token = token;\n        this.resyncedTokens = [];\n        // fix prototype chain when typescript target is ES5\n        Object.setPrototypeOf(this, new.target.prototype);\n        /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\nexport class MismatchedTokenException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = MISMATCHED_TOKEN_EXCEPTION;\n    }\n}\nexport class NoViableAltException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = NO_VIABLE_ALT_EXCEPTION;\n    }\n}\nexport class NotAllInputParsedException extends RecognitionException {\n    constructor(message, token) {\n        super(message, token);\n        this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n    }\n}\nexport class EarlyExitException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = EARLY_EXIT_EXCEPTION;\n    }\n}\n//# sourceMappingURL=exceptions_public.js.map","import { createTokenInstance, EOF, tokenMatcher, } from \"../../../scan/tokens_public.js\";\nimport { clone, dropRight, find, flatten, has, includes, isEmpty, map, } from \"lodash-es\";\nimport { MismatchedTokenException } from \"../../exceptions_public.js\";\nimport { IN } from \"../../constants.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nexport const EOF_FOLLOW_KEY = {};\nexport const IN_RULE_RECOVERY_EXCEPTION = \"InRuleRecoveryException\";\nexport class InRuleRecoveryException extends Error {\n    constructor(message) {\n        super(message);\n        this.name = IN_RULE_RECOVERY_EXCEPTION;\n    }\n}\n/**\n * This trait is responsible for the error recovery and fault tolerant logic\n */\nexport class Recoverable {\n    initRecoverable(config) {\n        this.firstAfterRepMap = {};\n        this.resyncFollows = {};\n        this.recoveryEnabled = has(config, \"recoveryEnabled\")\n            ? config.recoveryEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.recoveryEnabled;\n        // performance optimization, NOOP will be inlined which\n        // effectively means that this optional feature does not exist\n        // when not used.\n        if (this.recoveryEnabled) {\n            this.attemptInRepetitionRecovery = attemptInRepetitionRecovery;\n        }\n    }\n    getTokenToInsert(tokType) {\n        const tokToInsert = createTokenInstance(tokType, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\n        tokToInsert.isInsertedInRecovery = true;\n        return tokToInsert;\n    }\n    canTokenTypeBeInsertedInRecovery(tokType) {\n        return true;\n    }\n    canTokenTypeBeDeletedInRecovery(tokType) {\n        return true;\n    }\n    tryInRepetitionRecovery(grammarRule, grammarRuleArgs, lookAheadFunc, expectedTokType) {\n        // TODO: can the resyncTokenType be cached?\n        const reSyncTokType = this.findReSyncTokenType();\n        const savedLexerState = this.exportLexerState();\n        const resyncedTokens = [];\n        let passedResyncPoint = false;\n        const nextTokenWithoutResync = this.LA(1);\n        let currToken = this.LA(1);\n        const generateErrorMessage = () => {\n            const previousToken = this.LA(0);\n            // we are preemptively re-syncing before an error has been detected, therefor we must reproduce\n            // the error that would have been thrown\n            const msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: expectedTokType,\n                actual: nextTokenWithoutResync,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            const error = new MismatchedTokenException(msg, nextTokenWithoutResync, this.LA(0));\n            // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.\n            error.resyncedTokens = dropRight(resyncedTokens);\n            this.SAVE_ERROR(error);\n        };\n        while (!passedResyncPoint) {\n            // re-synced to a point where we can safely exit the repetition/\n            if (this.tokenMatcher(currToken, expectedTokType)) {\n                generateErrorMessage();\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (lookAheadFunc.call(this)) {\n                // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule\n                generateErrorMessage();\n                // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule\n                grammarRule.apply(this, grammarRuleArgs);\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (this.tokenMatcher(currToken, reSyncTokType)) {\n                passedResyncPoint = true;\n            }\n            else {\n                currToken = this.SKIP_TOKEN();\n                this.addToResyncTokens(currToken, resyncedTokens);\n            }\n        }\n        // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.\n        // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by\n        // \"between rules\" resync recovery later in the flow.\n        this.importLexerState(savedLexerState);\n    }\n    shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck) {\n        // Edge case of arriving from a MANY repetition which is stuck\n        // Attempting recovery in this case could cause an infinite loop\n        if (notStuck === false) {\n            return false;\n        }\n        // no need to recover, next token is what we expect...\n        if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {\n            return false;\n        }\n        // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path\n        // and prefer some backtracking path that includes recovered errors.\n        if (this.isBackTracking()) {\n            return false;\n        }\n        // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm\n        // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)\n        //noinspection RedundantIfStatementJS\n        if (this.canPerformInRuleRecovery(expectTokAfterLastMatch, this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx))) {\n            return false;\n        }\n        return true;\n    }\n    // Error Recovery functionality\n    getFollowsForInRuleRecovery(tokType, tokIdxInRule) {\n        const grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule);\n        const follows = this.getNextPossibleTokenTypes(grammarPath);\n        return follows;\n    }\n    tryInRuleRecovery(expectedTokType, follows) {\n        if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {\n            const tokToInsert = this.getTokenToInsert(expectedTokType);\n            return tokToInsert;\n        }\n        if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {\n            const nextTok = this.SKIP_TOKEN();\n            this.consumeToken();\n            return nextTok;\n        }\n        throw new InRuleRecoveryException(\"sad sad panda\");\n    }\n    canPerformInRuleRecovery(expectedToken, follows) {\n        return (this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||\n            this.canRecoverWithSingleTokenDeletion(expectedToken));\n    }\n    canRecoverWithSingleTokenInsertion(expectedTokType, follows) {\n        if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {\n            return false;\n        }\n        // must know the possible following tokens to perform single token insertion\n        if (isEmpty(follows)) {\n            return false;\n        }\n        const mismatchedTok = this.LA(1);\n        const isMisMatchedTokInFollows = find(follows, (possibleFollowsTokType) => {\n            return this.tokenMatcher(mismatchedTok, possibleFollowsTokType);\n        }) !== undefined;\n        return isMisMatchedTokInFollows;\n    }\n    canRecoverWithSingleTokenDeletion(expectedTokType) {\n        if (!this.canTokenTypeBeDeletedInRecovery(expectedTokType)) {\n            return false;\n        }\n        const isNextTokenWhatIsExpected = this.tokenMatcher(this.LA(2), expectedTokType);\n        return isNextTokenWhatIsExpected;\n    }\n    isInCurrentRuleReSyncSet(tokenTypeIdx) {\n        const followKey = this.getCurrFollowKey();\n        const currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey);\n        return includes(currentRuleReSyncSet, tokenTypeIdx);\n    }\n    findReSyncTokenType() {\n        const allPossibleReSyncTokTypes = this.flattenFollowSet();\n        // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n        let nextToken = this.LA(1);\n        let k = 2;\n        while (true) {\n            const foundMatch = find(allPossibleReSyncTokTypes, (resyncTokType) => {\n                const canMatch = tokenMatcher(nextToken, resyncTokType);\n                return canMatch;\n            });\n            if (foundMatch !== undefined) {\n                return foundMatch;\n            }\n            nextToken = this.LA(k);\n            k++;\n        }\n    }\n    getCurrFollowKey() {\n        // the length is at least one as we always add the ruleName to the stack before invoking the rule.\n        if (this.RULE_STACK.length === 1) {\n            return EOF_FOLLOW_KEY;\n        }\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        const currRuleIdx = this.getLastExplicitRuleOccurrenceIndex();\n        const prevRuleShortName = this.getPreviousExplicitRuleShortName();\n        return {\n            ruleName: this.shortRuleNameToFullName(currRuleShortName),\n            idxInCallingRule: currRuleIdx,\n            inRule: this.shortRuleNameToFullName(prevRuleShortName),\n        };\n    }\n    buildFullFollowKeyStack() {\n        const explicitRuleStack = this.RULE_STACK;\n        const explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return map(explicitRuleStack, (ruleName, idx) => {\n            if (idx === 0) {\n                return EOF_FOLLOW_KEY;\n            }\n            return {\n                ruleName: this.shortRuleNameToFullName(ruleName),\n                idxInCallingRule: explicitOccurrenceStack[idx],\n                inRule: this.shortRuleNameToFullName(explicitRuleStack[idx - 1]),\n            };\n        });\n    }\n    flattenFollowSet() {\n        const followStack = map(this.buildFullFollowKeyStack(), (currKey) => {\n            return this.getFollowSetFromFollowKey(currKey);\n        });\n        return flatten(followStack);\n    }\n    getFollowSetFromFollowKey(followKey) {\n        if (followKey === EOF_FOLLOW_KEY) {\n            return [EOF];\n        }\n        const followName = followKey.ruleName + followKey.idxInCallingRule + IN + followKey.inRule;\n        return this.resyncFollows[followName];\n    }\n    // It does not make any sense to include a virtual EOF token in the list of resynced tokens\n    // as EOF does not really exist and thus does not contain any useful information (line/column numbers)\n    addToResyncTokens(token, resyncTokens) {\n        if (!this.tokenMatcher(token, EOF)) {\n            resyncTokens.push(token);\n        }\n        return resyncTokens;\n    }\n    reSyncTo(tokType) {\n        const resyncedTokens = [];\n        let nextTok = this.LA(1);\n        while (this.tokenMatcher(nextTok, tokType) === false) {\n            nextTok = this.SKIP_TOKEN();\n            this.addToResyncTokens(nextTok, resyncedTokens);\n        }\n        // the last token is not part of the error.\n        return dropRight(resyncedTokens);\n    }\n    attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n        // by default this is a NO-OP\n        // The actual implementation is with the function(not method) below\n    }\n    getCurrentGrammarPath(tokType, tokIdxInRule) {\n        const pathRuleStack = this.getHumanReadableRuleStack();\n        const pathOccurrenceStack = clone(this.RULE_OCCURRENCE_STACK);\n        const grammarPath = {\n            ruleStack: pathRuleStack,\n            occurrenceStack: pathOccurrenceStack,\n            lastTok: tokType,\n            lastTokOccurrence: tokIdxInRule,\n        };\n        return grammarPath;\n    }\n    getHumanReadableRuleStack() {\n        return map(this.RULE_STACK, (currShortName) => this.shortRuleNameToFullName(currShortName));\n    }\n}\nexport function attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n    const key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence);\n    let firstAfterRepInfo = this.firstAfterRepMap[key];\n    if (firstAfterRepInfo === undefined) {\n        const currRuleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[currRuleName];\n        const walker = new nextToksWalker(ruleGrammar, prodOccurrence);\n        firstAfterRepInfo = walker.startWalking();\n        this.firstAfterRepMap[key] = firstAfterRepInfo;\n    }\n    let expectTokAfterLastMatch = firstAfterRepInfo.token;\n    let nextTokIdx = firstAfterRepInfo.occurrence;\n    const isEndOfRule = firstAfterRepInfo.isEndOfRule;\n    // special edge case of a TOP most repetition after which the input should END.\n    // this will force an attempt for inRule recovery in that scenario.\n    if (this.RULE_STACK.length === 1 &&\n        isEndOfRule &&\n        expectTokAfterLastMatch === undefined) {\n        expectTokAfterLastMatch = EOF;\n        nextTokIdx = 1;\n    }\n    // We don't have anything to re-sync to...\n    // this condition was extracted from `shouldInRepetitionRecoveryBeTried` to act as a type-guard\n    if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {\n        return;\n    }\n    if (this.shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck)) {\n        // TODO: performance optimization: instead of passing the original args here, we modify\n        // the args param (or create a new one) and make sure the lookahead func is explicitly provided\n        // to avoid searching the cache for it once more.\n        this.tryInRepetitionRecovery(prodFunc, args, lookaheadFunc, expectTokAfterLastMatch);\n    }\n}\n//# sourceMappingURL=recoverable.js.map","// Lookahead keys are 32Bit integers in the form\n// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Type bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\nexport const BITS_FOR_METHOD_TYPE = 4;\nexport const BITS_FOR_OCCURRENCE_IDX = 8;\nexport const BITS_FOR_RULE_IDX = 12;\n// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\nexport const BITS_FOR_ALT_IDX = 8;\n// short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\nexport const OR_IDX = 1 << BITS_FOR_OCCURRENCE_IDX;\nexport const OPTION_IDX = 2 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_IDX = 3 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_IDX = 4 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_SEP_IDX = 5 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_SEP_IDX = 6 << BITS_FOR_OCCURRENCE_IDX;\n// this actually returns a number, but it is always used as a string (object prop key)\nexport function getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) {\n    return occurrence | dslMethodIdx | ruleIdx;\n}\nconst BITS_START_FOR_ALT_IDX = 32 - BITS_FOR_ALT_IDX;\n//# sourceMappingURL=keys.js.map","import { flatMap, isEmpty } from \"lodash-es\";\nimport { defaultGrammarValidatorErrorProvider } from \"../errors_public.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser/parser.js\";\nimport { validateAmbiguousAlternationAlternatives, validateEmptyOrAlternative, validateNoLeftRecursion, validateSomeNonEmptyLookaheadPath, } from \"./checks.js\";\nimport { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, getProdType, } from \"./lookahead.js\";\nexport class LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        this.maxLookahead =\n            (_a = options === null || options === void 0 ? void 0 : options.maxLookahead) !== null && _a !== void 0 ? _a : DEFAULT_PARSER_CONFIG.maxLookahead;\n    }\n    validate(options) {\n        const leftRecursionErrors = this.validateNoLeftRecursion(options.rules);\n        if (isEmpty(leftRecursionErrors)) {\n            const emptyAltErrors = this.validateEmptyOrAlternatives(options.rules);\n            const ambiguousAltsErrors = this.validateAmbiguousAlternationAlternatives(options.rules, this.maxLookahead);\n            const emptyRepetitionErrors = this.validateSomeNonEmptyLookaheadPath(options.rules, this.maxLookahead);\n            const allErrors = [\n                ...leftRecursionErrors,\n                ...emptyAltErrors,\n                ...ambiguousAltsErrors,\n                ...emptyRepetitionErrors,\n            ];\n            return allErrors;\n        }\n        return leftRecursionErrors;\n    }\n    validateNoLeftRecursion(rules) {\n        return flatMap(rules, (currTopRule) => validateNoLeftRecursion(currTopRule, currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateEmptyOrAlternatives(rules) {\n        return flatMap(rules, (currTopRule) => validateEmptyOrAlternative(currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateAmbiguousAlternationAlternatives(rules, maxLookahead) {\n        return flatMap(rules, (currTopRule) => validateAmbiguousAlternationAlternatives(currTopRule, maxLookahead, defaultGrammarValidatorErrorProvider));\n    }\n    validateSomeNonEmptyLookaheadPath(rules, maxLookahead) {\n        return validateSomeNonEmptyLookaheadPath(rules, maxLookahead, defaultGrammarValidatorErrorProvider);\n    }\n    buildLookaheadForAlternation(options) {\n        return buildLookaheadFuncForOr(options.prodOccurrence, options.rule, options.maxLookahead, options.hasPredicates, options.dynamicTokensEnabled, buildAlternativesLookAheadFunc);\n    }\n    buildLookaheadForOptional(options) {\n        return buildLookaheadFuncForOptionalProd(options.prodOccurrence, options.rule, options.maxLookahead, options.dynamicTokensEnabled, getProdType(options.prodType), buildSingleAlternativeLookaheadFunction);\n    }\n}\n//# sourceMappingURL=llk_lookahead.js.map","import { forEach, has } from \"lodash-es\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { GAstVisitor, getProductionDslName, } from \"@chevrotain/gast\";\nimport { LLkLookaheadStrategy } from \"../../grammar/llk_lookahead.js\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nexport class LooksAhead {\n    initLooksAhead(config) {\n        this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n            ? config.dynamicTokensEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n        this.maxLookahead = has(config, \"maxLookahead\")\n            ? config.maxLookahead // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.maxLookahead;\n        this.lookaheadStrategy = has(config, \"lookaheadStrategy\")\n            ? config.lookaheadStrategy // assumes end user provides the correct config value/type\n            : new LLkLookaheadStrategy({ maxLookahead: this.maxLookahead });\n        this.lookAheadFuncsCache = new Map();\n    }\n    preComputeLookaheadFunctions(rules) {\n        forEach(rules, (currRule) => {\n            this.TRACE_INIT(`${currRule.name} Rule Lookahead`, () => {\n                const { alternation, repetition, option, repetitionMandatory, repetitionMandatoryWithSeparator, repetitionWithSeparator, } = collectMethods(currRule);\n                forEach(alternation, (currProd) => {\n                    const prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n                    this.TRACE_INIT(`${getProductionDslName(currProd)}${prodIdx}`, () => {\n                        const laFunc = this.lookaheadStrategy.buildLookaheadForAlternation({\n                            prodOccurrence: currProd.idx,\n                            rule: currRule,\n                            maxLookahead: currProd.maxLookahead || this.maxLookahead,\n                            hasPredicates: currProd.hasPredicates,\n                            dynamicTokensEnabled: this.dynamicTokensEnabled,\n                        });\n                        const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n                        this.setLaFuncCache(key, laFunc);\n                    });\n                });\n                forEach(repetition, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, \"Repetition\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(option, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, \"Option\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatory, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, \"RepetitionMandatory\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatoryWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, \"RepetitionMandatoryWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, \"RepetitionWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n            });\n        });\n    }\n    computeLookaheadFunc(rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n        this.TRACE_INIT(`${dslMethodName}${prodOccurrence === 0 ? \"\" : prodOccurrence}`, () => {\n            const laFunc = this.lookaheadStrategy.buildLookaheadForOptional({\n                prodOccurrence,\n                rule,\n                maxLookahead: prodMaxLookahead || this.maxLookahead,\n                dynamicTokensEnabled: this.dynamicTokensEnabled,\n                prodType,\n            });\n            const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n            this.setLaFuncCache(key, laFunc);\n        });\n    }\n    // this actually returns a number, but it is always used as a string (object prop key)\n    getKeyForAutomaticLookahead(dslMethodIdx, occurrence) {\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n    }\n    getLaFuncFromCache(key) {\n        return this.lookAheadFuncsCache.get(key);\n    }\n    /* istanbul ignore next */\n    setLaFuncCache(key, value) {\n        this.lookAheadFuncsCache.set(key, value);\n    }\n}\nclass DslMethodsCollectorVisitor extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    reset() {\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    visitOption(option) {\n        this.dslMethods.option.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.dslMethods.repetitionWithSeparator.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.dslMethods.repetitionMandatory.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.dslMethods.repetition.push(many);\n    }\n    visitAlternation(or) {\n        this.dslMethods.alternation.push(or);\n    }\n}\nconst collectorVisitor = new DslMethodsCollectorVisitor();\nexport function collectMethods(rule) {\n    collectorVisitor.reset();\n    rule.accept(collectorVisitor);\n    const dslMethods = collectorVisitor.dslMethods;\n    // avoid uncleaned references\n    collectorVisitor.reset();\n    return dslMethods;\n}\n//# sourceMappingURL=looksahead.js.map","/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationOnlyOffset(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (both start/end offsets exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n    // Once the startOffset has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n}\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationFull(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (all start/end props exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.startColumn = newLocationInfo.startColumn;\n        currNodeLocation.startLine = newLocationInfo.startLine;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n    // Once the start props has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n}\nexport function addTerminalToCst(node, token, tokenTypeName) {\n    if (node.children[tokenTypeName] === undefined) {\n        node.children[tokenTypeName] = [token];\n    }\n    else {\n        node.children[tokenTypeName].push(token);\n    }\n}\nexport function addNoneTerminalToCst(node, ruleName, ruleResult) {\n    if (node.children[ruleName] === undefined) {\n        node.children[ruleName] = [ruleResult];\n    }\n    else {\n        node.children[ruleName].push(ruleResult);\n    }\n}\n//# sourceMappingURL=cst.js.map","const NAME = \"name\";\nexport function defineNameProp(obj, nameValue) {\n    Object.defineProperty(obj, NAME, {\n        enumerable: false,\n        configurable: true,\n        writable: false,\n        value: nameValue,\n    });\n}\n//# sourceMappingURL=lang_extensions.js.map","import { compact, filter, forEach, isArray, isEmpty, isFunction, isUndefined, keys, map, } from \"lodash-es\";\nimport { defineNameProp } from \"../../lang/lang_extensions.js\";\nexport function defaultVisit(ctx, param) {\n    const childrenNames = keys(ctx);\n    const childrenNamesLength = childrenNames.length;\n    for (let i = 0; i < childrenNamesLength; i++) {\n        const currChildName = childrenNames[i];\n        const currChildArray = ctx[currChildName];\n        const currChildArrayLength = currChildArray.length;\n        for (let j = 0; j < currChildArrayLength; j++) {\n            const currChild = currChildArray[j];\n            // distinction between Tokens Children and CstNode children\n            if (currChild.tokenTypeIdx === undefined) {\n                this[currChild.name](currChild.children, param);\n            }\n        }\n    }\n    // defaultVisit does not support generic out param\n}\nexport function createBaseSemanticVisitorConstructor(grammarName, ruleNames) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\");\n    const semanticProto = {\n        visit: function (cstNode, param) {\n            // enables writing more concise visitor methods when CstNode has only a single child\n            if (isArray(cstNode)) {\n                // A CST Node's children dictionary can never have empty arrays as values\n                // If a key is defined there will be at least one element in the corresponding value array.\n                cstNode = cstNode[0];\n            }\n            // enables passing optional CstNodes concisely.\n            if (isUndefined(cstNode)) {\n                return undefined;\n            }\n            return this[cstNode.name](cstNode.children, param);\n        },\n        validateVisitor: function () {\n            const semanticDefinitionErrors = validateVisitor(this, ruleNames);\n            if (!isEmpty(semanticDefinitionErrors)) {\n                const errorMessages = map(semanticDefinitionErrors, (currDefError) => currDefError.msg);\n                throw Error(`Errors Detected in CST Visitor <${this.constructor.name}>:\\n\\t` +\n                    `${errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")}`);\n            }\n        },\n    };\n    derivedConstructor.prototype = semanticProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    derivedConstructor._RULE_NAMES = ruleNames;\n    return derivedConstructor;\n}\nexport function createBaseVisitorConstructorWithDefaults(grammarName, ruleNames, baseConstructor) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\");\n    const withDefaultsProto = Object.create(baseConstructor.prototype);\n    forEach(ruleNames, (ruleName) => {\n        withDefaultsProto[ruleName] = defaultVisit;\n    });\n    derivedConstructor.prototype = withDefaultsProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    return derivedConstructor;\n}\nexport var CstVisitorDefinitionError;\n(function (CstVisitorDefinitionError) {\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"REDUNDANT_METHOD\"] = 0] = \"REDUNDANT_METHOD\";\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"MISSING_METHOD\"] = 1] = \"MISSING_METHOD\";\n})(CstVisitorDefinitionError || (CstVisitorDefinitionError = {}));\nexport function validateVisitor(visitorInstance, ruleNames) {\n    const missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);\n    return missingErrors;\n}\nexport function validateMissingCstMethods(visitorInstance, ruleNames) {\n    const missingRuleNames = filter(ruleNames, (currRuleName) => {\n        return isFunction(visitorInstance[currRuleName]) === false;\n    });\n    const errors = map(missingRuleNames, (currRuleName) => {\n        return {\n            msg: `Missing visitor method: <${currRuleName}> on ${(visitorInstance.constructor.name)} CST Visitor.`,\n            type: CstVisitorDefinitionError.MISSING_METHOD,\n            methodName: currRuleName,\n        };\n    });\n    return compact(errors);\n}\n//# sourceMappingURL=cst_visitor.js.map","import { forEach, has, isArray, isFunction, last as peek, some, } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nimport { Lexer } from \"../../../scan/lexer_public.js\";\nimport { augmentTokenTypes, hasShortKeyProperty, } from \"../../../scan/tokens.js\";\nimport { createToken, createTokenInstance, } from \"../../../scan/tokens_public.js\";\nimport { END_OF_FILE } from \"../parser.js\";\nimport { BITS_FOR_OCCURRENCE_IDX } from \"../../grammar/keys.js\";\nconst RECORDING_NULL_OBJECT = {\n    description: \"This Object indicates the Parser is during Recording Phase\",\n};\nObject.freeze(RECORDING_NULL_OBJECT);\nconst HANDLE_SEPARATOR = true;\nconst MAX_METHOD_IDX = Math.pow(2, BITS_FOR_OCCURRENCE_IDX) - 1;\nconst RFT = createToken({ name: \"RECORDING_PHASE_TOKEN\", pattern: Lexer.NA });\naugmentTokenTypes([RFT]);\nconst RECORDING_PHASE_TOKEN = createTokenInstance(RFT, \"This IToken indicates the Parser is in Recording Phase\\n\\t\" +\n    \"\" +\n    \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\", \n// Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n// cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n-1, -1, -1, -1, -1, -1);\nObject.freeze(RECORDING_PHASE_TOKEN);\nconst RECORDING_PHASE_CSTNODE = {\n    name: \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" +\n        \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n    children: {},\n};\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\nexport class GastRecorder {\n    initGastRecorder(config) {\n        this.recordingProdStack = [];\n        this.RECORDING_PHASE = false;\n    }\n    enableRecording() {\n        this.RECORDING_PHASE = true;\n        this.TRACE_INIT(\"Enable Recording\", () => {\n            /**\n             * Warning Dark Voodoo Magic upcoming!\n             * We are \"replacing\" the public parsing DSL methods API\n             * With **new** alternative implementations on the Parser **instance**\n             *\n             * So far this is the only way I've found to avoid performance regressions during parsing time.\n             * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n             *   implementations directly instead.\n             */\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                this[`CONSUME${idx}`] = function (arg1, arg2) {\n                    return this.consumeInternalRecord(arg1, i, arg2);\n                };\n                this[`SUBRULE${idx}`] = function (arg1, arg2) {\n                    return this.subruleInternalRecord(arg1, i, arg2);\n                };\n                this[`OPTION${idx}`] = function (arg1) {\n                    return this.optionInternalRecord(arg1, i);\n                };\n                this[`OR${idx}`] = function (arg1) {\n                    return this.orInternalRecord(arg1, i);\n                };\n                this[`MANY${idx}`] = function (arg1) {\n                    this.manyInternalRecord(i, arg1);\n                };\n                this[`MANY_SEP${idx}`] = function (arg1) {\n                    this.manySepFirstInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE${idx}`] = function (arg1) {\n                    this.atLeastOneInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE_SEP${idx}`] = function (arg1) {\n                    this.atLeastOneSepFirstInternalRecord(i, arg1);\n                };\n            }\n            // DSL methods with the idx(suffix) as an argument\n            this[`consume`] = function (idx, arg1, arg2) {\n                return this.consumeInternalRecord(arg1, idx, arg2);\n            };\n            this[`subrule`] = function (idx, arg1, arg2) {\n                return this.subruleInternalRecord(arg1, idx, arg2);\n            };\n            this[`option`] = function (idx, arg1) {\n                return this.optionInternalRecord(arg1, idx);\n            };\n            this[`or`] = function (idx, arg1) {\n                return this.orInternalRecord(arg1, idx);\n            };\n            this[`many`] = function (idx, arg1) {\n                this.manyInternalRecord(idx, arg1);\n            };\n            this[`atLeastOne`] = function (idx, arg1) {\n                this.atLeastOneInternalRecord(idx, arg1);\n            };\n            this.ACTION = this.ACTION_RECORD;\n            this.BACKTRACK = this.BACKTRACK_RECORD;\n            this.LA = this.LA_RECORD;\n        });\n    }\n    disableRecording() {\n        this.RECORDING_PHASE = false;\n        // By deleting these **instance** properties, any future invocation\n        // will be deferred to the original methods on the **prototype** object\n        // This seems to get rid of any incorrect optimizations that V8 may\n        // do during the recording phase.\n        this.TRACE_INIT(\"Deleting Recording methods\", () => {\n            const that = this;\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                delete that[`CONSUME${idx}`];\n                delete that[`SUBRULE${idx}`];\n                delete that[`OPTION${idx}`];\n                delete that[`OR${idx}`];\n                delete that[`MANY${idx}`];\n                delete that[`MANY_SEP${idx}`];\n                delete that[`AT_LEAST_ONE${idx}`];\n                delete that[`AT_LEAST_ONE_SEP${idx}`];\n            }\n            delete that[`consume`];\n            delete that[`subrule`];\n            delete that[`option`];\n            delete that[`or`];\n            delete that[`many`];\n            delete that[`atLeastOne`];\n            delete that.ACTION;\n            delete that.BACKTRACK;\n            delete that.LA;\n        });\n    }\n    //   Parser methods are called inside an ACTION?\n    //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n    // @ts-expect-error -- noop place holder\n    ACTION_RECORD(impl) {\n        // NO-OP during recording\n    }\n    // Executing backtracking logic will break our recording logic assumptions\n    BACKTRACK_RECORD(grammarRule, args) {\n        return () => true;\n    }\n    // LA is part of the official API and may be used for custom lookahead logic\n    // by end users who may forget to wrap it in ACTION or inside a GATE\n    LA_RECORD(howMuch) {\n        // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n        // On LA return EOF at the end of the input so an infinite loop may occur.\n        return END_OF_FILE;\n    }\n    topLevelRuleRecord(name, def) {\n        try {\n            const newTopLevelRule = new Rule({ definition: [], name: name });\n            newTopLevelRule.name = name;\n            this.recordingProdStack.push(newTopLevelRule);\n            def.call(this);\n            this.recordingProdStack.pop();\n            return newTopLevelRule;\n        }\n        catch (originalError) {\n            if (originalError.KNOWN_RECORDER_ERROR !== true) {\n                try {\n                    originalError.message =\n                        originalError.message +\n                            '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' +\n                            \"https://chevrotain.io/docs/guide/internals.html#grammar-recording\";\n                }\n                catch (mutabilityError) {\n                    // We may not be able to modify the original error object\n                    throw originalError;\n                }\n            }\n            throw originalError;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternalRecord(actionORMethodDef, occurrence) {\n        return recordProd.call(this, Option, actionORMethodDef, occurrence);\n    }\n    atLeastOneInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, RepetitionMandatory, actionORMethodDef, occurrence);\n    }\n    atLeastOneSepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionMandatoryWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    manyInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, Repetition, actionORMethodDef, occurrence);\n    }\n    manySepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    orInternalRecord(altsOrOpts, occurrence) {\n        return recordOrProd.call(this, altsOrOpts, occurrence);\n    }\n    subruleInternalRecord(ruleToCall, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!ruleToCall || has(ruleToCall, \"ruleName\") === false) {\n            const error = new Error(`<SUBRULE${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a Parser method reference but got: <${JSON.stringify(ruleToCall)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const ruleName = ruleToCall.ruleName;\n        const newNoneTerminal = new NonTerminal({\n            idx: occurrence,\n            nonTerminalName: ruleName,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n            // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n            referencedRule: undefined,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return this.outputCst\n            ? RECORDING_PHASE_CSTNODE\n            : RECORDING_NULL_OBJECT;\n    }\n    consumeInternalRecord(tokType, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!hasShortKeyProperty(tokType)) {\n            const error = new Error(`<CONSUME${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a TokenType reference but got: <${JSON.stringify(tokType)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const newNoneTerminal = new Terminal({\n            idx: occurrence,\n            terminalType: tokType,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return RECORDING_PHASE_TOKEN;\n    }\n}\nfunction recordProd(prodConstructor, mainProdArg, occurrence, handleSep = false) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    const grammarAction = isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF;\n    const newProd = new prodConstructor({ definition: [], idx: occurrence });\n    if (handleSep) {\n        newProd.separator = mainProdArg.SEP;\n    }\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    this.recordingProdStack.push(newProd);\n    grammarAction.call(this);\n    prevProd.definition.push(newProd);\n    this.recordingProdStack.pop();\n    return RECORDING_NULL_OBJECT;\n}\nfunction recordOrProd(mainProdArg, occurrence) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    // Only an array of alternatives\n    const hasOptions = isArray(mainProdArg) === false;\n    const alts = hasOptions === false ? mainProdArg : mainProdArg.DEF;\n    const newOrProd = new Alternation({\n        definition: [],\n        idx: occurrence,\n        ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true,\n    });\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    const hasPredicates = some(alts, (currAlt) => isFunction(currAlt.GATE));\n    newOrProd.hasPredicates = hasPredicates;\n    prevProd.definition.push(newOrProd);\n    forEach(alts, (currAlt) => {\n        const currAltFlat = new Alternative({ definition: [] });\n        newOrProd.definition.push(currAltFlat);\n        if (has(currAlt, \"IGNORE_AMBIGUITIES\")) {\n            currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES; // assumes end user provides the correct config value/type\n        }\n        // **implicit** ignoreAmbiguities due to usage of gate\n        else if (has(currAlt, \"GATE\")) {\n            currAltFlat.ignoreAmbiguities = true;\n        }\n        this.recordingProdStack.push(currAltFlat);\n        currAlt.ALT.call(this);\n        this.recordingProdStack.pop();\n    });\n    return RECORDING_NULL_OBJECT;\n}\nfunction getIdxSuffix(idx) {\n    return idx === 0 ? \"\" : `${idx}`;\n}\nfunction assertMethodIdxIsValid(idx) {\n    if (idx < 0 || idx > MAX_METHOD_IDX) {\n        const error = new Error(\n        // The stack trace will contain all the needed details\n        `Invalid DSL Method idx value: <${idx}>\\n\\t` +\n            `Idx value must be a none negative value smaller than ${MAX_METHOD_IDX + 1}`);\n        error.KNOWN_RECORDER_ERROR = true;\n        throw error;\n    }\n}\n//# sourceMappingURL=gast_recorder.js.map","import { clone, forEach, has, isEmpty, map, values } from \"lodash-es\";\nimport { toFastProperties } from \"@chevrotain/utils\";\nimport { computeAllProdsFollows } from \"../grammar/follow.js\";\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public.js\";\nimport { defaultGrammarValidatorErrorProvider, defaultParserErrorProvider, } from \"../errors_public.js\";\nimport { resolveGrammar, validateGrammar, } from \"../grammar/gast/gast_resolver_public.js\";\nimport { Recoverable } from \"./traits/recoverable.js\";\nimport { LooksAhead } from \"./traits/looksahead.js\";\nimport { TreeBuilder } from \"./traits/tree_builder.js\";\nimport { LexerAdapter } from \"./traits/lexer_adapter.js\";\nimport { RecognizerApi } from \"./traits/recognizer_api.js\";\nimport { RecognizerEngine } from \"./traits/recognizer_engine.js\";\nimport { ErrorHandler } from \"./traits/error_handler.js\";\nimport { ContentAssist } from \"./traits/context_assist.js\";\nimport { GastRecorder } from \"./traits/gast_recorder.js\";\nimport { PerformanceTracer } from \"./traits/perf_tracer.js\";\nimport { applyMixins } from \"./utils/apply_mixins.js\";\nimport { validateLookahead } from \"../grammar/checks.js\";\nexport const END_OF_FILE = createTokenInstance(EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(END_OF_FILE);\nexport const DEFAULT_PARSER_CONFIG = Object.freeze({\n    recoveryEnabled: false,\n    maxLookahead: 3,\n    dynamicTokensEnabled: false,\n    outputCst: true,\n    errorMessageProvider: defaultParserErrorProvider,\n    nodeLocationTracking: \"none\",\n    traceInitPerf: false,\n    skipValidations: false,\n});\nexport const DEFAULT_RULE_CONFIG = Object.freeze({\n    recoveryValueFunc: () => undefined,\n    resyncEnabled: true,\n});\nexport var ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CUSTOM_LOOKAHEAD_VALIDATION\"] = 13] = \"CUSTOM_LOOKAHEAD_VALIDATION\";\n})(ParserDefinitionErrorType || (ParserDefinitionErrorType = {}));\nexport function EMPTY_ALT(value = undefined) {\n    return function () {\n        return value;\n    };\n}\nexport class Parser {\n    /**\n     *  @deprecated use the **instance** method with the same name instead\n     */\n    static performSelfAnalysis(parserInstance) {\n        throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" +\n            \"\\t\\nUse the **instance** method with the same name instead.\");\n    }\n    performSelfAnalysis() {\n        this.TRACE_INIT(\"performSelfAnalysis\", () => {\n            let defErrorsMsgs;\n            this.selfAnalysisDone = true;\n            const className = this.className;\n            this.TRACE_INIT(\"toFastProps\", () => {\n                // Without this voodoo magic the parser would be x3-x4 slower\n                // It seems it is better to invoke `toFastProperties` **before**\n                // Any manipulations of the `this` object done during the recording phase.\n                toFastProperties(this);\n            });\n            this.TRACE_INIT(\"Grammar Recording\", () => {\n                try {\n                    this.enableRecording();\n                    // Building the GAST\n                    forEach(this.definedRulesNames, (currRuleName) => {\n                        const wrappedRule = this[currRuleName];\n                        const originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n                        let recordedRuleGast;\n                        this.TRACE_INIT(`${currRuleName} Rule`, () => {\n                            recordedRuleGast = this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n                        });\n                        this.gastProductionsCache[currRuleName] = recordedRuleGast;\n                    });\n                }\n                finally {\n                    this.disableRecording();\n                }\n            });\n            let resolverErrors = [];\n            this.TRACE_INIT(\"Grammar Resolving\", () => {\n                resolverErrors = resolveGrammar({\n                    rules: values(this.gastProductionsCache),\n                });\n                this.definitionErrors = this.definitionErrors.concat(resolverErrors);\n            });\n            this.TRACE_INIT(\"Grammar Validations\", () => {\n                // only perform additional grammar validations IFF no resolving errors have occurred.\n                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n                if (isEmpty(resolverErrors) && this.skipValidations === false) {\n                    const validationErrors = validateGrammar({\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        errMsgProvider: defaultGrammarValidatorErrorProvider,\n                        grammarName: className,\n                    });\n                    const lookaheadValidationErrors = validateLookahead({\n                        lookaheadStrategy: this.lookaheadStrategy,\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        grammarName: className,\n                    });\n                    this.definitionErrors = this.definitionErrors.concat(validationErrors, lookaheadValidationErrors);\n                }\n            });\n            // this analysis may fail if the grammar is not perfectly valid\n            if (isEmpty(this.definitionErrors)) {\n                // The results of these computations are not needed unless error recovery is enabled.\n                if (this.recoveryEnabled) {\n                    this.TRACE_INIT(\"computeAllProdsFollows\", () => {\n                        const allFollows = computeAllProdsFollows(values(this.gastProductionsCache));\n                        this.resyncFollows = allFollows;\n                    });\n                }\n                this.TRACE_INIT(\"ComputeLookaheadFunctions\", () => {\n                    var _a, _b;\n                    (_b = (_a = this.lookaheadStrategy).initialize) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                        rules: values(this.gastProductionsCache),\n                    });\n                    this.preComputeLookaheadFunctions(values(this.gastProductionsCache));\n                });\n            }\n            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n                !isEmpty(this.definitionErrors)) {\n                defErrorsMsgs = map(this.definitionErrors, (defError) => defError.message);\n                throw new Error(`Parser Definition Errors detected:\\n ${defErrorsMsgs.join(\"\\n-------------------------------\\n\")}`);\n            }\n        });\n    }\n    constructor(tokenVocabulary, config) {\n        this.definitionErrors = [];\n        this.selfAnalysisDone = false;\n        const that = this;\n        that.initErrorHandler(config);\n        that.initLexerAdapter();\n        that.initLooksAhead(config);\n        that.initRecognizerEngine(tokenVocabulary, config);\n        that.initRecoverable(config);\n        that.initTreeBuilder(config);\n        that.initContentAssist();\n        that.initGastRecorder(config);\n        that.initPerformanceTracer(config);\n        if (has(config, \"ignoredIssues\")) {\n            throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\n                \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\n                \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\n                \"For further details.\");\n        }\n        this.skipValidations = has(config, \"skipValidations\")\n            ? config.skipValidations // casting assumes the end user passing the correct type\n            : DEFAULT_PARSER_CONFIG.skipValidations;\n    }\n}\n// Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n// (normally during the parser's constructor).\n// This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n// for example: duplicate rule names, referencing an unresolved subrule, ect...\n// This flag should not be enabled during normal usage, it is used in special situations, for example when\n// needing to display the parser definition errors in some GUI(online playground).\nParser.DEFER_DEFINITION_ERRORS_HANDLING = false;\napplyMixins(Parser, [\n    Recoverable,\n    LooksAhead,\n    TreeBuilder,\n    LexerAdapter,\n    RecognizerEngine,\n    RecognizerApi,\n    ErrorHandler,\n    ContentAssist,\n    GastRecorder,\n    PerformanceTracer,\n]);\nexport class CstParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = true;\n        super(tokenVocabulary, configClone);\n    }\n}\nexport class EmbeddedActionsParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = false;\n        super(tokenVocabulary, configClone);\n    }\n}\n//# sourceMappingURL=parser.js.map","export function applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach((baseCtor) => {\n        const baseProto = baseCtor.prototype;\n        Object.getOwnPropertyNames(baseProto).forEach((propName) => {\n            if (propName === \"constructor\") {\n                return;\n            }\n            const basePropDescriptor = Object.getOwnPropertyDescriptor(baseProto, propName);\n            // Handle Accessors\n            if (basePropDescriptor &&\n                (basePropDescriptor.get || basePropDescriptor.set)) {\n                Object.defineProperty(derivedCtor.prototype, propName, basePropDescriptor);\n            }\n            else {\n                derivedCtor.prototype[propName] = baseCtor.prototype[propName];\n            }\n        });\n    });\n}\n//# sourceMappingURL=apply_mixins.js.map","import { defaults, forEach } from \"lodash-es\";\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver.js\";\nimport { validateGrammar as orgValidateGrammar } from \"../checks.js\";\nimport { defaultGrammarResolverErrorProvider, defaultGrammarValidatorErrorProvider, } from \"../../errors_public.js\";\nexport function resolveGrammar(options) {\n    const actualOptions = defaults(options, {\n        errMsgProvider: defaultGrammarResolverErrorProvider,\n    });\n    const topRulesTable = {};\n    forEach(options.rules, (rule) => {\n        topRulesTable[rule.name] = rule;\n    });\n    return orgResolveGrammar(topRulesTable, actualOptions.errMsgProvider);\n}\nexport function validateGrammar(options) {\n    options = defaults(options, {\n        errMsgProvider: defaultGrammarValidatorErrorProvider,\n    });\n    return orgValidateGrammar(options.rules, options.tokenTypes, options.errMsgProvider, options.grammarName);\n}\n//# sourceMappingURL=gast_resolver_public.js.map","import { addNoneTerminalToCst, addTerminalToCst, setNodeLocationFull, setNodeLocationOnlyOffset, } from \"../../cst/cst.js\";\nimport { has, isUndefined, keys, noop } from \"lodash-es\";\nimport { createBaseSemanticVisitorConstructor, createBaseVisitorConstructorWithDefaults, } from \"../../cst/cst_visitor.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * This trait is responsible for the CST building logic.\n */\nexport class TreeBuilder {\n    initTreeBuilder(config) {\n        this.CST_STACK = [];\n        // outputCst is no longer exposed/defined in the pubic API\n        this.outputCst = config.outputCst;\n        this.nodeLocationTracking = has(config, \"nodeLocationTracking\")\n            ? config.nodeLocationTracking // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.nodeLocationTracking;\n        if (!this.outputCst) {\n            this.cstInvocationStateUpdate = noop;\n            this.cstFinallyStateUpdate = noop;\n            this.cstPostTerminal = noop;\n            this.cstPostNonTerminal = noop;\n            this.cstPostRule = noop;\n        }\n        else {\n            if (/full/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationFull;\n                    this.setNodeLocationFromNode = setNodeLocationFull;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleFull;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular;\n                }\n            }\n            else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationOnlyOffset;\n                    this.setNodeLocationFromNode = setNodeLocationOnlyOffset;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleOnlyOffset;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRegular;\n                }\n            }\n            else if (/none/i.test(this.nodeLocationTracking)) {\n                this.setNodeLocationFromToken = noop;\n                this.setNodeLocationFromNode = noop;\n                this.cstPostRule = noop;\n                this.setInitialNodeLocation = noop;\n            }\n            else {\n                throw Error(`Invalid <nodeLocationTracking> config option: \"${config.nodeLocationTracking}\"`);\n            }\n        }\n    }\n    setInitialNodeLocationOnlyOffsetRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationOnlyOffsetRegular(cstNode) {\n        cstNode.location = {\n            // without error recovery the starting Location of a new CstNode is guaranteed\n            // To be the next Token's startOffset (for valid inputs).\n            // For invalid inputs there won't be any CSTOutput so this potential\n            // inaccuracy does not matter\n            startOffset: this.LA(1).startOffset,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationFullRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            startLine: NaN,\n            startColumn: NaN,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    /**\n       *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n  \n       * @param cstNode\n       */\n    setInitialNodeLocationFullRegular(cstNode) {\n        const nextToken = this.LA(1);\n        cstNode.location = {\n            startOffset: nextToken.startOffset,\n            startLine: nextToken.startLine,\n            startColumn: nextToken.startColumn,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    cstInvocationStateUpdate(fullRuleName) {\n        const cstNode = {\n            name: fullRuleName,\n            children: Object.create(null),\n        };\n        this.setInitialNodeLocation(cstNode);\n        this.CST_STACK.push(cstNode);\n    }\n    cstFinallyStateUpdate() {\n        this.CST_STACK.pop();\n    }\n    cstPostRuleFull(ruleCstNode) {\n        // casts to `required<CstNodeLocation>` are safe because `cstPostRuleFull` should only be invoked when full location is enabled\n        const prevToken = this.LA(0);\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n            loc.endLine = prevToken.endLine;\n            loc.endColumn = prevToken.endColumn;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n            loc.startLine = NaN;\n            loc.startColumn = NaN;\n        }\n    }\n    cstPostRuleOnlyOffset(ruleCstNode) {\n        const prevToken = this.LA(0);\n        // `location' is not null because `cstPostRuleOnlyOffset` will only be invoked when location tracking is enabled.\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n        }\n    }\n    cstPostTerminal(key, consumedToken) {\n        const rootCst = this.CST_STACK[this.CST_STACK.length - 1];\n        addTerminalToCst(rootCst, consumedToken, key);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromToken(rootCst.location, consumedToken);\n    }\n    cstPostNonTerminal(ruleCstResult, ruleName) {\n        const preCstNode = this.CST_STACK[this.CST_STACK.length - 1];\n        addNoneTerminalToCst(preCstNode, ruleName, ruleCstResult);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromNode(preCstNode.location, ruleCstResult.location);\n    }\n    getBaseCstVisitorConstructor() {\n        if (isUndefined(this.baseCstVisitorConstructor)) {\n            const newBaseCstVisitorConstructor = createBaseSemanticVisitorConstructor(this.className, keys(this.gastProductionsCache));\n            this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;\n            return newBaseCstVisitorConstructor;\n        }\n        return this.baseCstVisitorConstructor;\n    }\n    getBaseCstVisitorConstructorWithDefaults() {\n        if (isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {\n            const newConstructor = createBaseVisitorConstructorWithDefaults(this.className, keys(this.gastProductionsCache), this.getBaseCstVisitorConstructor());\n            this.baseCstVisitorWithDefaultsConstructor = newConstructor;\n            return newConstructor;\n        }\n        return this.baseCstVisitorWithDefaultsConstructor;\n    }\n    getLastExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 1];\n    }\n    getPreviousExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 2];\n    }\n    getLastExplicitRuleOccurrenceIndex() {\n        const occurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return occurrenceStack[occurrenceStack.length - 1];\n    }\n}\n//# sourceMappingURL=tree_builder.js.map","import { END_OF_FILE } from \"../parser.js\";\n/**\n * Trait responsible abstracting over the interaction with Lexer output (Token vector).\n *\n * This could be generalized to support other kinds of lexers, e.g.\n * - Just in Time Lexing / Lexer-Less parsing.\n * - Streaming Lexer.\n */\nexport class LexerAdapter {\n    initLexerAdapter() {\n        this.tokVector = [];\n        this.tokVectorLength = 0;\n        this.currIdx = -1;\n    }\n    set input(newInput) {\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        if (this.selfAnalysisDone !== true) {\n            throw Error(`Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.`);\n        }\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        this.reset();\n        this.tokVector = newInput;\n        this.tokVectorLength = newInput.length;\n    }\n    get input() {\n        return this.tokVector;\n    }\n    // skips a token and returns the next token\n    SKIP_TOKEN() {\n        if (this.currIdx <= this.tokVector.length - 2) {\n            this.consumeToken();\n            return this.LA(1);\n        }\n        else {\n            return END_OF_FILE;\n        }\n    }\n    // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers\n    // or lexers dependent on parser context.\n    LA(howMuch) {\n        const soughtIdx = this.currIdx + howMuch;\n        if (soughtIdx < 0 || this.tokVectorLength <= soughtIdx) {\n            return END_OF_FILE;\n        }\n        else {\n            return this.tokVector[soughtIdx];\n        }\n    }\n    consumeToken() {\n        this.currIdx++;\n    }\n    exportLexerState() {\n        return this.currIdx;\n    }\n    importLexerState(newState) {\n        this.currIdx = newState;\n    }\n    resetLexerState() {\n        this.currIdx = -1;\n    }\n    moveToTerminatedState() {\n        this.currIdx = this.tokVector.length - 1;\n    }\n    getLexerPosition() {\n        return this.exportLexerState();\n    }\n}\n//# sourceMappingURL=lexer_adapter.js.map","import { clone, every, flatten, has, isArray, isEmpty, isObject, reduce, uniq, values, } from \"lodash-es\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, BITS_FOR_METHOD_TYPE, BITS_FOR_OCCURRENCE_IDX, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { isRecognitionException, MismatchedTokenException, NotAllInputParsedException, } from \"../../exceptions_public.js\";\nimport { PROD_TYPE } from \"../../grammar/lookahead.js\";\nimport { NextTerminalAfterAtLeastOneSepWalker, NextTerminalAfterAtLeastOneWalker, NextTerminalAfterManySepWalker, NextTerminalAfterManyWalker, } from \"../../grammar/interpreter.js\";\nimport { DEFAULT_RULE_CONFIG } from \"../parser.js\";\nimport { IN_RULE_RECOVERY_EXCEPTION } from \"./recoverable.js\";\nimport { EOF } from \"../../../scan/tokens_public.js\";\nimport { augmentTokenTypes, isTokenType, tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../../scan/tokens.js\";\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nexport class RecognizerEngine {\n    initRecognizerEngine(tokenVocabulary, config) {\n        this.className = this.constructor.name;\n        // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n        this.shortRuleNameToFull = {};\n        this.fullRuleNameToShort = {};\n        this.ruleShortNameIdx = 256;\n        this.tokenMatcher = tokenStructuredMatcherNoCategories;\n        this.subruleIdx = 0;\n        this.definedRulesNames = [];\n        this.tokensMap = {};\n        this.isBackTrackingStack = [];\n        this.RULE_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n        this.gastProductionsCache = {};\n        if (has(config, \"serializedGrammar\")) {\n            throw Error(\"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" +\n                \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" +\n                \"\\tFor Further details.\");\n        }\n        if (isArray(tokenVocabulary)) {\n            // This only checks for Token vocabularies provided as arrays.\n            // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n            // rather than all edge cases of empty Token vocabularies.\n            if (isEmpty(tokenVocabulary)) {\n                throw Error(\"A Token Vocabulary cannot be empty.\\n\" +\n                    \"\\tNote that the first argument for the parser constructor\\n\" +\n                    \"\\tis no longer a Token vector (since v4.0).\");\n            }\n            if (typeof tokenVocabulary[0].startOffset === \"number\") {\n                throw Error(\"The Parser constructor no longer accepts a token vector as the first argument.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" +\n                    \"\\tFor Further details.\");\n            }\n        }\n        if (isArray(tokenVocabulary)) {\n            this.tokensMap = reduce(tokenVocabulary, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (has(tokenVocabulary, \"modes\") &&\n            every(flatten(values(tokenVocabulary.modes)), isTokenType)) {\n            const allTokenTypes = flatten(values(tokenVocabulary.modes));\n            const uniqueTokens = uniq(allTokenTypes);\n            this.tokensMap = reduce(uniqueTokens, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (isObject(tokenVocabulary)) {\n            this.tokensMap = clone(tokenVocabulary);\n        }\n        else {\n            throw new Error(\"<tokensDictionary> argument must be An Array of Token constructors,\" +\n                \" A dictionary of Token constructors or an IMultiModeLexerDefinition\");\n        }\n        // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n        // parsed with a clear error message (\"expecting EOF but found ...\")\n        this.tokensMap[\"EOF\"] = EOF;\n        const allTokenTypes = has(tokenVocabulary, \"modes\")\n            ? flatten(values(tokenVocabulary.modes))\n            : values(tokenVocabulary);\n        const noTokenCategoriesUsed = every(allTokenTypes, (tokenConstructor) => isEmpty(tokenConstructor.categoryMatches));\n        this.tokenMatcher = noTokenCategoriesUsed\n            ? tokenStructuredMatcherNoCategories\n            : tokenStructuredMatcher;\n        // Because ES2015+ syntax should be supported for creating Token classes\n        // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n        // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n        augmentTokenTypes(values(this.tokensMap));\n    }\n    defineRule(ruleName, impl, config) {\n        if (this.selfAnalysisDone) {\n            throw Error(`Grammar rule <${ruleName}> may not be defined after the 'performSelfAnalysis' method has been called'\\n` +\n                `Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.`);\n        }\n        const resyncEnabled = has(config, \"resyncEnabled\")\n            ? config.resyncEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.resyncEnabled;\n        const recoveryValueFunc = has(config, \"recoveryValueFunc\")\n            ? config.recoveryValueFunc // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.recoveryValueFunc;\n        // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n        // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n        const shortName = this.ruleShortNameIdx << (BITS_FOR_METHOD_TYPE + BITS_FOR_OCCURRENCE_IDX);\n        this.ruleShortNameIdx++;\n        this.shortRuleNameToFull[shortName] = ruleName;\n        this.fullRuleNameToShort[ruleName] = shortName;\n        let invokeRuleWithTry;\n        // Micro optimization, only check the condition **once** on rule definition\n        // instead of **every single** rule invocation.\n        if (this.outputCst === true) {\n            invokeRuleWithTry = function invokeRuleWithTry(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    impl.apply(this, args);\n                    const cst = this.CST_STACK[this.CST_STACK.length - 1];\n                    this.cstPostRule(cst);\n                    return cst;\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        else {\n            invokeRuleWithTry = function invokeRuleWithTryCst(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    return impl.apply(this, args);\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        const wrappedGrammarRule = Object.assign(invokeRuleWithTry, { ruleName, originalGrammarAction: impl });\n        return wrappedGrammarRule;\n    }\n    invokeRuleCatch(e, resyncEnabledConfig, recoveryValueFunc) {\n        const isFirstInvokedRule = this.RULE_STACK.length === 1;\n        // note the reSync is always enabled for the first rule invocation, because we must always be able to\n        // reSync with EOF and just output some INVALID ParseTree\n        // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n        // path is really the most valid one\n        const reSyncEnabled = resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;\n        if (isRecognitionException(e)) {\n            const recogError = e;\n            if (reSyncEnabled) {\n                const reSyncTokType = this.findReSyncTokenType();\n                if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n                    recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        return partialCstResult;\n                    }\n                    else {\n                        return recoveryValueFunc(e);\n                    }\n                }\n                else {\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        recogError.partialCstResult = partialCstResult;\n                    }\n                    // to be handled Further up the call stack\n                    throw recogError;\n                }\n            }\n            else if (isFirstInvokedRule) {\n                // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n                this.moveToTerminatedState();\n                // the parser should never throw one of its own errors outside its flow.\n                // even if error recovery is disabled\n                return recoveryValueFunc(e);\n            }\n            else {\n                // to be recovered Further up the call stack\n                throw recogError;\n            }\n        }\n        else {\n            // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n            throw e;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternal(actionORMethodDef, occurrence) {\n        const key = this.getKeyForAutomaticLookahead(OPTION_IDX, occurrence);\n        return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n    }\n    optionInternalLogic(actionORMethodDef, occurrence, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            return action.call(this);\n        }\n        return undefined;\n    }\n    atLeastOneInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_IDX, prodOccurrence);\n        return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            let notStuck = this.doSingleRepetition(action);\n            while (lookAheadFunc.call(this) === true &&\n                notStuck === true) {\n                notStuck = this.doSingleRepetition(action);\n            }\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);\n        }\n        // note that while it may seem that this can cause an error because by using a recursive call to\n        // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n        // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, AT_LEAST_ONE_IDX, prodOccurrence, NextTerminalAfterAtLeastOneWalker);\n    }\n    atLeastOneSepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_SEP_IDX, prodOccurrence);\n        this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    atLeastOneSepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLookaheadFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLookaheadFunc.call(this) === true) {\n            action.call(this);\n            //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n            //  because it is only needed in error recovery scenarios.\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterAtLeastOneSepWalker,\n            ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, NextTerminalAfterAtLeastOneSepWalker);\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);\n        }\n    }\n    manyInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_IDX, prodOccurrence);\n        return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    manyInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookaheadFunction = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookaheadFunction;\n                lookaheadFunction = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        let notStuck = true;\n        while (lookaheadFunction.call(this) === true && notStuck === true) {\n            notStuck = this.doSingleRepetition(action);\n        }\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, MANY_IDX, prodOccurrence, NextTerminalAfterManyWalker, \n        // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n        // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n        // An infinite loop cannot occur as:\n        // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n        // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n        notStuck);\n    }\n    manySepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_SEP_IDX, prodOccurrence);\n        this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    manySepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLaFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLaFunc.call(this) === true) {\n            action.call(this);\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterManySepWalker,\n            ], separatorLookAheadFunc, MANY_SEP_IDX, prodOccurrence, NextTerminalAfterManySepWalker);\n        }\n    }\n    repetitionSepSecondInternal(prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {\n        while (separatorLookAheadFunc()) {\n            // note that this CONSUME will never enter recovery because\n            // the separatorLookAheadFunc checks that the separator really does exist.\n            this.CONSUME(separator);\n            action.call(this);\n        }\n        // we can only arrive to this function after an error\n        // has occurred (hence the name 'second') so the following\n        // IF will always be entered, its possible to remove it...\n        // however it is kept to avoid confusion and be consistent.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        /* istanbul ignore else */\n        this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n            prodOccurrence,\n            separator,\n            separatorLookAheadFunc,\n            action,\n            nextTerminalAfterWalker,\n        ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);\n    }\n    doSingleRepetition(action) {\n        const beforeIteration = this.getLexerPosition();\n        action.call(this);\n        const afterIteration = this.getLexerPosition();\n        // This boolean will indicate if this repetition progressed\n        // or if we are \"stuck\" (potential infinite loop in the repetition).\n        return afterIteration > beforeIteration;\n    }\n    orInternal(altsOrOpts, occurrence) {\n        const laKey = this.getKeyForAutomaticLookahead(OR_IDX, occurrence);\n        const alts = isArray(altsOrOpts) ? altsOrOpts : altsOrOpts.DEF;\n        const laFunc = this.getLaFuncFromCache(laKey);\n        const altIdxToTake = laFunc.call(this, alts);\n        if (altIdxToTake !== undefined) {\n            const chosenAlternative = alts[altIdxToTake];\n            return chosenAlternative.ALT.call(this);\n        }\n        this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n    }\n    ruleFinallyStateUpdate() {\n        this.RULE_STACK.pop();\n        this.RULE_OCCURRENCE_STACK.pop();\n        // NOOP when cst is disabled\n        this.cstFinallyStateUpdate();\n        if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n            const firstRedundantTok = this.LA(1);\n            const errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n                firstRedundant: firstRedundantTok,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            this.SAVE_ERROR(new NotAllInputParsedException(errMsg, firstRedundantTok));\n        }\n    }\n    subruleInternal(ruleToCall, idx, options) {\n        let ruleResult;\n        try {\n            const args = options !== undefined ? options.ARGS : undefined;\n            this.subruleIdx = idx;\n            ruleResult = ruleToCall.apply(this, args);\n            this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleToCall.ruleName);\n            return ruleResult;\n        }\n        catch (e) {\n            throw this.subruleInternalError(e, options, ruleToCall.ruleName);\n        }\n    }\n    subruleInternalError(e, options, ruleName) {\n        if (isRecognitionException(e) && e.partialCstResult !== undefined) {\n            this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleName);\n            delete e.partialCstResult;\n        }\n        throw e;\n    }\n    consumeInternal(tokType, idx, options) {\n        let consumedToken;\n        try {\n            const nextToken = this.LA(1);\n            if (this.tokenMatcher(nextToken, tokType) === true) {\n                this.consumeToken();\n                consumedToken = nextToken;\n            }\n            else {\n                this.consumeInternalError(tokType, nextToken, options);\n            }\n        }\n        catch (eFromConsumption) {\n            consumedToken = this.consumeInternalRecovery(tokType, idx, eFromConsumption);\n        }\n        this.cstPostTerminal(options !== undefined && options.LABEL !== undefined\n            ? options.LABEL\n            : tokType.name, consumedToken);\n        return consumedToken;\n    }\n    consumeInternalError(tokType, nextToken, options) {\n        let msg;\n        const previousToken = this.LA(0);\n        if (options !== undefined && options.ERR_MSG) {\n            msg = options.ERR_MSG;\n        }\n        else {\n            msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: tokType,\n                actual: nextToken,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n        }\n        throw this.SAVE_ERROR(new MismatchedTokenException(msg, nextToken, previousToken));\n    }\n    consumeInternalRecovery(tokType, idx, eFromConsumption) {\n        // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n        // but the original syntax could have been parsed successfully without any backtracking + recovery\n        if (this.recoveryEnabled &&\n            // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n            eFromConsumption.name === \"MismatchedTokenException\" &&\n            !this.isBackTracking()) {\n            const follows = this.getFollowsForInRuleRecovery(tokType, idx);\n            try {\n                return this.tryInRuleRecovery(tokType, follows);\n            }\n            catch (eFromInRuleRecovery) {\n                if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {\n                    // failed in RuleRecovery.\n                    // throw the original error in order to trigger reSync error recovery\n                    throw eFromConsumption;\n                }\n                else {\n                    throw eFromInRuleRecovery;\n                }\n            }\n        }\n        else {\n            throw eFromConsumption;\n        }\n    }\n    saveRecogState() {\n        // errors is a getter which will clone the errors array\n        const savedErrors = this.errors;\n        const savedRuleStack = clone(this.RULE_STACK);\n        return {\n            errors: savedErrors,\n            lexerState: this.exportLexerState(),\n            RULE_STACK: savedRuleStack,\n            CST_STACK: this.CST_STACK,\n        };\n    }\n    reloadRecogState(newState) {\n        this.errors = newState.errors;\n        this.importLexerState(newState.lexerState);\n        this.RULE_STACK = newState.RULE_STACK;\n    }\n    ruleInvocationStateUpdate(shortName, fullName, idxInCallingRule) {\n        this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n        this.RULE_STACK.push(shortName);\n        // NOOP when cst is disabled\n        this.cstInvocationStateUpdate(fullName);\n    }\n    isBackTracking() {\n        return this.isBackTrackingStack.length !== 0;\n    }\n    getCurrRuleFullName() {\n        const shortName = this.getLastExplicitRuleShortName();\n        return this.shortRuleNameToFull[shortName];\n    }\n    shortRuleNameToFullName(shortName) {\n        return this.shortRuleNameToFull[shortName];\n    }\n    isAtEndOfInput() {\n        return this.tokenMatcher(this.LA(1), EOF);\n    }\n    reset() {\n        this.resetLexerState();\n        this.subruleIdx = 0;\n        this.isBackTrackingStack = [];\n        this.errors = [];\n        this.RULE_STACK = [];\n        // TODO: extract a specific reset for TreeBuilder trait\n        this.CST_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n    }\n}\n//# sourceMappingURL=recognizer_engine.js.map","import { includes, values } from \"lodash-es\";\nimport { isRecognitionException } from \"../../exceptions_public.js\";\nimport { DEFAULT_RULE_CONFIG, ParserDefinitionErrorType } from \"../parser.js\";\nimport { defaultGrammarValidatorErrorProvider } from \"../../errors_public.js\";\nimport { validateRuleIsOverridden } from \"../../grammar/checks.js\";\nimport { serializeGrammar } from \"@chevrotain/gast\";\n/**\n * This trait is responsible for implementing the public API\n * for defining Chevrotain parsers, i.e:\n * - CONSUME\n * - RULE\n * - OPTION\n * - ...\n */\nexport class RecognizerApi {\n    ACTION(impl) {\n        return impl.call(this);\n    }\n    consume(idx, tokType, options) {\n        return this.consumeInternal(tokType, idx, options);\n    }\n    subrule(idx, ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, idx, options);\n    }\n    option(idx, actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, idx);\n    }\n    or(idx, altsOrOpts) {\n        return this.orInternal(altsOrOpts, idx);\n    }\n    many(idx, actionORMethodDef) {\n        return this.manyInternal(idx, actionORMethodDef);\n    }\n    atLeastOne(idx, actionORMethodDef) {\n        return this.atLeastOneInternal(idx, actionORMethodDef);\n    }\n    CONSUME(tokType, options) {\n        return this.consumeInternal(tokType, 0, options);\n    }\n    CONSUME1(tokType, options) {\n        return this.consumeInternal(tokType, 1, options);\n    }\n    CONSUME2(tokType, options) {\n        return this.consumeInternal(tokType, 2, options);\n    }\n    CONSUME3(tokType, options) {\n        return this.consumeInternal(tokType, 3, options);\n    }\n    CONSUME4(tokType, options) {\n        return this.consumeInternal(tokType, 4, options);\n    }\n    CONSUME5(tokType, options) {\n        return this.consumeInternal(tokType, 5, options);\n    }\n    CONSUME6(tokType, options) {\n        return this.consumeInternal(tokType, 6, options);\n    }\n    CONSUME7(tokType, options) {\n        return this.consumeInternal(tokType, 7, options);\n    }\n    CONSUME8(tokType, options) {\n        return this.consumeInternal(tokType, 8, options);\n    }\n    CONSUME9(tokType, options) {\n        return this.consumeInternal(tokType, 9, options);\n    }\n    SUBRULE(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 0, options);\n    }\n    SUBRULE1(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 1, options);\n    }\n    SUBRULE2(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 2, options);\n    }\n    SUBRULE3(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 3, options);\n    }\n    SUBRULE4(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 4, options);\n    }\n    SUBRULE5(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 5, options);\n    }\n    SUBRULE6(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 6, options);\n    }\n    SUBRULE7(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 7, options);\n    }\n    SUBRULE8(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 8, options);\n    }\n    SUBRULE9(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 9, options);\n    }\n    OPTION(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 0);\n    }\n    OPTION1(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 1);\n    }\n    OPTION2(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 2);\n    }\n    OPTION3(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 3);\n    }\n    OPTION4(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 4);\n    }\n    OPTION5(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 5);\n    }\n    OPTION6(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 6);\n    }\n    OPTION7(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 7);\n    }\n    OPTION8(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 8);\n    }\n    OPTION9(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 9);\n    }\n    OR(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 0);\n    }\n    OR1(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 1);\n    }\n    OR2(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 2);\n    }\n    OR3(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 3);\n    }\n    OR4(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 4);\n    }\n    OR5(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 5);\n    }\n    OR6(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 6);\n    }\n    OR7(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 7);\n    }\n    OR8(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 8);\n    }\n    OR9(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 9);\n    }\n    MANY(actionORMethodDef) {\n        this.manyInternal(0, actionORMethodDef);\n    }\n    MANY1(actionORMethodDef) {\n        this.manyInternal(1, actionORMethodDef);\n    }\n    MANY2(actionORMethodDef) {\n        this.manyInternal(2, actionORMethodDef);\n    }\n    MANY3(actionORMethodDef) {\n        this.manyInternal(3, actionORMethodDef);\n    }\n    MANY4(actionORMethodDef) {\n        this.manyInternal(4, actionORMethodDef);\n    }\n    MANY5(actionORMethodDef) {\n        this.manyInternal(5, actionORMethodDef);\n    }\n    MANY6(actionORMethodDef) {\n        this.manyInternal(6, actionORMethodDef);\n    }\n    MANY7(actionORMethodDef) {\n        this.manyInternal(7, actionORMethodDef);\n    }\n    MANY8(actionORMethodDef) {\n        this.manyInternal(8, actionORMethodDef);\n    }\n    MANY9(actionORMethodDef) {\n        this.manyInternal(9, actionORMethodDef);\n    }\n    MANY_SEP(options) {\n        this.manySepFirstInternal(0, options);\n    }\n    MANY_SEP1(options) {\n        this.manySepFirstInternal(1, options);\n    }\n    MANY_SEP2(options) {\n        this.manySepFirstInternal(2, options);\n    }\n    MANY_SEP3(options) {\n        this.manySepFirstInternal(3, options);\n    }\n    MANY_SEP4(options) {\n        this.manySepFirstInternal(4, options);\n    }\n    MANY_SEP5(options) {\n        this.manySepFirstInternal(5, options);\n    }\n    MANY_SEP6(options) {\n        this.manySepFirstInternal(6, options);\n    }\n    MANY_SEP7(options) {\n        this.manySepFirstInternal(7, options);\n    }\n    MANY_SEP8(options) {\n        this.manySepFirstInternal(8, options);\n    }\n    MANY_SEP9(options) {\n        this.manySepFirstInternal(9, options);\n    }\n    AT_LEAST_ONE(actionORMethodDef) {\n        this.atLeastOneInternal(0, actionORMethodDef);\n    }\n    AT_LEAST_ONE1(actionORMethodDef) {\n        return this.atLeastOneInternal(1, actionORMethodDef);\n    }\n    AT_LEAST_ONE2(actionORMethodDef) {\n        this.atLeastOneInternal(2, actionORMethodDef);\n    }\n    AT_LEAST_ONE3(actionORMethodDef) {\n        this.atLeastOneInternal(3, actionORMethodDef);\n    }\n    AT_LEAST_ONE4(actionORMethodDef) {\n        this.atLeastOneInternal(4, actionORMethodDef);\n    }\n    AT_LEAST_ONE5(actionORMethodDef) {\n        this.atLeastOneInternal(5, actionORMethodDef);\n    }\n    AT_LEAST_ONE6(actionORMethodDef) {\n        this.atLeastOneInternal(6, actionORMethodDef);\n    }\n    AT_LEAST_ONE7(actionORMethodDef) {\n        this.atLeastOneInternal(7, actionORMethodDef);\n    }\n    AT_LEAST_ONE8(actionORMethodDef) {\n        this.atLeastOneInternal(8, actionORMethodDef);\n    }\n    AT_LEAST_ONE9(actionORMethodDef) {\n        this.atLeastOneInternal(9, actionORMethodDef);\n    }\n    AT_LEAST_ONE_SEP(options) {\n        this.atLeastOneSepFirstInternal(0, options);\n    }\n    AT_LEAST_ONE_SEP1(options) {\n        this.atLeastOneSepFirstInternal(1, options);\n    }\n    AT_LEAST_ONE_SEP2(options) {\n        this.atLeastOneSepFirstInternal(2, options);\n    }\n    AT_LEAST_ONE_SEP3(options) {\n        this.atLeastOneSepFirstInternal(3, options);\n    }\n    AT_LEAST_ONE_SEP4(options) {\n        this.atLeastOneSepFirstInternal(4, options);\n    }\n    AT_LEAST_ONE_SEP5(options) {\n        this.atLeastOneSepFirstInternal(5, options);\n    }\n    AT_LEAST_ONE_SEP6(options) {\n        this.atLeastOneSepFirstInternal(6, options);\n    }\n    AT_LEAST_ONE_SEP7(options) {\n        this.atLeastOneSepFirstInternal(7, options);\n    }\n    AT_LEAST_ONE_SEP8(options) {\n        this.atLeastOneSepFirstInternal(8, options);\n    }\n    AT_LEAST_ONE_SEP9(options) {\n        this.atLeastOneSepFirstInternal(9, options);\n    }\n    RULE(name, implementation, config = DEFAULT_RULE_CONFIG) {\n        if (includes(this.definedRulesNames, name)) {\n            const errMsg = defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({\n                topLevelRule: name,\n                grammarName: this.className,\n            });\n            const error = {\n                message: errMsg,\n                type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n                ruleName: name,\n            };\n            this.definitionErrors.push(error);\n        }\n        this.definedRulesNames.push(name);\n        const ruleImplementation = this.defineRule(name, implementation, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    OVERRIDE_RULE(name, impl, config = DEFAULT_RULE_CONFIG) {\n        const ruleErrors = validateRuleIsOverridden(name, this.definedRulesNames, this.className);\n        this.definitionErrors = this.definitionErrors.concat(ruleErrors);\n        const ruleImplementation = this.defineRule(name, impl, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    BACKTRACK(grammarRule, args) {\n        return function () {\n            // save org state\n            this.isBackTrackingStack.push(1);\n            const orgState = this.saveRecogState();\n            try {\n                grammarRule.apply(this, args);\n                // if no exception was thrown we have succeed parsing the rule.\n                return true;\n            }\n            catch (e) {\n                if (isRecognitionException(e)) {\n                    return false;\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                this.reloadRecogState(orgState);\n                this.isBackTrackingStack.pop();\n            }\n        };\n    }\n    // GAST export APIs\n    getGAstProductions() {\n        return this.gastProductionsCache;\n    }\n    getSerializedGastProductions() {\n        return serializeGrammar(values(this.gastProductionsCache));\n    }\n}\n//# sourceMappingURL=recognizer_api.js.map","import { EarlyExitException, isRecognitionException, NoViableAltException, } from \"../../exceptions_public.js\";\nimport { clone, has } from \"lodash-es\";\nimport { getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, } from \"../../grammar/lookahead.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class ErrorHandler {\n    initErrorHandler(config) {\n        this._errors = [];\n        this.errorMessageProvider = has(config, \"errorMessageProvider\")\n            ? config.errorMessageProvider // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.errorMessageProvider;\n    }\n    SAVE_ERROR(error) {\n        if (isRecognitionException(error)) {\n            error.context = {\n                ruleStack: this.getHumanReadableRuleStack(),\n                ruleOccurrenceStack: clone(this.RULE_OCCURRENCE_STACK),\n            };\n            this._errors.push(error);\n            return error;\n        }\n        else {\n            throw Error(\"Trying to save an Error which is not a RecognitionException\");\n        }\n    }\n    get errors() {\n        return clone(this._errors);\n    }\n    set errors(newErrors) {\n        this._errors = newErrors;\n    }\n    // TODO: consider caching the error message computed information\n    raiseEarlyExitException(occurrence, prodType, userDefinedErrMsg) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, this.maxLookahead);\n        const insideProdPaths = lookAheadPathsPerAlternative[0];\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const msg = this.errorMessageProvider.buildEarlyExitMessage({\n            expectedIterationPaths: insideProdPaths,\n            actual: actualTokens,\n            previous: this.LA(0),\n            customUserDescription: userDefinedErrMsg,\n            ruleName: ruleName,\n        });\n        throw this.SAVE_ERROR(new EarlyExitException(msg, this.LA(1), this.LA(0)));\n    }\n    // TODO: consider caching the error message computed information\n    raiseNoAltException(occurrence, errMsgTypes) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOr(occurrence, ruleGrammar, this.maxLookahead);\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const previousToken = this.LA(0);\n        const errMsg = this.errorMessageProvider.buildNoViableAltMessage({\n            expectedPathsPerAlt: lookAheadPathsPerAlternative,\n            actual: actualTokens,\n            previous: previousToken,\n            customUserDescription: errMsgTypes,\n            ruleName: this.getCurrRuleFullName(),\n        });\n        throw this.SAVE_ERROR(new NoViableAltException(errMsg, this.LA(1), previousToken));\n    }\n}\n//# sourceMappingURL=error_handler.js.map","import { NextAfterTokenWalker, nextPossibleTokensAfter, } from \"../../grammar/interpreter.js\";\nimport { first, isUndefined } from \"lodash-es\";\nexport class ContentAssist {\n    initContentAssist() { }\n    computeContentAssist(startRuleName, precedingInput) {\n        const startRuleGast = this.gastProductionsCache[startRuleName];\n        if (isUndefined(startRuleGast)) {\n            throw Error(`Rule ->${startRuleName}<- does not exist in this grammar.`);\n        }\n        return nextPossibleTokensAfter([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n    }\n    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n    // TODO: should this be more explicitly part of the public API?\n    getNextPossibleTokenTypes(grammarPath) {\n        const topRuleName = first(grammarPath.ruleStack);\n        const gastProductions = this.getGAstProductions();\n        const topProduction = gastProductions[topRuleName];\n        const nextPossibleTokenTypes = new NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n        return nextPossibleTokenTypes;\n    }\n}\n//# sourceMappingURL=context_assist.js.map","import { has } from \"lodash-es\";\nimport { timer } from \"@chevrotain/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class PerformanceTracer {\n    initPerformanceTracer(config) {\n        if (has(config, \"traceInitPerf\")) {\n            const userTraceInitPerf = config.traceInitPerf;\n            const traceIsNumber = typeof userTraceInitPerf === \"number\";\n            this.traceInitMaxIdent = traceIsNumber\n                ? userTraceInitPerf\n                : Infinity;\n            this.traceInitPerf = traceIsNumber\n                ? userTraceInitPerf > 0\n                : userTraceInitPerf; // assumes end user provides the correct config value/type\n        }\n        else {\n            this.traceInitMaxIdent = 0;\n            this.traceInitPerf = DEFAULT_PARSER_CONFIG.traceInitPerf;\n        }\n        this.traceInitIndent = -1;\n    }\n    TRACE_INIT(phaseDesc, phaseImpl) {\n        // No need to optimize this using NOOP pattern because\n        // It is not called in a hot spot...\n        if (this.traceInitPerf === true) {\n            this.traceInitIndent++;\n            const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                console.log(`${indent}--> <${phaseDesc}>`);\n            }\n            const { time, value } = timer(phaseImpl);\n            /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n            const traceMethod = time > 10 ? console.warn : console.log;\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n            }\n            this.traceInitIndent--;\n            return value;\n        }\n        else {\n            return phaseImpl();\n        }\n    }\n}\n//# sourceMappingURL=perf_tracer.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nimport filter from \"lodash-es/filter.js\";\nimport { Alternation, NonTerminal, Option, RepetitionMandatory, Repetition, Terminal, RepetitionWithSeparator, RepetitionMandatoryWithSeparator } from \"chevrotain\";\nexport function buildATNKey(rule, type, occurrence) {\n    return `${rule.name}_${type}_${occurrence}`;\n}\nexport const ATN_INVALID_TYPE = 0;\nexport const ATN_BASIC = 1;\nexport const ATN_RULE_START = 2;\nexport const ATN_PLUS_BLOCK_START = 4;\nexport const ATN_STAR_BLOCK_START = 5;\n// Currently unused as the ATN is not used for lexing\nexport const ATN_TOKEN_START = 6;\nexport const ATN_RULE_STOP = 7;\nexport const ATN_BLOCK_END = 8;\nexport const ATN_STAR_LOOP_BACK = 9;\nexport const ATN_STAR_LOOP_ENTRY = 10;\nexport const ATN_PLUS_LOOP_BACK = 11;\nexport const ATN_LOOP_END = 12;\nexport class AbstractTransition {\n    constructor(target) {\n        this.target = target;\n    }\n    isEpsilon() {\n        return false;\n    }\n}\nexport class AtomTransition extends AbstractTransition {\n    constructor(target, tokenType) {\n        super(target);\n        this.tokenType = tokenType;\n    }\n}\nexport class EpsilonTransition extends AbstractTransition {\n    constructor(target) {\n        super(target);\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport class RuleTransition extends AbstractTransition {\n    constructor(ruleStart, rule, followState) {\n        super(ruleStart);\n        this.rule = rule;\n        this.followState = followState;\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport function createATN(rules) {\n    const atn = {\n        decisionMap: {},\n        decisionStates: [],\n        ruleToStartState: new Map(),\n        ruleToStopState: new Map(),\n        states: []\n    };\n    createRuleStartAndStopATNStates(atn, rules);\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const ruleBlock = block(atn, rule, rule);\n        if (ruleBlock === undefined) {\n            continue;\n        }\n        buildRuleHandle(atn, rule, ruleBlock);\n    }\n    return atn;\n}\nfunction createRuleStartAndStopATNStates(atn, rules) {\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const start = newState(atn, rule, undefined, {\n            type: ATN_RULE_START\n        });\n        const stop = newState(atn, rule, undefined, {\n            type: ATN_RULE_STOP\n        });\n        start.stop = stop;\n        atn.ruleToStartState.set(rule, start);\n        atn.ruleToStopState.set(rule, stop);\n    }\n}\nfunction atom(atn, rule, production) {\n    if (production instanceof Terminal) {\n        return tokenRef(atn, rule, production.terminalType, production);\n    }\n    else if (production instanceof NonTerminal) {\n        return ruleRef(atn, rule, production);\n    }\n    else if (production instanceof Alternation) {\n        return alternation(atn, rule, production);\n    }\n    else if (production instanceof Option) {\n        return option(atn, rule, production);\n    }\n    else if (production instanceof Repetition) {\n        return repetition(atn, rule, production);\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return repetitionSep(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return repetitionMandatory(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return repetitionMandatorySep(atn, rule, production);\n    }\n    else {\n        return block(atn, rule, production);\n    }\n}\nfunction repetition(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    return star(atn, rule, repetition, handle);\n}\nfunction repetitionSep(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return star(atn, rule, repetition, handle, sep);\n}\nfunction repetitionMandatory(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    return plus(atn, rule, repetition, handle);\n}\nfunction repetitionMandatorySep(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return plus(atn, rule, repetition, handle, sep);\n}\nfunction alternation(atn, rule, alternation) {\n    const start = newState(atn, rule, alternation, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const alts = map(alternation.definition, (e) => atom(atn, rule, e));\n    const handle = makeAlts(atn, rule, start, alternation, ...alts);\n    return handle;\n}\nfunction option(atn, rule, option) {\n    const start = newState(atn, rule, option, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const handle = makeAlts(atn, rule, start, option, block(atn, rule, option));\n    return optional(atn, rule, option, handle);\n}\nfunction block(atn, rule, block) {\n    const handles = filter(map(block.definition, (e) => atom(atn, rule, e)), (e) => e !== undefined);\n    if (handles.length === 1) {\n        return handles[0];\n    }\n    else if (handles.length === 0) {\n        return undefined;\n    }\n    else {\n        return makeBlock(atn, handles);\n    }\n}\nfunction plus(atn, rule, plus, handle, sep) {\n    const blkStart = handle.left;\n    const blkEnd = handle.right;\n    const loop = newState(atn, rule, plus, {\n        type: ATN_PLUS_LOOP_BACK\n    });\n    defineDecisionState(atn, loop);\n    const end = newState(atn, rule, plus, {\n        type: ATN_LOOP_END\n    });\n    blkStart.loopback = loop;\n    end.loopback = loop;\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionMandatoryWithSeparator' : 'RepetitionMandatory', plus.idx)] = loop;\n    epsilon(blkEnd, loop); // block can see loop back\n    // Depending on whether we have a separator we put the exit transition at index 1 or 0\n    // This influences the chosen option in the lookahead DFA\n    if (sep === undefined) {\n        epsilon(loop, blkStart); // loop back to start\n        epsilon(loop, end); // exit\n    }\n    else {\n        epsilon(loop, end); // exit\n        // loop back to start with separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, blkStart);\n    }\n    return {\n        left: blkStart,\n        right: end\n    };\n}\nfunction star(atn, rule, star, handle, sep) {\n    const start = handle.left;\n    const end = handle.right;\n    const entry = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_ENTRY\n    });\n    defineDecisionState(atn, entry);\n    const loopEnd = newState(atn, rule, star, {\n        type: ATN_LOOP_END\n    });\n    const loop = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_BACK\n    });\n    entry.loopback = loop;\n    loopEnd.loopback = loop;\n    epsilon(entry, start); // loop enter edge (alt 2)\n    epsilon(entry, loopEnd); // bypass loop edge (alt 1)\n    epsilon(end, loop); // block end hits loop back\n    if (sep !== undefined) {\n        epsilon(loop, loopEnd); // end loop\n        // loop back to start of handle using separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, start);\n    }\n    else {\n        epsilon(loop, entry); // loop back to entry/exit decision\n    }\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionWithSeparator' : 'Repetition', star.idx)] = entry;\n    return {\n        left: entry,\n        right: loopEnd\n    };\n}\nfunction optional(atn, rule, optional, handle) {\n    const start = handle.left;\n    const end = handle.right;\n    epsilon(start, end);\n    atn.decisionMap[buildATNKey(rule, 'Option', optional.idx)] = start;\n    return handle;\n}\nfunction defineDecisionState(atn, state) {\n    atn.decisionStates.push(state);\n    state.decision = atn.decisionStates.length - 1;\n    return state.decision;\n}\nfunction makeAlts(atn, rule, start, production, ...alts) {\n    const end = newState(atn, rule, production, {\n        type: ATN_BLOCK_END,\n        start\n    });\n    start.end = end;\n    for (const alt of alts) {\n        if (alt !== undefined) {\n            // hook alts up to decision block\n            epsilon(start, alt.left);\n            epsilon(alt.right, end);\n        }\n        else {\n            epsilon(start, end);\n        }\n    }\n    const handle = {\n        left: start,\n        right: end\n    };\n    atn.decisionMap[buildATNKey(rule, getProdType(production), production.idx)] = start;\n    return handle;\n}\nfunction getProdType(production) {\n    if (production instanceof Alternation) {\n        return 'Alternation';\n    }\n    else if (production instanceof Option) {\n        return 'Option';\n    }\n    else if (production instanceof Repetition) {\n        return 'Repetition';\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return 'RepetitionWithSeparator';\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return 'RepetitionMandatory';\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return 'RepetitionMandatoryWithSeparator';\n    }\n    else {\n        throw new Error('Invalid production type encountered');\n    }\n}\nfunction makeBlock(atn, alts) {\n    const altsLength = alts.length;\n    for (let i = 0; i < altsLength - 1; i++) {\n        const handle = alts[i];\n        let transition;\n        if (handle.left.transitions.length === 1) {\n            transition = handle.left.transitions[0];\n        }\n        const isRuleTransition = transition instanceof RuleTransition;\n        const ruleTransition = transition;\n        const next = alts[i + 1].left;\n        if (handle.left.type === ATN_BASIC &&\n            handle.right.type === ATN_BASIC &&\n            transition !== undefined &&\n            ((isRuleTransition && ruleTransition.followState === handle.right) ||\n                transition.target === handle.right)) {\n            // we can avoid epsilon edge to next element\n            if (isRuleTransition) {\n                ruleTransition.followState = next;\n            }\n            else {\n                transition.target = next;\n            }\n            removeState(atn, handle.right); // we skipped over this state\n        }\n        else {\n            // need epsilon if previous block's right end node is complex\n            epsilon(handle.right, next);\n        }\n    }\n    const first = alts[0];\n    const last = alts[altsLength - 1];\n    return {\n        left: first.left,\n        right: last.right\n    };\n}\nfunction tokenRef(atn, rule, tokenType, production) {\n    const left = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    addTransition(left, new AtomTransition(right, tokenType));\n    return {\n        left,\n        right\n    };\n}\nfunction ruleRef(atn, currentRule, nonTerminal) {\n    const rule = nonTerminal.referencedRule;\n    const start = atn.ruleToStartState.get(rule);\n    const left = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const call = new RuleTransition(start, rule, right);\n    addTransition(left, call);\n    return {\n        left,\n        right\n    };\n}\nfunction buildRuleHandle(atn, rule, block) {\n    const start = atn.ruleToStartState.get(rule);\n    epsilon(start, block.left);\n    const stop = atn.ruleToStopState.get(rule);\n    epsilon(block.right, stop);\n    const handle = {\n        left: start,\n        right: stop\n    };\n    return handle;\n}\nfunction epsilon(a, b) {\n    const transition = new EpsilonTransition(b);\n    addTransition(a, transition);\n}\nfunction newState(atn, rule, production, partial) {\n    const t = Object.assign({ atn,\n        production, epsilonOnlyTransitions: false, rule, transitions: [], nextTokenWithinRule: [], stateNumber: atn.states.length }, partial);\n    atn.states.push(t);\n    return t;\n}\nfunction addTransition(state, transition) {\n    // A single ATN state can only contain epsilon transitions or non-epsilon transitions\n    // Because they are never mixed, only setting the property for the first transition is fine\n    if (state.transitions.length === 0) {\n        state.epsilonOnlyTransitions = transition.isEpsilon();\n    }\n    state.transitions.push(transition);\n}\nfunction removeState(atn, state) {\n    atn.states.splice(atn.states.indexOf(state), 1);\n}\n//# sourceMappingURL=atn.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nexport const DFA_ERROR = {};\nexport class ATNConfigSet {\n    constructor() {\n        this.map = {};\n        this.configs = [];\n    }\n    get size() {\n        return this.configs.length;\n    }\n    finalize() {\n        // Empties the map to free up memory\n        this.map = {};\n    }\n    add(config) {\n        const key = getATNConfigKey(config);\n        // Only add configs which don't exist in our map already\n        // While this does not influence the actual algorithm, adding them anyway would massively increase memory consumption\n        if (!(key in this.map)) {\n            this.map[key] = this.configs.length;\n            this.configs.push(config);\n        }\n    }\n    get elements() {\n        return this.configs;\n    }\n    get alts() {\n        return map(this.configs, (e) => e.alt);\n    }\n    get key() {\n        let value = \"\";\n        for (const k in this.map) {\n            value += k + \":\";\n        }\n        return value;\n    }\n}\nexport function getATNConfigKey(config, alt = true) {\n    return `${alt ? `a${config.alt}` : \"\"}s${config.state.stateNumber}:${config.stack.map((e) => e.stateNumber.toString()).join(\"_\")}`;\n}\n//# sourceMappingURL=dfa.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { tokenMatcher, tokenLabel, NonTerminal, Alternation, Option, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Repetition, Terminal, LLkLookaheadStrategy, getLookaheadPaths } from \"chevrotain\";\nimport { ATN_RULE_STOP, AtomTransition, buildATNKey, createATN, EpsilonTransition, RuleTransition } from \"./atn.js\";\nimport { ATNConfigSet, DFA_ERROR, getATNConfigKey } from \"./dfa.js\";\nimport min from \"lodash-es/min.js\";\nimport flatMap from \"lodash-es/flatMap.js\";\nimport uniqBy from \"lodash-es/uniqBy.js\";\nimport map from \"lodash-es/map.js\";\nimport flatten from \"lodash-es/flatten.js\";\nimport forEach from \"lodash-es/forEach.js\";\nimport isEmpty from \"lodash-es/isEmpty.js\";\nimport reduce from \"lodash-es/reduce.js\";\nfunction createDFACache(startState, decision) {\n    const map = {};\n    return (predicateSet) => {\n        const key = predicateSet.toString();\n        let existing = map[key];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            existing = {\n                atnStartState: startState,\n                decision,\n                states: {}\n            };\n            map[key] = existing;\n            return existing;\n        }\n    };\n}\nclass PredicateSet {\n    constructor() {\n        this.predicates = [];\n    }\n    is(index) {\n        return index >= this.predicates.length || this.predicates[index];\n    }\n    set(index, value) {\n        this.predicates[index] = value;\n    }\n    toString() {\n        let value = \"\";\n        const size = this.predicates.length;\n        for (let i = 0; i < size; i++) {\n            value += this.predicates[i] === true ? \"1\" : \"0\";\n        }\n        return value;\n    }\n}\nconst EMPTY_PREDICATES = new PredicateSet();\nexport class LLStarLookaheadStrategy extends LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        super();\n        this.logging = (_a = options === null || options === void 0 ? void 0 : options.logging) !== null && _a !== void 0 ? _a : ((message) => console.log(message));\n    }\n    initialize(options) {\n        this.atn = createATN(options.rules);\n        this.dfas = initATNSimulator(this.atn);\n    }\n    validateAmbiguousAlternationAlternatives() {\n        return [];\n    }\n    validateEmptyOrAlternatives() {\n        return [];\n    }\n    buildLookaheadForAlternation(options) {\n        const { prodOccurrence, rule, hasPredicates, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, 'Alternation', prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const partialAlts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType: \"Alternation\",\n            rule: rule\n        }), (currAlt) => map(currAlt, (path) => path[0]));\n        if (isLL1Sequence(partialAlts, false) && !dynamicTokensEnabled) {\n            const choiceToAlt = reduce(partialAlts, (result, currAlt, idx) => {\n                forEach(currAlt, (currTokType) => {\n                    if (currTokType) {\n                        result[currTokType.tokenTypeIdx] = idx;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = idx;\n                        });\n                    }\n                });\n                return result;\n            }, {});\n            if (hasPredicates) {\n                return function (orAlts) {\n                    var _a;\n                    const nextToken = this.LA(1);\n                    const prediction = choiceToAlt[nextToken.tokenTypeIdx];\n                    if (orAlts !== undefined && prediction !== undefined) {\n                        const gate = (_a = orAlts[prediction]) === null || _a === void 0 ? void 0 : _a.GATE;\n                        if (gate !== undefined && gate.call(this) === false) {\n                            return undefined;\n                        }\n                    }\n                    return prediction;\n                };\n            }\n            else {\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx];\n                };\n            }\n        }\n        else if (hasPredicates) {\n            return function (orAlts) {\n                const predicates = new PredicateSet();\n                const length = orAlts === undefined ? 0 : orAlts.length;\n                for (let i = 0; i < length; i++) {\n                    const gate = orAlts === null || orAlts === void 0 ? void 0 : orAlts[i].GATE;\n                    predicates.set(i, gate === undefined || gate.call(this));\n                }\n                const result = adaptivePredict.call(this, dfas, decisionIndex, predicates, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n        else {\n            return function () {\n                const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n    }\n    buildLookaheadForOptional(options) {\n        const { prodOccurrence, rule, prodType, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, prodType, prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const alts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType,\n            rule\n        }), (e) => {\n            return map(e, (g) => g[0]);\n        });\n        if (isLL1Sequence(alts) && alts[0][0] && !dynamicTokensEnabled) {\n            const alt = alts[0];\n            const singleTokensTypes = flatten(alt);\n            if (singleTokensTypes.length === 1 &&\n                isEmpty(singleTokensTypes[0].categoryMatches)) {\n                const expectedTokenType = singleTokensTypes[0];\n                const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n                return function () {\n                    return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n                };\n            }\n            else {\n                const choiceToAlt = reduce(singleTokensTypes, (result, currTokType) => {\n                    if (currTokType !== undefined) {\n                        result[currTokType.tokenTypeIdx] = true;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = true;\n                        });\n                    }\n                    return result;\n                }, {});\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx] === true;\n                };\n            }\n        }\n        return function () {\n            const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n            return typeof result === \"object\" ? false : result === 0;\n        };\n    }\n}\nfunction isLL1Sequence(sequences, allowEmpty = true) {\n    const fullSet = new Set();\n    for (const alt of sequences) {\n        const altSet = new Set();\n        for (const tokType of alt) {\n            if (tokType === undefined) {\n                if (allowEmpty) {\n                    // Epsilon production encountered\n                    break;\n                }\n                else {\n                    return false;\n                }\n            }\n            const indices = [tokType.tokenTypeIdx].concat(tokType.categoryMatches);\n            for (const index of indices) {\n                if (fullSet.has(index)) {\n                    if (!altSet.has(index)) {\n                        return false;\n                    }\n                }\n                else {\n                    fullSet.add(index);\n                    altSet.add(index);\n                }\n            }\n        }\n    }\n    return true;\n}\nfunction initATNSimulator(atn) {\n    const decisionLength = atn.decisionStates.length;\n    const decisionToDFA = Array(decisionLength);\n    for (let i = 0; i < decisionLength; i++) {\n        decisionToDFA[i] = createDFACache(atn.decisionStates[i], i);\n    }\n    return decisionToDFA;\n}\nfunction adaptivePredict(dfaCaches, decision, predicateSet, logging) {\n    const dfa = dfaCaches[decision](predicateSet);\n    let start = dfa.start;\n    if (start === undefined) {\n        const closure = computeStartState(dfa.atnStartState);\n        start = addDFAState(dfa, newDFAState(closure));\n        dfa.start = start;\n    }\n    const alt = performLookahead.apply(this, [dfa, start, predicateSet, logging]);\n    return alt;\n}\nfunction performLookahead(dfa, s0, predicateSet, logging) {\n    let previousD = s0;\n    let i = 1;\n    const path = [];\n    let t = this.LA(i++);\n    while (true) {\n        let d = getExistingTargetState(previousD, t);\n        if (d === undefined) {\n            d = computeLookaheadTarget.apply(this, [dfa, previousD, t, i, predicateSet, logging]);\n        }\n        if (d === DFA_ERROR) {\n            return buildAdaptivePredictError(path, previousD, t);\n        }\n        if (d.isAcceptState === true) {\n            return d.prediction;\n        }\n        previousD = d;\n        path.push(t);\n        t = this.LA(i++);\n    }\n}\nfunction computeLookaheadTarget(dfa, previousD, token, lookahead, predicateSet, logging) {\n    const reach = computeReachSet(previousD.configs, token, predicateSet);\n    if (reach.size === 0) {\n        addDFAEdge(dfa, previousD, token, DFA_ERROR);\n        return DFA_ERROR;\n    }\n    let newState = newDFAState(reach);\n    const predictedAlt = getUniqueAlt(reach, predicateSet);\n    if (predictedAlt !== undefined) {\n        newState.isAcceptState = true;\n        newState.prediction = predictedAlt;\n        newState.configs.uniqueAlt = predictedAlt;\n    }\n    else if (hasConflictTerminatingPrediction(reach)) {\n        const prediction = min(reach.alts);\n        newState.isAcceptState = true;\n        newState.prediction = prediction;\n        newState.configs.uniqueAlt = prediction;\n        reportLookaheadAmbiguity.apply(this, [dfa, lookahead, reach.alts, logging]);\n    }\n    newState = addDFAEdge(dfa, previousD, token, newState);\n    return newState;\n}\nfunction reportLookaheadAmbiguity(dfa, lookahead, ambiguityIndices, logging) {\n    const prefixPath = [];\n    for (let i = 1; i <= lookahead; i++) {\n        prefixPath.push(this.LA(i).tokenType);\n    }\n    const atnState = dfa.atnStartState;\n    const topLevelRule = atnState.rule;\n    const production = atnState.production;\n    const message = buildAmbiguityError({\n        topLevelRule,\n        ambiguityIndices,\n        production,\n        prefixPath\n    });\n    logging(message);\n}\nfunction buildAmbiguityError(options) {\n    const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n    const occurrence = options.production.idx === 0 ? \"\" : options.production.idx;\n    let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\", \")}> in <${getProductionDslName(options.production)}${occurrence}>` +\n        ` inside <${options.topLevelRule.name}> Rule,\\n` +\n        `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n    currMessage =\n        currMessage +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n            `For Further details.`;\n    return currMessage;\n}\nfunction getProductionDslName(prod) {\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction buildAdaptivePredictError(path, previous, current) {\n    const nextTransitions = flatMap(previous.configs.elements, (e) => e.state.transitions);\n    const nextTokenTypes = uniqBy(nextTransitions\n        .filter((e) => e instanceof AtomTransition)\n        .map((e) => e.tokenType), (e) => e.tokenTypeIdx);\n    return {\n        actualToken: current,\n        possibleTokenTypes: nextTokenTypes,\n        tokenPath: path\n    };\n}\nfunction getExistingTargetState(state, token) {\n    return state.edges[token.tokenTypeIdx];\n}\nfunction computeReachSet(configs, token, predicateSet) {\n    const intermediate = new ATNConfigSet();\n    const skippedStopStates = [];\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === false) {\n            continue;\n        }\n        if (c.state.type === ATN_RULE_STOP) {\n            skippedStopStates.push(c);\n            continue;\n        }\n        const transitionLength = c.state.transitions.length;\n        for (let i = 0; i < transitionLength; i++) {\n            const transition = c.state.transitions[i];\n            const target = getReachableTarget(transition, token);\n            if (target !== undefined) {\n                intermediate.add({\n                    state: target,\n                    alt: c.alt,\n                    stack: c.stack\n                });\n            }\n        }\n    }\n    let reach;\n    if (skippedStopStates.length === 0 && intermediate.size === 1) {\n        reach = intermediate;\n    }\n    if (reach === undefined) {\n        reach = new ATNConfigSet();\n        for (const c of intermediate.elements) {\n            closure(c, reach);\n        }\n    }\n    if (skippedStopStates.length > 0 && !hasConfigInRuleStopState(reach)) {\n        for (const c of skippedStopStates) {\n            reach.add(c);\n        }\n    }\n    return reach;\n}\nfunction getReachableTarget(transition, token) {\n    if (transition instanceof AtomTransition &&\n        tokenMatcher(token, transition.tokenType)) {\n        return transition.target;\n    }\n    return undefined;\n}\nfunction getUniqueAlt(configs, predicateSet) {\n    let alt;\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === true) {\n            if (alt === undefined) {\n                alt = c.alt;\n            }\n            else if (alt !== c.alt) {\n                return undefined;\n            }\n        }\n    }\n    return alt;\n}\nfunction newDFAState(closure) {\n    return {\n        configs: closure,\n        edges: {},\n        isAcceptState: false,\n        prediction: -1\n    };\n}\nfunction addDFAEdge(dfa, from, token, to) {\n    to = addDFAState(dfa, to);\n    from.edges[token.tokenTypeIdx] = to;\n    return to;\n}\nfunction addDFAState(dfa, state) {\n    if (state === DFA_ERROR) {\n        return state;\n    }\n    // Repetitions have the same config set\n    // Therefore, storing the key of the config in a map allows us to create a loop in our DFA\n    const mapKey = state.configs.key;\n    const existing = dfa.states[mapKey];\n    if (existing !== undefined) {\n        return existing;\n    }\n    state.configs.finalize();\n    dfa.states[mapKey] = state;\n    return state;\n}\nfunction computeStartState(atnState) {\n    const configs = new ATNConfigSet();\n    const numberOfTransitions = atnState.transitions.length;\n    for (let i = 0; i < numberOfTransitions; i++) {\n        const target = atnState.transitions[i].target;\n        const config = {\n            state: target,\n            alt: i,\n            stack: []\n        };\n        closure(config, configs);\n    }\n    return configs;\n}\nfunction closure(config, configs) {\n    const p = config.state;\n    if (p.type === ATN_RULE_STOP) {\n        if (config.stack.length > 0) {\n            const atnStack = [...config.stack];\n            const followState = atnStack.pop();\n            const followConfig = {\n                state: followState,\n                alt: config.alt,\n                stack: atnStack\n            };\n            closure(followConfig, configs);\n        }\n        else {\n            // Dipping into outer context, simply add the config\n            // This will stop computation once every config is at the rule stop state\n            configs.add(config);\n        }\n        return;\n    }\n    if (!p.epsilonOnlyTransitions) {\n        configs.add(config);\n    }\n    const transitionLength = p.transitions.length;\n    for (let i = 0; i < transitionLength; i++) {\n        const transition = p.transitions[i];\n        const c = getEpsilonTarget(config, transition);\n        if (c !== undefined) {\n            closure(c, configs);\n        }\n    }\n}\nfunction getEpsilonTarget(config, transition) {\n    if (transition instanceof EpsilonTransition) {\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack: config.stack\n        };\n    }\n    else if (transition instanceof RuleTransition) {\n        const stack = [...config.stack, transition.followState];\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack\n        };\n    }\n    return undefined;\n}\nfunction hasConfigInRuleStopState(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type === ATN_RULE_STOP) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction allConfigsInRuleStopStates(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type !== ATN_RULE_STOP) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction hasConflictTerminatingPrediction(configs) {\n    if (allConfigsInRuleStopStates(configs)) {\n        return true;\n    }\n    const altSets = getConflictingAltSets(configs.elements);\n    const heuristic = hasConflictingAltSet(altSets) && !hasStateAssociatedWithOneAlt(altSets);\n    return heuristic;\n}\nfunction getConflictingAltSets(configs) {\n    const configToAlts = new Map();\n    for (const c of configs) {\n        const key = getATNConfigKey(c, false);\n        let alts = configToAlts.get(key);\n        if (alts === undefined) {\n            alts = {};\n            configToAlts.set(key, alts);\n        }\n        alts[c.alt] = true;\n    }\n    return configToAlts;\n}\nfunction hasConflictingAltSet(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length > 1) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction hasStateAssociatedWithOneAlt(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length === 1) {\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=all-star-lookahead.js.map","import baseIteratee from './_baseIteratee.js';\nimport baseUniq from './_baseUniq.js';\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nexport default uniqBy;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var DocumentUri;\n(function (DocumentUri) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    DocumentUri.is = is;\n})(DocumentUri || (DocumentUri = {}));\nexport var URI;\n(function (URI) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    URI.is = is;\n})(URI || (URI = {}));\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && integer.MIN_VALUE <= value && value <= integer.MAX_VALUE;\n    }\n    integer.is = is;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && uinteger.MIN_VALUE <= value && value <= uinteger.MAX_VALUE;\n    }\n    uinteger.is = is;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * {@link Position} literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line, character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Position} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * {@link Range} literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`);\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Range} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * {@link Location} literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri, range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Location} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * {@link LocationLink} literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri, targetRange, targetSelectionRange, originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link LocationLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && Range.is(candidate.targetSelectionRange)\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link Color} literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red,\n            green,\n            blue,\n            alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Color} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * {@link ColorInformation} literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range,\n            color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link ColorPresentation} literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label,\n            textEdit,\n            additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * A set of predefined range kinds.\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind.Comment = 'comment';\n    /**\n     * Folding range for an import or include\n     */\n    FoldingRangeKind.Imports = 'imports';\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind.Region = 'region';\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * {@link FoldingRange} literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n        const result = {\n            startLine,\n            endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        if (Is.defined(collapsedText)) {\n            result.collapsedText = collapsedText;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FoldingRange} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * {@link DiagnosticRelatedInformation} literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location,\n            message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DiagnosticRelatedInformation} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * {@link Diagnostic} literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        let result = { range, message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Diagnostic} interface.\n     */\n    function is(value) {\n        var _a;\n        let candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * {@link Command} literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command, ...args) {\n        let result = { title, command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Command} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range, newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates an insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        const result = { label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate);\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument, edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'create',\n            uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        let result = {\n            kind: 'rename',\n            oldUri,\n            newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'delete',\n            uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every((change) => {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nclass TextEditChangeImpl {\n    constructor(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    insert(position, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    replace(range, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    delete(range, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    add(edit) {\n        this.edits.push(edit);\n    }\n    all() {\n        return this.edits;\n    }\n    clear() {\n        this.edits.splice(0, this.edits.length);\n    }\n    assertChangeAnnotations(value) {\n        if (value === undefined) {\n            throw new Error(`Text edit change is not configured to manage change annotations.`);\n        }\n    }\n}\n/**\n * A helper class\n */\nclass ChangeAnnotations {\n    constructor(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    all() {\n        return this._annotations;\n    }\n    get size() {\n        return this._size;\n    }\n    manage(idOrAnnotation, annotation) {\n        let id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(`Id ${id} is already in use.`);\n        }\n        if (annotation === undefined) {\n            throw new Error(`No annotation provided for id ${id}`);\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    }\n    nextId() {\n        this._counter++;\n        return this._counter.toString();\n    }\n}\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nexport class WorkspaceChange {\n    constructor(workspaceEdit) {\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach((change) => {\n                    if (TextDocumentEdit.is(change)) {\n                        const textEditChange = new TextEditChangeImpl(change.edits, this._changeAnnotations);\n                        this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach((key) => {\n                    const textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    /**\n     * Returns the underlying {@link WorkspaceEdit} literal\n     * use to be returned from a workspace edit operation like rename.\n     */\n    get edit() {\n        this.initDocumentChanges();\n        if (this._changeAnnotations !== undefined) {\n            if (this._changeAnnotations.size === 0) {\n                this._workspaceEdit.changeAnnotations = undefined;\n            }\n            else {\n                this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n            }\n        }\n        return this._workspaceEdit;\n    }\n    getTextEditChange(key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            const textDocument = { uri: key.uri, version: key.version };\n            let result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                const edits = [];\n                const textDocumentEdit = {\n                    textDocument,\n                    edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            let result = this._textEditChanges[key];\n            if (!result) {\n                let edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    }\n    initDocumentChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    }\n    initChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    }\n    createFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    renameFile(oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    deleteFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n}\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * {@link TextDocumentIdentifier} literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link VersionedTextDocumentIdentifier} literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link VersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link OptionalVersionedTextDocumentIdentifier} literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link OptionalVersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * {@link TextDocumentItem} literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri, languageId, version, text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentItem} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n    /**\n     * Checks whether the given value is a value of the {@link MarkupKind} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the {@link MarkupContent} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText, insert, replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InsertReplaceEdit} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\nexport var CompletionItemLabelDetails;\n(function (CompletionItemLabelDetails) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (Is.string(candidate.detail) || candidate.detail === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    CompletionItemLabelDetails.is = is;\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the {@link MarkedString} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the {@link Hover} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * {@link ParameterInformation} literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label, documentation } : { label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * {@link SignatureInformation} literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation, ...parameters) {\n        let result = { label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * {@link DocumentHighlight} literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     * @param kind The highlight kind\n     */\n    function create(range, kind) {\n        let result = { range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n *\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        let result = {\n            name,\n            kind,\n            location: { uri, range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var WorkspaceSymbol;\n(function (WorkspaceSymbol) {\n    /**\n     * Create a new workspace symbol.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param uri The resource of the location of the symbol.\n     * @param range An options range of the location.\n     * @returns A WorkspaceSymbol.\n     */\n    function create(name, kind, uri, range) {\n        return range !== undefined\n            ? { name, kind, location: { uri, range } }\n            : { name, kind, location: { uri } };\n    }\n    WorkspaceSymbol.create = create;\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        let result = {\n            name,\n            detail,\n            kind,\n            range,\n            selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentSymbol} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The reason why code actions were requested.\n *\n * @since 3.17.0\n */\nexport var CodeActionTriggerKind;\n(function (CodeActionTriggerKind) {\n    /**\n     * Code actions were explicitly requested by the user or by an extension.\n     */\n    CodeActionTriggerKind.Invoked = 1;\n    /**\n     * Code actions were requested automatically.\n     *\n     * This typically happens when current selection in a file changes, but can\n     * also be triggered when file content changes.\n     */\n    CodeActionTriggerKind.Automatic = 2;\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * {@link CodeActionContext} literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only, triggerKind) {\n        let result = { diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        if (triggerKind !== undefined && triggerKind !== null) {\n            result.triggerKind = triggerKind;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeActionContext} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is)\n            && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string))\n            && (candidate.triggerKind === undefined || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        let result = { title };\n        let checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * {@link CodeLens} literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        let result = { range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeLens} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * {@link FormattingOptions} literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize, insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FormattingOptions} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * {@link DocumentLink} literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range, target, data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range, parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\n/**\n * A set of predefined token types. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenTypes;\n(function (SemanticTokenTypes) {\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\n    /**\n     * Represents a generic type. Acts as a fallback for types which can't be mapped to\n     * a specific type like class or enum.\n     */\n    SemanticTokenTypes[\"type\"] = \"type\";\n    SemanticTokenTypes[\"class\"] = \"class\";\n    SemanticTokenTypes[\"enum\"] = \"enum\";\n    SemanticTokenTypes[\"interface\"] = \"interface\";\n    SemanticTokenTypes[\"struct\"] = \"struct\";\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\n    SemanticTokenTypes[\"variable\"] = \"variable\";\n    SemanticTokenTypes[\"property\"] = \"property\";\n    SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n    SemanticTokenTypes[\"event\"] = \"event\";\n    SemanticTokenTypes[\"function\"] = \"function\";\n    SemanticTokenTypes[\"method\"] = \"method\";\n    SemanticTokenTypes[\"macro\"] = \"macro\";\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\n    SemanticTokenTypes[\"modifier\"] = \"modifier\";\n    SemanticTokenTypes[\"comment\"] = \"comment\";\n    SemanticTokenTypes[\"string\"] = \"string\";\n    SemanticTokenTypes[\"number\"] = \"number\";\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\n    SemanticTokenTypes[\"operator\"] = \"operator\";\n    /**\n     * @since 3.17.0\n     */\n    SemanticTokenTypes[\"decorator\"] = \"decorator\";\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\n/**\n * A set of predefined token modifiers. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenModifiers;\n(function (SemanticTokenModifiers) {\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n    SemanticTokenModifiers[\"static\"] = \"static\";\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n    SemanticTokenModifiers[\"async\"] = \"async\";\n    SemanticTokenModifiers[\"modification\"] = \"modification\";\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n    SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\n/**\n * @since 3.16.0\n */\nexport var SemanticTokens;\n(function (SemanticTokens) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n    }\n    SemanticTokens.is = is;\n})(SemanticTokens || (SemanticTokens = {}));\n/**\n * The InlineValueText namespace provides functions to deal with InlineValueTexts.\n *\n * @since 3.17.0\n */\nexport var InlineValueText;\n(function (InlineValueText) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, text) {\n        return { range, text };\n    }\n    InlineValueText.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n    }\n    InlineValueText.is = is;\n})(InlineValueText || (InlineValueText = {}));\n/**\n * The InlineValueVariableLookup namespace provides functions to deal with InlineValueVariableLookups.\n *\n * @since 3.17.0\n */\nexport var InlineValueVariableLookup;\n(function (InlineValueVariableLookup) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, variableName, caseSensitiveLookup) {\n        return { range, variableName, caseSensitiveLookup };\n    }\n    InlineValueVariableLookup.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup)\n            && (Is.string(candidate.variableName) || candidate.variableName === undefined);\n    }\n    InlineValueVariableLookup.is = is;\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\n/**\n * The InlineValueEvaluatableExpression namespace provides functions to deal with InlineValueEvaluatableExpression.\n *\n * @since 3.17.0\n */\nexport var InlineValueEvaluatableExpression;\n(function (InlineValueEvaluatableExpression) {\n    /**\n     * Creates a new InlineValueEvaluatableExpression literal.\n     */\n    function create(range, expression) {\n        return { range, expression };\n    }\n    InlineValueEvaluatableExpression.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range)\n            && (Is.string(candidate.expression) || candidate.expression === undefined);\n    }\n    InlineValueEvaluatableExpression.is = is;\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\n/**\n * The InlineValueContext namespace provides helper functions to work with\n * {@link InlineValueContext} literals.\n *\n * @since 3.17.0\n */\nexport var InlineValueContext;\n(function (InlineValueContext) {\n    /**\n     * Creates a new InlineValueContext literal.\n     */\n    function create(frameId, stoppedLocation) {\n        return { frameId, stoppedLocation };\n    }\n    InlineValueContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InlineValueContext} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.defined(candidate) && Range.is(value.stoppedLocation);\n    }\n    InlineValueContext.is = is;\n})(InlineValueContext || (InlineValueContext = {}));\n/**\n * Inlay hint kinds.\n *\n * @since 3.17.0\n */\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    /**\n     * An inlay hint that for a type annotation.\n     */\n    InlayHintKind.Type = 1;\n    /**\n     * An inlay hint that is for a parameter.\n     */\n    InlayHintKind.Parameter = 2;\n    function is(value) {\n        return value === 1 || value === 2;\n    }\n    InlayHintKind.is = is;\n})(InlayHintKind || (InlayHintKind = {}));\nexport var InlayHintLabelPart;\n(function (InlayHintLabelPart) {\n    function create(value) {\n        return { value };\n    }\n    InlayHintLabelPart.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.location === undefined || Location.is(candidate.location))\n            && (candidate.command === undefined || Command.is(candidate.command));\n    }\n    InlayHintLabelPart.is = is;\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\nexport var InlayHint;\n(function (InlayHint) {\n    function create(position, label, kind) {\n        const result = { position, label };\n        if (kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    InlayHint.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.position)\n            && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is))\n            && (candidate.kind === undefined || InlayHintKind.is(candidate.kind))\n            && (candidate.textEdits === undefined) || Is.typedArray(candidate.textEdits, TextEdit.is)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.paddingLeft === undefined || Is.boolean(candidate.paddingLeft))\n            && (candidate.paddingRight === undefined || Is.boolean(candidate.paddingRight));\n    }\n    InlayHint.is = is;\n})(InlayHint || (InlayHint = {}));\nexport var StringValue;\n(function (StringValue) {\n    function createSnippet(value) {\n        return { kind: 'snippet', value };\n    }\n    StringValue.createSnippet = createSnippet;\n})(StringValue || (StringValue = {}));\nexport var InlineCompletionItem;\n(function (InlineCompletionItem) {\n    function create(insertText, filterText, range, command) {\n        return { insertText, filterText, range, command };\n    }\n    InlineCompletionItem.create = create;\n})(InlineCompletionItem || (InlineCompletionItem = {}));\nexport var InlineCompletionList;\n(function (InlineCompletionList) {\n    function create(items) {\n        return { items };\n    }\n    InlineCompletionList.create = create;\n})(InlineCompletionList || (InlineCompletionList = {}));\n/**\n * Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n *\n * @since 3.18.0\n * @proposed\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     */\n    InlineCompletionTriggerKind.Invoked = 0;\n    /**\n     * Completion was triggered automatically while editing.\n     */\n    InlineCompletionTriggerKind.Automatic = 1;\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport var SelectedCompletionInfo;\n(function (SelectedCompletionInfo) {\n    function create(range, text) {\n        return { range, text };\n    }\n    SelectedCompletionInfo.create = create;\n})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));\nexport var InlineCompletionContext;\n(function (InlineCompletionContext) {\n    function create(triggerKind, selectedCompletionInfo) {\n        return { triggerKind, selectedCompletionInfo };\n    }\n    InlineCompletionContext.create = create;\n})(InlineCompletionContext || (InlineCompletionContext = {}));\nexport var WorkspaceFolder;\n(function (WorkspaceFolder) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n    }\n    WorkspaceFolder.is = is;\n})(WorkspaceFolder || (WorkspaceFolder = {}));\nexport const EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId The document's language Id.\n     * @param version The document's version.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ITextDocument} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        let text = document.getText();\n        let sortedEdits = mergeSort(edits, (a, b) => {\n            let diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = text.length;\n        for (let i = sortedEdits.length - 1; i >= 0; i--) {\n            let e = sortedEdits[i];\n            let startOffset = document.offsetAt(e.range.start);\n            let endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        const p = (data.length / 2) | 0;\n        const left = data.slice(0, p);\n        const right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        let leftIdx = 0;\n        let rightIdx = 0;\n        let i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            let ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            let start = this.offsetAt(range.start);\n            let end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            let lineOffsets = [];\n            let text = this._content;\n            let isLineStart = true;\n            for (let i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                let ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        let lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            let mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        let line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    }\n    offsetAt(position) {\n        let lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        let lineOffset = lineOffsets[position.line];\n        let nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n}\nvar Is;\n(function (Is) {\n    const toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position } from 'vscode-languageserver-types';\nimport { isCompositeCstNode } from '../syntax-tree.js';\nimport { tokenToRange } from '../utils/cst-utils.js';\nexport class CstNodeBuilder {\n    constructor() {\n        this.nodeStack = [];\n    }\n    get current() {\n        return this.nodeStack[this.nodeStack.length - 1];\n    }\n    buildRootNode(input) {\n        this.rootNode = new RootCstNodeImpl(input);\n        this.rootNode.root = this.rootNode;\n        this.nodeStack = [this.rootNode];\n        return this.rootNode;\n    }\n    buildCompositeNode(feature) {\n        const compositeNode = new CompositeCstNodeImpl();\n        compositeNode.grammarSource = feature;\n        compositeNode.root = this.rootNode;\n        this.current.content.push(compositeNode);\n        this.nodeStack.push(compositeNode);\n        return compositeNode;\n    }\n    buildLeafNode(token, feature) {\n        const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, false);\n        leafNode.grammarSource = feature;\n        leafNode.root = this.rootNode;\n        this.current.content.push(leafNode);\n        return leafNode;\n    }\n    removeNode(node) {\n        const parent = node.container;\n        if (parent) {\n            const index = parent.content.indexOf(node);\n            if (index >= 0) {\n                parent.content.splice(index, 1);\n            }\n        }\n    }\n    construct(item) {\n        const current = this.current;\n        // The specified item could be a datatype ($type is symbol) or a fragment ($type is undefined)\n        // Only if the $type is a string, we actually assign the element\n        if (typeof item.$type === 'string') {\n            this.current.astNode = item;\n        }\n        item.$cstNode = current;\n        const node = this.nodeStack.pop();\n        // Empty composite nodes are not valid\n        // Simply remove the node from the tree\n        if ((node === null || node === void 0 ? void 0 : node.content.length) === 0) {\n            this.removeNode(node);\n        }\n    }\n    addHiddenTokens(hiddenTokens) {\n        for (const token of hiddenTokens) {\n            const hiddenNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, true);\n            hiddenNode.root = this.rootNode;\n            this.addHiddenToken(this.rootNode, hiddenNode);\n        }\n    }\n    addHiddenToken(node, token) {\n        const { offset: tokenStart, end: tokenEnd } = token;\n        for (let i = 0; i < node.content.length; i++) {\n            const child = node.content[i];\n            const { offset: childStart, end: childEnd } = child;\n            if (isCompositeCstNode(child) && tokenStart > childStart && tokenEnd < childEnd) {\n                this.addHiddenToken(child, token);\n                return;\n            }\n            else if (tokenEnd <= childStart) {\n                node.content.splice(i, 0, token);\n                return;\n            }\n        }\n        // We know that we haven't found a suited position for the token\n        // So we simply add it to the end of the current node\n        node.content.push(token);\n    }\n}\nexport class AbstractCstNode {\n    /** @deprecated use `container` instead. */\n    get parent() {\n        return this.container;\n    }\n    /** @deprecated use `grammarSource` instead. */\n    get feature() {\n        return this.grammarSource;\n    }\n    get hidden() {\n        return false;\n    }\n    get astNode() {\n        var _a, _b;\n        const node = typeof ((_a = this._astNode) === null || _a === void 0 ? void 0 : _a.$type) === 'string' ? this._astNode : (_b = this.container) === null || _b === void 0 ? void 0 : _b.astNode;\n        if (!node) {\n            throw new Error('This node has no associated AST element');\n        }\n        return node;\n    }\n    set astNode(value) {\n        this._astNode = value;\n    }\n    /** @deprecated use `astNode` instead. */\n    get element() {\n        return this.astNode;\n    }\n    get text() {\n        return this.root.fullText.substring(this.offset, this.end);\n    }\n}\nexport class LeafCstNodeImpl extends AbstractCstNode {\n    get offset() {\n        return this._offset;\n    }\n    get length() {\n        return this._length;\n    }\n    get end() {\n        return this._offset + this._length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    get tokenType() {\n        return this._tokenType;\n    }\n    get range() {\n        return this._range;\n    }\n    constructor(offset, length, range, tokenType, hidden = false) {\n        super();\n        this._hidden = hidden;\n        this._offset = offset;\n        this._tokenType = tokenType;\n        this._length = length;\n        this._range = range;\n    }\n}\nexport class CompositeCstNodeImpl extends AbstractCstNode {\n    constructor() {\n        super(...arguments);\n        this.content = new CstNodeContainer(this);\n    }\n    /** @deprecated use `content` instead. */\n    get children() {\n        return this.content;\n    }\n    get offset() {\n        var _a, _b;\n        return (_b = (_a = this.firstNonHiddenNode) === null || _a === void 0 ? void 0 : _a.offset) !== null && _b !== void 0 ? _b : 0;\n    }\n    get length() {\n        return this.end - this.offset;\n    }\n    get end() {\n        var _a, _b;\n        return (_b = (_a = this.lastNonHiddenNode) === null || _a === void 0 ? void 0 : _a.end) !== null && _b !== void 0 ? _b : 0;\n    }\n    get range() {\n        const firstNode = this.firstNonHiddenNode;\n        const lastNode = this.lastNonHiddenNode;\n        if (firstNode && lastNode) {\n            if (this._rangeCache === undefined) {\n                const { range: firstRange } = firstNode;\n                const { range: lastRange } = lastNode;\n                this._rangeCache = { start: firstRange.start, end: lastRange.end.line < firstRange.start.line ? firstRange.start : lastRange.end };\n            }\n            return this._rangeCache;\n        }\n        else {\n            return { start: Position.create(0, 0), end: Position.create(0, 0) };\n        }\n    }\n    get firstNonHiddenNode() {\n        for (const child of this.content) {\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[0];\n    }\n    get lastNonHiddenNode() {\n        for (let i = this.content.length - 1; i >= 0; i--) {\n            const child = this.content[i];\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[this.content.length - 1];\n    }\n}\nclass CstNodeContainer extends Array {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        Object.setPrototypeOf(this, CstNodeContainer.prototype);\n    }\n    push(...items) {\n        this.addParents(items);\n        return super.push(...items);\n    }\n    unshift(...items) {\n        this.addParents(items);\n        return super.unshift(...items);\n    }\n    splice(start, count, ...items) {\n        this.addParents(items);\n        return super.splice(start, count, ...items);\n    }\n    addParents(items) {\n        for (const item of items) {\n            item.container = this.parent;\n        }\n    }\n}\nexport class RootCstNodeImpl extends CompositeCstNodeImpl {\n    get text() {\n        return this._text.substring(this.offset, this.end);\n    }\n    get fullText() {\n        return this._text;\n    }\n    constructor(input) {\n        super();\n        this._text = '';\n        this._text = input !== null && input !== void 0 ? input : '';\n    }\n}\n//# sourceMappingURL=cst-node-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { defaultParserErrorProvider, EmbeddedActionsParser, LLkLookaheadStrategy } from 'chevrotain';\nimport { LLStarLookaheadStrategy } from 'chevrotain-allstar';\nimport { isAssignment, isCrossReference, isKeyword } from '../languages/generated/ast.js';\nimport { getTypeName, isDataTypeRule } from '../utils/grammar-utils.js';\nimport { assignMandatoryProperties, getContainerOfType, linkContentToContainer } from '../utils/ast-utils.js';\nimport { CstNodeBuilder } from './cst-node-builder.js';\nexport const DatatypeSymbol = Symbol('Datatype');\nfunction isDataTypeNode(node) {\n    return node.$type === DatatypeSymbol;\n}\nconst ruleSuffix = '\\u200B';\nconst withRuleSuffix = (name) => name.endsWith(ruleSuffix) ? name : name + ruleSuffix;\nexport class AbstractLangiumParser {\n    constructor(services) {\n        this._unorderedGroups = new Map();\n        this.lexer = services.parser.Lexer;\n        const tokens = this.lexer.definition;\n        this.wrapper = new ChevrotainWrapper(tokens, Object.assign(Object.assign({}, services.parser.ParserConfig), { errorMessageProvider: services.parser.ParserErrorMessageProvider }));\n    }\n    alternatives(idx, choices) {\n        this.wrapper.wrapOr(idx, choices);\n    }\n    optional(idx, callback) {\n        this.wrapper.wrapOption(idx, callback);\n    }\n    many(idx, callback) {\n        this.wrapper.wrapMany(idx, callback);\n    }\n    atLeastOne(idx, callback) {\n        this.wrapper.wrapAtLeastOne(idx, callback);\n    }\n    isRecording() {\n        return this.wrapper.IS_RECORDING;\n    }\n    get unorderedGroups() {\n        return this._unorderedGroups;\n    }\n    getRuleStack() {\n        return this.wrapper.RULE_STACK;\n    }\n    finalize() {\n        this.wrapper.wrapSelfAnalysis();\n    }\n}\nexport class LangiumParser extends AbstractLangiumParser {\n    get current() {\n        return this.stack[this.stack.length - 1];\n    }\n    constructor(services) {\n        super(services);\n        this.nodeBuilder = new CstNodeBuilder();\n        this.stack = [];\n        this.assignmentMap = new Map();\n        this.linker = services.references.Linker;\n        this.converter = services.parser.ValueConverter;\n        this.astReflection = services.shared.AstReflection;\n    }\n    rule(rule, impl) {\n        const type = rule.fragment ? undefined : isDataTypeRule(rule) ? DatatypeSymbol : getTypeName(rule);\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(type, impl).bind(this));\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    parse(input) {\n        this.nodeBuilder.buildRootNode(input);\n        const lexerResult = this.lexer.tokenize(input);\n        this.wrapper.input = lexerResult.tokens;\n        const result = this.mainRule.call(this.wrapper, {});\n        this.nodeBuilder.addHiddenTokens(lexerResult.hidden);\n        this.unorderedGroups.clear();\n        return {\n            value: result,\n            lexerErrors: lexerResult.errors,\n            parserErrors: this.wrapper.errors\n        };\n    }\n    startImplementation($type, implementation) {\n        return (args) => {\n            if (!this.isRecording()) {\n                const node = { $type };\n                this.stack.push(node);\n                if ($type === DatatypeSymbol) {\n                    node.value = '';\n                }\n            }\n            let result;\n            try {\n                result = implementation(args);\n            }\n            catch (err) {\n                result = undefined;\n            }\n            if (!this.isRecording() && result === undefined) {\n                result = this.construct();\n            }\n            return result;\n        };\n    }\n    consume(idx, tokenType, feature) {\n        const token = this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording() && this.isValidToken(token)) {\n            const leafNode = this.nodeBuilder.buildLeafNode(token, feature);\n            const { assignment, isCrossRef } = this.getAssignment(feature);\n            const current = this.current;\n            if (assignment) {\n                const convertedValue = isKeyword(feature) ? token.image : this.converter.convert(token.image, leafNode);\n                this.assign(assignment.operator, assignment.feature, convertedValue, leafNode, isCrossRef);\n            }\n            else if (isDataTypeNode(current)) {\n                let text = token.image;\n                if (!isKeyword(feature)) {\n                    text = this.converter.convert(text, leafNode).toString();\n                }\n                current.value += text;\n            }\n        }\n    }\n    /**\n     * Most consumed parser tokens are valid. However there are two cases in which they are not valid:\n     *\n     * 1. They were inserted during error recovery by the parser. These tokens don't really exist and should not be further processed\n     * 2. They contain invalid token ranges. This might include the special EOF token, or other tokens produced by invalid token builders.\n     */\n    isValidToken(token) {\n        return !token.isInsertedInRecovery && !isNaN(token.startOffset) && typeof token.endOffset === 'number' && !isNaN(token.endOffset);\n    }\n    subrule(idx, rule, feature, args) {\n        let cstNode;\n        if (!this.isRecording()) {\n            cstNode = this.nodeBuilder.buildCompositeNode(feature);\n        }\n        const subruleResult = this.wrapper.wrapSubrule(idx, rule, args);\n        if (!this.isRecording() && cstNode && cstNode.length > 0) {\n            this.performSubruleAssignment(subruleResult, feature, cstNode);\n        }\n    }\n    performSubruleAssignment(result, feature, cstNode) {\n        const { assignment, isCrossRef } = this.getAssignment(feature);\n        if (assignment) {\n            this.assign(assignment.operator, assignment.feature, result, cstNode, isCrossRef);\n        }\n        else if (!assignment) {\n            // If we call a subrule without an assignment we either:\n            // 1. append the result of the subrule (data type rule)\n            // 2. override the current object with the newly parsed object\n            // If the current element is an AST node and the result of the subrule\n            // is a data type rule, we can safely discard the results.\n            const current = this.current;\n            if (isDataTypeNode(current)) {\n                current.value += result.toString();\n            }\n            else if (typeof result === 'object' && result) {\n                const resultKind = result.$type;\n                const object = this.assignWithoutOverride(result, current);\n                if (resultKind) {\n                    object.$type = resultKind;\n                }\n                const newItem = object;\n                this.stack.pop();\n                this.stack.push(newItem);\n            }\n        }\n    }\n    action($type, action) {\n        if (!this.isRecording()) {\n            let last = this.current;\n            // This branch is used for left recursive grammar rules.\n            // Those don't call `construct` before another action.\n            // Therefore, we need to call it here.\n            if (!last.$cstNode && action.feature && action.operator) {\n                last = this.construct(false);\n                const feature = last.$cstNode.feature;\n                this.nodeBuilder.buildCompositeNode(feature);\n            }\n            const newItem = { $type };\n            this.stack.pop();\n            this.stack.push(newItem);\n            if (action.feature && action.operator) {\n                this.assign(action.operator, action.feature, last, last.$cstNode, false);\n            }\n        }\n    }\n    construct(pop = true) {\n        if (this.isRecording()) {\n            return undefined;\n        }\n        const obj = this.current;\n        linkContentToContainer(obj);\n        this.nodeBuilder.construct(obj);\n        if (pop) {\n            this.stack.pop();\n        }\n        if (isDataTypeNode(obj)) {\n            return this.converter.convert(obj.value, obj.$cstNode);\n        }\n        else {\n            assignMandatoryProperties(this.astReflection, obj);\n        }\n        return obj;\n    }\n    getAssignment(feature) {\n        if (!this.assignmentMap.has(feature)) {\n            const assignment = getContainerOfType(feature, isAssignment);\n            this.assignmentMap.set(feature, {\n                assignment: assignment,\n                isCrossRef: assignment ? isCrossReference(assignment.terminal) : false\n            });\n        }\n        return this.assignmentMap.get(feature);\n    }\n    assign(operator, feature, value, cstNode, isCrossRef) {\n        const obj = this.current;\n        let item;\n        if (isCrossRef && typeof value === 'string') {\n            item = this.linker.buildReference(obj, feature, cstNode, value);\n        }\n        else {\n            item = value;\n        }\n        switch (operator) {\n            case '=': {\n                obj[feature] = item;\n                break;\n            }\n            case '?=': {\n                obj[feature] = true;\n                break;\n            }\n            case '+=': {\n                if (!Array.isArray(obj[feature])) {\n                    obj[feature] = [];\n                }\n                obj[feature].push(item);\n            }\n        }\n    }\n    assignWithoutOverride(target, source) {\n        for (const [name, existingValue] of Object.entries(source)) {\n            const newValue = target[name];\n            if (newValue === undefined) {\n                target[name] = existingValue;\n            }\n            else if (Array.isArray(newValue) && Array.isArray(existingValue)) {\n                existingValue.push(...newValue);\n                target[name] = existingValue;\n            }\n        }\n        return target;\n    }\n    get definitionErrors() {\n        return this.wrapper.definitionErrors;\n    }\n}\nexport class AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage(options) {\n        return defaultParserErrorProvider.buildMismatchTokenMessage(options);\n    }\n    buildNotAllInputParsedMessage(options) {\n        return defaultParserErrorProvider.buildNotAllInputParsedMessage(options);\n    }\n    buildNoViableAltMessage(options) {\n        return defaultParserErrorProvider.buildNoViableAltMessage(options);\n    }\n    buildEarlyExitMessage(options) {\n        return defaultParserErrorProvider.buildEarlyExitMessage(options);\n    }\n}\nexport class LangiumParserErrorMessageProvider extends AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage({ expected, actual }) {\n        const expectedMsg = expected.LABEL\n            ? '`' + expected.LABEL + '`'\n            : expected.name.endsWith(':KW')\n                ? `keyword '${expected.name.substring(0, expected.name.length - 3)}'`\n                : `token of type '${expected.name}'`;\n        return `Expecting ${expectedMsg} but found \\`${actual.image}\\`.`;\n    }\n    buildNotAllInputParsedMessage({ firstRedundant }) {\n        return `Expecting end of file but found \\`${firstRedundant.image}\\`.`;\n    }\n}\nexport class LangiumCompletionParser extends AbstractLangiumParser {\n    constructor() {\n        super(...arguments);\n        this.tokens = [];\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    action() {\n        // NOOP\n    }\n    construct() {\n        // NOOP\n        return undefined;\n    }\n    parse(input) {\n        this.resetState();\n        const tokens = this.lexer.tokenize(input);\n        this.tokens = tokens.tokens;\n        this.wrapper.input = [...this.tokens];\n        this.mainRule.call(this.wrapper, {});\n        this.unorderedGroups.clear();\n        return {\n            tokens: this.tokens,\n            elementStack: [...this.lastElementStack],\n            tokenIndex: this.nextTokenIndex\n        };\n    }\n    rule(rule, impl) {\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(impl).bind(this));\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    resetState() {\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    startImplementation(implementation) {\n        return (args) => {\n            const size = this.keepStackSize();\n            try {\n                implementation(args);\n            }\n            finally {\n                this.resetStackSize(size);\n            }\n        };\n    }\n    removeUnexpectedElements() {\n        this.elementStack.splice(this.stackSize);\n    }\n    keepStackSize() {\n        const size = this.elementStack.length;\n        this.stackSize = size;\n        return size;\n    }\n    resetStackSize(size) {\n        this.removeUnexpectedElements();\n        this.stackSize = size;\n    }\n    consume(idx, tokenType, feature) {\n        this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording()) {\n            this.lastElementStack = [...this.elementStack, feature];\n            this.nextTokenIndex = this.currIdx + 1;\n        }\n    }\n    subrule(idx, rule, feature, args) {\n        this.before(feature);\n        this.wrapper.wrapSubrule(idx, rule, args);\n        this.after(feature);\n    }\n    before(element) {\n        if (!this.isRecording()) {\n            this.elementStack.push(element);\n        }\n    }\n    after(element) {\n        if (!this.isRecording()) {\n            const index = this.elementStack.lastIndexOf(element);\n            if (index >= 0) {\n                this.elementStack.splice(index);\n            }\n        }\n    }\n    get currIdx() {\n        return this.wrapper.currIdx;\n    }\n}\nconst defaultConfig = {\n    recoveryEnabled: true,\n    nodeLocationTracking: 'full',\n    skipValidations: true,\n    errorMessageProvider: new LangiumParserErrorMessageProvider()\n};\n/**\n * This class wraps the embedded actions parser of chevrotain and exposes protected methods.\n * This way, we can build the `LangiumParser` as a composition.\n */\nclass ChevrotainWrapper extends EmbeddedActionsParser {\n    constructor(tokens, config) {\n        const useDefaultLookahead = config && 'maxLookahead' in config;\n        super(tokens, Object.assign(Object.assign(Object.assign({}, defaultConfig), { lookaheadStrategy: useDefaultLookahead\n                ? new LLkLookaheadStrategy({ maxLookahead: config.maxLookahead })\n                : new LLStarLookaheadStrategy() }), config));\n    }\n    get IS_RECORDING() {\n        return this.RECORDING_PHASE;\n    }\n    DEFINE_RULE(name, impl) {\n        return this.RULE(name, impl);\n    }\n    wrapSelfAnalysis() {\n        this.performSelfAnalysis();\n    }\n    wrapConsume(idx, tokenType) {\n        return this.consume(idx, tokenType);\n    }\n    wrapSubrule(idx, rule, args) {\n        return this.subrule(idx, rule, {\n            ARGS: [args]\n        });\n    }\n    wrapOr(idx, choices) {\n        this.or(idx, choices);\n    }\n    wrapOption(idx, callback) {\n        this.option(idx, callback);\n    }\n    wrapMany(idx, callback) {\n        this.many(idx, callback);\n    }\n    wrapAtLeastOne(idx, callback) {\n        this.atLeastOne(idx, callback);\n    }\n}\n//# sourceMappingURL=langium-parser.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_ALT, EOF } from 'chevrotain';\nimport { isAction, isAlternatives, isEndOfFile, isAssignment, isConjunction, isCrossReference, isDisjunction, isGroup, isKeyword, isNegation, isParameterReference, isParserRule, isRuleCall, isTerminalRule, isUnorderedGroup, isBooleanLiteral } from '../languages/generated/ast.js';\nimport { assertUnreachable, ErrorWithLocation } from '../utils/errors.js';\nimport { stream } from '../utils/stream.js';\nimport { findNameAssignment, getAllReachableRules, getTypeName } from '../utils/grammar-utils.js';\nexport function createParser(grammar, parser, tokens) {\n    const rules = new Map();\n    const parserContext = {\n        parser,\n        tokens,\n        rules,\n        ruleNames: new Map()\n    };\n    buildRules(parserContext, grammar);\n    return parser;\n}\nfunction buildRules(parserContext, grammar) {\n    const reachable = getAllReachableRules(grammar, false);\n    const parserRules = stream(grammar.rules).filter(isParserRule).filter(rule => reachable.has(rule));\n    for (const rule of parserRules) {\n        const ctx = Object.assign(Object.assign({}, parserContext), { consume: 1, optional: 1, subrule: 1, many: 1, or: 1 });\n        ctx.rules.set(rule.name, parserContext.parser.rule(rule, buildElement(ctx, rule.definition)));\n    }\n}\nfunction buildElement(ctx, element, ignoreGuard = false) {\n    let method;\n    if (isKeyword(element)) {\n        method = buildKeyword(ctx, element);\n    }\n    else if (isAction(element)) {\n        method = buildAction(ctx, element);\n    }\n    else if (isAssignment(element)) {\n        method = buildElement(ctx, element.terminal);\n    }\n    else if (isCrossReference(element)) {\n        method = buildCrossReference(ctx, element);\n    }\n    else if (isRuleCall(element)) {\n        method = buildRuleCall(ctx, element);\n    }\n    else if (isAlternatives(element)) {\n        method = buildAlternatives(ctx, element);\n    }\n    else if (isUnorderedGroup(element)) {\n        method = buildUnorderedGroup(ctx, element);\n    }\n    else if (isGroup(element)) {\n        method = buildGroup(ctx, element);\n    }\n    else if (isEndOfFile(element)) {\n        const idx = ctx.consume++;\n        method = () => ctx.parser.consume(idx, EOF, element);\n    }\n    else {\n        throw new ErrorWithLocation(element.$cstNode, `Unexpected element type: ${element.$type}`);\n    }\n    return wrap(ctx, ignoreGuard ? undefined : getGuardCondition(element), method, element.cardinality);\n}\nfunction buildAction(ctx, action) {\n    const actionType = getTypeName(action);\n    return () => ctx.parser.action(actionType, action);\n}\nfunction buildRuleCall(ctx, ruleCall) {\n    const rule = ruleCall.rule.ref;\n    if (isParserRule(rule)) {\n        const idx = ctx.subrule++;\n        const predicate = ruleCall.arguments.length > 0 ? buildRuleCallPredicate(rule, ruleCall.arguments) : () => ({});\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), ruleCall, predicate(args));\n    }\n    else if (isTerminalRule(rule)) {\n        const idx = ctx.consume++;\n        const method = getToken(ctx, rule.name);\n        return () => ctx.parser.consume(idx, method, ruleCall);\n    }\n    else if (!rule) {\n        throw new ErrorWithLocation(ruleCall.$cstNode, `Undefined rule type: ${ruleCall.$type}`);\n    }\n    else {\n        assertUnreachable(rule);\n    }\n}\nfunction buildRuleCallPredicate(rule, namedArgs) {\n    const predicates = namedArgs.map(e => buildPredicate(e.value));\n    return (args) => {\n        const ruleArgs = {};\n        for (let i = 0; i < predicates.length; i++) {\n            const ruleTarget = rule.parameters[i];\n            const predicate = predicates[i];\n            ruleArgs[ruleTarget.name] = predicate(args);\n        }\n        return ruleArgs;\n    };\n}\nfunction buildPredicate(condition) {\n    if (isDisjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) || right(args));\n    }\n    else if (isConjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) && right(args));\n    }\n    else if (isNegation(condition)) {\n        const value = buildPredicate(condition.value);\n        return (args) => !value(args);\n    }\n    else if (isParameterReference(condition)) {\n        const name = condition.parameter.ref.name;\n        return (args) => args !== undefined && args[name] === true;\n    }\n    else if (isBooleanLiteral(condition)) {\n        const value = Boolean(condition.true);\n        return () => value;\n    }\n    assertUnreachable(condition);\n}\nfunction buildAlternatives(ctx, alternatives) {\n    if (alternatives.elements.length === 1) {\n        return buildElement(ctx, alternatives.elements[0]);\n    }\n    else {\n        const methods = [];\n        for (const element of alternatives.elements) {\n            const predicatedMethod = {\n                // Since we handle the guard condition in the alternative already\n                // We can ignore the group guard condition inside\n                ALT: buildElement(ctx, element, true)\n            };\n            const guard = getGuardCondition(element);\n            if (guard) {\n                predicatedMethod.GATE = buildPredicate(guard);\n            }\n            methods.push(predicatedMethod);\n        }\n        const idx = ctx.or++;\n        return (args) => ctx.parser.alternatives(idx, methods.map(method => {\n            const alt = {\n                ALT: () => method.ALT(args)\n            };\n            const gate = method.GATE;\n            if (gate) {\n                alt.GATE = () => gate(args);\n            }\n            return alt;\n        }));\n    }\n}\nfunction buildUnorderedGroup(ctx, group) {\n    if (group.elements.length === 1) {\n        return buildElement(ctx, group.elements[0]);\n    }\n    const methods = [];\n    for (const element of group.elements) {\n        const predicatedMethod = {\n            // Since we handle the guard condition in the alternative already\n            // We can ignore the group guard condition inside\n            ALT: buildElement(ctx, element, true)\n        };\n        const guard = getGuardCondition(element);\n        if (guard) {\n            predicatedMethod.GATE = buildPredicate(guard);\n        }\n        methods.push(predicatedMethod);\n    }\n    const orIdx = ctx.or++;\n    const idFunc = (groupIdx, lParser) => {\n        const stackId = lParser.getRuleStack().join('-');\n        return `uGroup_${groupIdx}_${stackId}`;\n    };\n    const alternatives = (args) => ctx.parser.alternatives(orIdx, methods.map((method, idx) => {\n        const alt = { ALT: () => true };\n        const parser = ctx.parser;\n        alt.ALT = () => {\n            method.ALT(args);\n            if (!parser.isRecording()) {\n                const key = idFunc(orIdx, parser);\n                if (!parser.unorderedGroups.get(key)) {\n                    // init after clear state\n                    parser.unorderedGroups.set(key, []);\n                }\n                const groupState = parser.unorderedGroups.get(key);\n                if (typeof (groupState === null || groupState === void 0 ? void 0 : groupState[idx]) === 'undefined') {\n                    // Not accessed yet\n                    groupState[idx] = true;\n                }\n            }\n        };\n        const gate = method.GATE;\n        if (gate) {\n            alt.GATE = () => gate(args);\n        }\n        else {\n            alt.GATE = () => {\n                const trackedAlternatives = parser.unorderedGroups.get(idFunc(orIdx, parser));\n                const allow = !(trackedAlternatives === null || trackedAlternatives === void 0 ? void 0 : trackedAlternatives[idx]);\n                return allow;\n            };\n        }\n        return alt;\n    }));\n    const wrapped = wrap(ctx, getGuardCondition(group), alternatives, '*');\n    return (args) => {\n        wrapped(args);\n        if (!ctx.parser.isRecording()) {\n            ctx.parser.unorderedGroups.delete(idFunc(orIdx, ctx.parser));\n        }\n    };\n}\nfunction buildGroup(ctx, group) {\n    const methods = group.elements.map(e => buildElement(ctx, e));\n    return (args) => methods.forEach(method => method(args));\n}\nfunction getGuardCondition(element) {\n    if (isGroup(element)) {\n        return element.guardCondition;\n    }\n    return undefined;\n}\nfunction buildCrossReference(ctx, crossRef, terminal = crossRef.terminal) {\n    if (!terminal) {\n        if (!crossRef.type.ref) {\n            throw new Error('Could not resolve reference to type: ' + crossRef.type.$refText);\n        }\n        const assignment = findNameAssignment(crossRef.type.ref);\n        const assignTerminal = assignment === null || assignment === void 0 ? void 0 : assignment.terminal;\n        if (!assignTerminal) {\n            throw new Error('Could not find name assignment for type: ' + getTypeName(crossRef.type.ref));\n        }\n        return buildCrossReference(ctx, crossRef, assignTerminal);\n    }\n    else if (isRuleCall(terminal) && isParserRule(terminal.rule.ref)) {\n        const idx = ctx.subrule++;\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, terminal.rule.ref), crossRef, args);\n    }\n    else if (isRuleCall(terminal) && isTerminalRule(terminal.rule.ref)) {\n        const idx = ctx.consume++;\n        const terminalRule = getToken(ctx, terminal.rule.ref.name);\n        return () => ctx.parser.consume(idx, terminalRule, crossRef);\n    }\n    else if (isKeyword(terminal)) {\n        const idx = ctx.consume++;\n        const keyword = getToken(ctx, terminal.value);\n        return () => ctx.parser.consume(idx, keyword, crossRef);\n    }\n    else {\n        throw new Error('Could not build cross reference parser');\n    }\n}\nfunction buildKeyword(ctx, keyword) {\n    const idx = ctx.consume++;\n    const token = ctx.tokens[keyword.value];\n    if (!token) {\n        throw new Error('Could not find token for keyword: ' + keyword.value);\n    }\n    return () => ctx.parser.consume(idx, token, keyword);\n}\nfunction wrap(ctx, guard, method, cardinality) {\n    const gate = guard && buildPredicate(guard);\n    if (!cardinality) {\n        if (gate) {\n            const idx = ctx.or++;\n            return (args) => ctx.parser.alternatives(idx, [\n                {\n                    ALT: () => method(args),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return method;\n        }\n    }\n    if (cardinality === '*') {\n        const idx = ctx.many++;\n        return (args) => ctx.parser.many(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else if (cardinality === '+') {\n        const idx = ctx.many++;\n        if (gate) {\n            const orIdx = ctx.or++;\n            // In the case of a guard condition for the `+` group\n            // We combine it with an empty alternative\n            // If the condition returns true, it needs to parse at least a single iteration\n            // If its false, it is not allowed to parse anything\n            return (args) => ctx.parser.alternatives(orIdx, [\n                {\n                    ALT: () => ctx.parser.atLeastOne(idx, {\n                        DEF: () => method(args)\n                    }),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return (args) => ctx.parser.atLeastOne(idx, {\n                DEF: () => method(args),\n            });\n        }\n    }\n    else if (cardinality === '?') {\n        const idx = ctx.optional++;\n        return (args) => ctx.parser.optional(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else {\n        assertUnreachable(cardinality);\n    }\n}\nfunction getRule(ctx, element) {\n    const name = getRuleName(ctx, element);\n    const rule = ctx.rules.get(name);\n    if (!rule)\n        throw new Error(`Rule \"${name}\" not found.\"`);\n    return rule;\n}\nfunction getRuleName(ctx, element) {\n    if (isParserRule(element)) {\n        return element.name;\n    }\n    else if (ctx.ruleNames.has(element)) {\n        return ctx.ruleNames.get(element);\n    }\n    else {\n        let item = element;\n        let parent = item.$container;\n        let ruleName = element.$type;\n        while (!isParserRule(parent)) {\n            if (isGroup(parent) || isAlternatives(parent) || isUnorderedGroup(parent)) {\n                const index = parent.elements.indexOf(item);\n                ruleName = index.toString() + ':' + ruleName;\n            }\n            item = parent;\n            parent = parent.$container;\n        }\n        const rule = parent;\n        ruleName = rule.name + ':' + ruleName;\n        ctx.ruleNames.set(element, ruleName);\n        return ruleName;\n    }\n}\nfunction getToken(ctx, name) {\n    const token = ctx.tokens[name];\n    if (!token)\n        throw new Error(`Token \"${name}\" not found.\"`);\n    return token;\n}\n//# sourceMappingURL=parser-builder-base.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer } from 'chevrotain';\nimport { isKeyword, isParserRule, isTerminalRule } from '../languages/generated/ast.js';\nimport { streamAllContents } from '../utils/ast-utils.js';\nimport { getAllReachableRules, terminalRegex } from '../utils/grammar-utils.js';\nimport { getCaseInsensitivePattern, isWhitespace, partialMatches } from '../utils/regexp-utils.js';\nimport { stream } from '../utils/stream.js';\nexport class DefaultTokenBuilder {\n    buildTokens(grammar, options) {\n        const reachableRules = stream(getAllReachableRules(grammar, false));\n        const terminalTokens = this.buildTerminalTokens(reachableRules);\n        const tokens = this.buildKeywordTokens(reachableRules, terminalTokens, options);\n        terminalTokens.forEach(terminalToken => {\n            const pattern = terminalToken.PATTERN;\n            if (typeof pattern === 'object' && pattern && 'test' in pattern && isWhitespace(pattern)) {\n                tokens.unshift(terminalToken);\n            }\n            else {\n                tokens.push(terminalToken);\n            }\n        });\n        // We don't need to add the EOF token explicitly.\n        // It is automatically available at the end of the token stream.\n        return tokens;\n    }\n    buildTerminalTokens(rules) {\n        return rules.filter(isTerminalRule).filter(e => !e.fragment)\n            .map(terminal => this.buildTerminalToken(terminal)).toArray();\n    }\n    buildTerminalToken(terminal) {\n        const regex = terminalRegex(terminal);\n        const pattern = this.requiresCustomPattern(regex) ? this.regexPatternFunction(regex) : regex;\n        const tokenType = {\n            name: terminal.name,\n            PATTERN: pattern,\n            LINE_BREAKS: true\n        };\n        if (terminal.hidden) {\n            // Only skip tokens that are able to accept whitespace\n            tokenType.GROUP = isWhitespace(regex) ? Lexer.SKIPPED : 'hidden';\n        }\n        return tokenType;\n    }\n    requiresCustomPattern(regex) {\n        if (regex.flags.includes('u')) {\n            // Unicode regexes are not supported by Chevrotain.\n            return true;\n        }\n        else if (regex.source.includes('?<=') || regex.source.includes('?<!')) {\n            // Negative and positive lookbehind are not supported by Chevrotain yet.\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    regexPatternFunction(regex) {\n        const stickyRegex = new RegExp(regex, regex.flags + 'y');\n        return (text, offset) => {\n            stickyRegex.lastIndex = offset;\n            const execResult = stickyRegex.exec(text);\n            return execResult;\n        };\n    }\n    buildKeywordTokens(rules, terminalTokens, options) {\n        return rules\n            // We filter by parser rules, since keywords in terminal rules get transformed into regex and are not actual tokens\n            .filter(isParserRule)\n            .flatMap(rule => streamAllContents(rule).filter(isKeyword))\n            .distinct(e => e.value).toArray()\n            // Sort keywords by descending length\n            .sort((a, b) => b.value.length - a.value.length)\n            .map(keyword => this.buildKeywordToken(keyword, terminalTokens, Boolean(options === null || options === void 0 ? void 0 : options.caseInsensitive)));\n    }\n    buildKeywordToken(keyword, terminalTokens, caseInsensitive) {\n        return {\n            name: keyword.value,\n            PATTERN: this.buildKeywordPattern(keyword, caseInsensitive),\n            LONGER_ALT: this.findLongerAlt(keyword, terminalTokens)\n        };\n    }\n    buildKeywordPattern(keyword, caseInsensitive) {\n        return caseInsensitive ?\n            new RegExp(getCaseInsensitivePattern(keyword.value)) :\n            keyword.value;\n    }\n    findLongerAlt(keyword, terminalTokens) {\n        return terminalTokens.reduce((longerAlts, token) => {\n            const pattern = token === null || token === void 0 ? void 0 : token.PATTERN;\n            if ((pattern === null || pattern === void 0 ? void 0 : pattern.source) && partialMatches('^' + pattern.source + '$', keyword.value)) {\n                longerAlts.push(token);\n            }\n            return longerAlts;\n        }, []);\n    }\n}\n//# sourceMappingURL=token-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCrossReference, isRuleCall } from '../languages/generated/ast.js';\nimport { getCrossReferenceTerminal, getRuleType } from '../utils/grammar-utils.js';\nexport class DefaultValueConverter {\n    convert(input, cstNode) {\n        let feature = cstNode.grammarSource;\n        if (isCrossReference(feature)) {\n            feature = getCrossReferenceTerminal(feature);\n        }\n        if (isRuleCall(feature)) {\n            const rule = feature.rule.ref;\n            if (!rule) {\n                throw new Error('This cst node was not parsed by a rule.');\n            }\n            return this.runConverter(rule, input, cstNode);\n        }\n        return input;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    runConverter(rule, input, cstNode) {\n        var _a;\n        switch (rule.name.toUpperCase()) {\n            case 'INT': return ValueConverter.convertInt(input);\n            case 'STRING': return ValueConverter.convertString(input);\n            case 'ID': return ValueConverter.convertID(input);\n        }\n        switch ((_a = getRuleType(rule)) === null || _a === void 0 ? void 0 : _a.toLowerCase()) {\n            case 'number': return ValueConverter.convertNumber(input);\n            case 'boolean': return ValueConverter.convertBoolean(input);\n            case 'bigint': return ValueConverter.convertBigint(input);\n            case 'date': return ValueConverter.convertDate(input);\n            default: return input;\n        }\n    }\n}\nexport var ValueConverter;\n(function (ValueConverter) {\n    function convertString(input) {\n        let result = '';\n        for (let i = 1; i < input.length - 1; i++) {\n            const c = input.charAt(i);\n            if (c === '\\\\') {\n                const c1 = input.charAt(++i);\n                result += convertEscapeCharacter(c1);\n            }\n            else {\n                result += c;\n            }\n        }\n        return result;\n    }\n    ValueConverter.convertString = convertString;\n    function convertEscapeCharacter(char) {\n        switch (char) {\n            case 'b': return '\\b';\n            case 'f': return '\\f';\n            case 'n': return '\\n';\n            case 'r': return '\\r';\n            case 't': return '\\t';\n            case 'v': return '\\v';\n            case '0': return '\\0';\n            default: return char;\n        }\n    }\n    function convertID(input) {\n        if (input.charAt(0) === '^') {\n            return input.substring(1);\n        }\n        else {\n            return input;\n        }\n    }\n    ValueConverter.convertID = convertID;\n    function convertInt(input) {\n        return parseInt(input);\n    }\n    ValueConverter.convertInt = convertInt;\n    function convertBigint(input) {\n        return BigInt(input);\n    }\n    ValueConverter.convertBigint = convertBigint;\n    function convertDate(input) {\n        return new Date(input);\n    }\n    ValueConverter.convertDate = convertDate;\n    function convertNumber(input) {\n        return Number(input);\n    }\n    ValueConverter.convertNumber = convertNumber;\n    function convertBoolean(input) {\n        return input.toLowerCase() === 'true';\n    }\n    ValueConverter.convertBoolean = convertBoolean;\n})(ValueConverter || (ValueConverter = {}));\n//# sourceMappingURL=value-converter.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\n/**\n * Delays the execution of the current code to the next tick of the event loop.\n * Don't call this method directly in a tight loop to prevent too many promises from being created.\n */\nexport function delayNextTick() {\n    return new Promise(resolve => {\n        // In case we are running in a non-node environment, `setImmediate` isn't available.\n        // Using `setTimeout` of the browser API accomplishes the same result.\n        if (typeof setImmediate === 'undefined') {\n            setTimeout(resolve, 0);\n        }\n        else {\n            setImmediate(resolve);\n        }\n    });\n}\nlet lastTick = 0;\nlet globalInterruptionPeriod = 10;\n/**\n * Reset the global interruption period and create a cancellation token source.\n */\nexport function startCancelableOperation() {\n    lastTick = Date.now();\n    return new CancellationTokenSource();\n}\n/**\n * Change the period duration for `interruptAndCheck` to the given number of milliseconds.\n * The default value is 10ms.\n */\nexport function setInterruptionPeriod(period) {\n    globalInterruptionPeriod = period;\n}\n/**\n * This symbol may be thrown in an asynchronous context by any Langium service that receives\n * a `CancellationToken`. This means that the promise returned by such a service is rejected with\n * this symbol as rejection reason.\n */\nexport const OperationCancelled = Symbol('OperationCancelled');\n/**\n * Use this in a `catch` block to check whether the thrown object indicates that the operation\n * has been cancelled.\n */\nexport function isOperationCancelled(err) {\n    return err === OperationCancelled;\n}\n/**\n * This function does two things:\n *  1. Check the elapsed time since the last call to this function or to `startCancelableOperation`. If the predefined\n *     period (configured with `setInterruptionPeriod`) is exceeded, execution is delayed with `delayNextTick`.\n *  2. If the predefined period is not met yet or execution is resumed after an interruption, the given cancellation\n *     token is checked, and if cancellation is requested, `OperationCanceled` is thrown.\n *\n * All services in Langium that receive a `CancellationToken` may potentially call this function, so the\n * `CancellationToken` must be caught (with an `async` try-catch block or a `catch` callback attached to\n * the promise) to avoid that event being exposed as an error.\n */\nexport async function interruptAndCheck(token) {\n    if (token === CancellationToken.None) {\n        // Early exit in case cancellation was disabled by the caller\n        return;\n    }\n    const current = Date.now();\n    if (current - lastTick >= globalInterruptionPeriod) {\n        lastTick = current;\n        await delayNextTick();\n    }\n    if (token.isCancellationRequested) {\n        throw OperationCancelled;\n    }\n}\n/**\n * Simple implementation of the deferred pattern.\n * An object that exposes a promise and functions to resolve and reject it.\n */\nexport class Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = (arg) => {\n                resolve(arg);\n                return this;\n            };\n            this.reject = (err) => {\n                reject(err);\n                return this;\n            };\n        });\n    }\n}\n//# sourceMappingURL=promise-utils.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            const start = this.offsetAt(range.start);\n            const end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(changes, version) {\n        for (const change of changes) {\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                const range = getWellformedRange(change.range);\n                // update content\n                const startOffset = this.offsetAt(range.start);\n                const endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                const startLine = Math.max(range.start.line, 0);\n                const endLine = Math.max(range.end.line, 0);\n                let lineOffsets = this._lineOffsets;\n                const addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (let i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice(startLine + 1, endLine - startLine, ...addedLineOffsets);\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                const diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (let i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        const lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            const mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        const line = low - 1;\n        offset = this.ensureBeforeEOL(offset, lineOffsets[line]);\n        return { line, character: offset - lineOffsets[line] };\n    }\n    offsetAt(position) {\n        const lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        const lineOffset = lineOffsets[position.line];\n        if (position.character <= 0) {\n            return lineOffset;\n        }\n        const nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        const offset = Math.min(lineOffset + position.character, nextLineOffset);\n        return this.ensureBeforeEOL(offset, lineOffset);\n    }\n    ensureBeforeEOL(offset, lineOffset) {\n        while (offset > lineOffset && isEOL(this._content.charCodeAt(offset - 1))) {\n            offset--;\n        }\n        return offset;\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n    static isIncremental(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    static isFull(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n}\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifying its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @param version the changes version for the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        const text = document.getText();\n        const sortedEdits = mergeSort(edits.map(getWellformedEdit), (a, b) => {\n            const diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = 0;\n        const spans = [];\n        for (const e of sortedEdits) {\n            const startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    const p = (data.length / 2) | 0;\n    const left = data.slice(0, p);\n    const right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    let leftIdx = 0;\n    let rightIdx = 0;\n    let i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        const ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset = 0) {\n    const result = isAtLineStart ? [textOffset] : [];\n    for (let i = 0; i < text.length; i++) {\n        const ch = text.charCodeAt(i);\n        if (isEOL(ch)) {\n            if (ch === 13 /* CharCode.CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction isEOL(char) {\n    return char === 13 /* CharCode.CarriageReturn */ || char === 10 /* CharCode.LineFeed */;\n}\nfunction getWellformedRange(range) {\n    const start = range.start;\n    const end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    const range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range };\n    }\n    return textEdit;\n}\n","var LIB;(()=>{\"use strict\";var t={470:t=>{function e(t){if(\"string\"!=typeof t)throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(t))}function r(t,e){for(var r,n=\"\",i=0,o=-1,s=0,h=0;h<=t.length;++h){if(h<t.length)r=t.charCodeAt(h);else{if(47===r)break;r=47}if(47===r){if(o===h-1||1===s);else if(o!==h-1&&2===s){if(n.length<2||2!==i||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(n.length>2){var a=n.lastIndexOf(\"/\");if(a!==n.length-1){-1===a?(n=\"\",i=0):i=(n=n.slice(0,a)).length-1-n.lastIndexOf(\"/\"),o=h,s=0;continue}}else if(2===n.length||1===n.length){n=\"\",i=0,o=h,s=0;continue}e&&(n.length>0?n+=\"/..\":n=\"..\",i=2)}else n.length>0?n+=\"/\"+t.slice(o+1,h):n=t.slice(o+1,h),i=h-o-1;o=h,s=0}else 46===r&&-1!==s?++s:s=-1}return n}var n={resolve:function(){for(var t,n=\"\",i=!1,o=arguments.length-1;o>=-1&&!i;o--){var s;o>=0?s=arguments[o]:(void 0===t&&(t=process.cwd()),s=t),e(s),0!==s.length&&(n=s+\"/\"+n,i=47===s.charCodeAt(0))}return n=r(n,!i),i?n.length>0?\"/\"+n:\"/\":n.length>0?n:\".\"},normalize:function(t){if(e(t),0===t.length)return\".\";var n=47===t.charCodeAt(0),i=47===t.charCodeAt(t.length-1);return 0!==(t=r(t,!n)).length||n||(t=\".\"),t.length>0&&i&&(t+=\"/\"),n?\"/\"+t:t},isAbsolute:function(t){return e(t),t.length>0&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return\".\";for(var t,r=0;r<arguments.length;++r){var i=arguments[r];e(i),i.length>0&&(void 0===t?t=i:t+=\"/\"+i)}return void 0===t?\".\":n.normalize(t)},relative:function(t,r){if(e(t),e(r),t===r)return\"\";if((t=n.resolve(t))===(r=n.resolve(r)))return\"\";for(var i=1;i<t.length&&47===t.charCodeAt(i);++i);for(var o=t.length,s=o-i,h=1;h<r.length&&47===r.charCodeAt(h);++h);for(var a=r.length-h,c=s<a?s:a,f=-1,u=0;u<=c;++u){if(u===c){if(a>c){if(47===r.charCodeAt(h+u))return r.slice(h+u+1);if(0===u)return r.slice(h+u)}else s>c&&(47===t.charCodeAt(i+u)?f=u:0===u&&(f=0));break}var l=t.charCodeAt(i+u);if(l!==r.charCodeAt(h+u))break;47===l&&(f=u)}var g=\"\";for(u=i+f+1;u<=o;++u)u!==o&&47!==t.charCodeAt(u)||(0===g.length?g+=\"..\":g+=\"/..\");return g.length>0?g+r.slice(h+f):(h+=f,47===r.charCodeAt(h)&&++h,r.slice(h))},_makeLong:function(t){return t},dirname:function(t){if(e(t),0===t.length)return\".\";for(var r=t.charCodeAt(0),n=47===r,i=-1,o=!0,s=t.length-1;s>=1;--s)if(47===(r=t.charCodeAt(s))){if(!o){i=s;break}}else o=!1;return-1===i?n?\"/\":\".\":n&&1===i?\"//\":t.slice(0,i)},basename:function(t,r){if(void 0!==r&&\"string\"!=typeof r)throw new TypeError('\"ext\" argument must be a string');e(t);var n,i=0,o=-1,s=!0;if(void 0!==r&&r.length>0&&r.length<=t.length){if(r.length===t.length&&r===t)return\"\";var h=r.length-1,a=-1;for(n=t.length-1;n>=0;--n){var c=t.charCodeAt(n);if(47===c){if(!s){i=n+1;break}}else-1===a&&(s=!1,a=n+1),h>=0&&(c===r.charCodeAt(h)?-1==--h&&(o=n):(h=-1,o=a))}return i===o?o=a:-1===o&&(o=t.length),t.slice(i,o)}for(n=t.length-1;n>=0;--n)if(47===t.charCodeAt(n)){if(!s){i=n+1;break}}else-1===o&&(s=!1,o=n+1);return-1===o?\"\":t.slice(i,o)},extname:function(t){e(t);for(var r=-1,n=0,i=-1,o=!0,s=0,h=t.length-1;h>=0;--h){var a=t.charCodeAt(h);if(47!==a)-1===i&&(o=!1,i=h+1),46===a?-1===r?r=h:1!==s&&(s=1):-1!==r&&(s=-1);else if(!o){n=h+1;break}}return-1===r||-1===i||0===s||1===s&&r===i-1&&r===n+1?\"\":t.slice(r,i)},format:function(t){if(null===t||\"object\"!=typeof t)throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof t);return function(t,e){var r=e.dir||e.root,n=e.base||(e.name||\"\")+(e.ext||\"\");return r?r===e.root?r+n:r+\"/\"+n:n}(0,t)},parse:function(t){e(t);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(0===t.length)return r;var n,i=t.charCodeAt(0),o=47===i;o?(r.root=\"/\",n=1):n=0;for(var s=-1,h=0,a=-1,c=!0,f=t.length-1,u=0;f>=n;--f)if(47!==(i=t.charCodeAt(f)))-1===a&&(c=!1,a=f+1),46===i?-1===s?s=f:1!==u&&(u=1):-1!==s&&(u=-1);else if(!c){h=f+1;break}return-1===s||-1===a||0===u||1===u&&s===a-1&&s===h+1?-1!==a&&(r.base=r.name=0===h&&o?t.slice(1,a):t.slice(h,a)):(0===h&&o?(r.name=t.slice(1,s),r.base=t.slice(1,a)):(r.name=t.slice(h,s),r.base=t.slice(h,a)),r.ext=t.slice(s,a)),h>0?r.dir=t.slice(0,h-1):o&&(r.dir=\"/\"),r},sep:\"/\",delimiter:\":\",win32:null,posix:null};n.posix=n,t.exports=n}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var n={};(()=>{let t;if(r.r(n),r.d(n,{URI:()=>f,Utils:()=>P}),\"object\"==typeof process)t=\"win32\"===process.platform;else if(\"object\"==typeof navigator){let e=navigator.userAgent;t=e.indexOf(\"Windows\")>=0}const e=/^\\w[\\w\\d+.-]*$/,i=/^\\//,o=/^\\/\\//;function s(t,r){if(!t.scheme&&r)throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${t.authority}\", path: \"${t.path}\", query: \"${t.query}\", fragment: \"${t.fragment}\"}`);if(t.scheme&&!e.test(t.scheme))throw new Error(\"[UriError]: Scheme contains illegal characters.\");if(t.path)if(t.authority){if(!i.test(t.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character')}else if(o.test(t.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")')}const h=\"\",a=\"/\",c=/^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;class f{static isUri(t){return t instanceof f||!!t&&\"string\"==typeof t.authority&&\"string\"==typeof t.fragment&&\"string\"==typeof t.path&&\"string\"==typeof t.query&&\"string\"==typeof t.scheme&&\"string\"==typeof t.fsPath&&\"function\"==typeof t.with&&\"function\"==typeof t.toString}scheme;authority;path;query;fragment;constructor(t,e,r,n,i,o=!1){\"object\"==typeof t?(this.scheme=t.scheme||h,this.authority=t.authority||h,this.path=t.path||h,this.query=t.query||h,this.fragment=t.fragment||h):(this.scheme=function(t,e){return t||e?t:\"file\"}(t,o),this.authority=e||h,this.path=function(t,e){switch(t){case\"https\":case\"http\":case\"file\":e?e[0]!==a&&(e=a+e):e=a}return e}(this.scheme,r||h),this.query=n||h,this.fragment=i||h,s(this,o))}get fsPath(){return m(this,!1)}with(t){if(!t)return this;let{scheme:e,authority:r,path:n,query:i,fragment:o}=t;return void 0===e?e=this.scheme:null===e&&(e=h),void 0===r?r=this.authority:null===r&&(r=h),void 0===n?n=this.path:null===n&&(n=h),void 0===i?i=this.query:null===i&&(i=h),void 0===o?o=this.fragment:null===o&&(o=h),e===this.scheme&&r===this.authority&&n===this.path&&i===this.query&&o===this.fragment?this:new l(e,r,n,i,o)}static parse(t,e=!1){const r=c.exec(t);return r?new l(r[2]||h,C(r[4]||h),C(r[5]||h),C(r[7]||h),C(r[9]||h),e):new l(h,h,h,h,h)}static file(e){let r=h;if(t&&(e=e.replace(/\\\\/g,a)),e[0]===a&&e[1]===a){const t=e.indexOf(a,2);-1===t?(r=e.substring(2),e=a):(r=e.substring(2,t),e=e.substring(t)||a)}return new l(\"file\",r,e,h,h)}static from(t){const e=new l(t.scheme,t.authority,t.path,t.query,t.fragment);return s(e,!0),e}toString(t=!1){return y(this,t)}toJSON(){return this}static revive(t){if(t){if(t instanceof f)return t;{const e=new l(t);return e._formatted=t.external,e._fsPath=t._sep===u?t.fsPath:null,e}}return t}}const u=t?1:void 0;class l extends f{_formatted=null;_fsPath=null;get fsPath(){return this._fsPath||(this._fsPath=m(this,!1)),this._fsPath}toString(t=!1){return t?y(this,!0):(this._formatted||(this._formatted=y(this,!1)),this._formatted)}toJSON(){const t={$mid:1};return this._fsPath&&(t.fsPath=this._fsPath,t._sep=u),this._formatted&&(t.external=this._formatted),this.path&&(t.path=this.path),this.scheme&&(t.scheme=this.scheme),this.authority&&(t.authority=this.authority),this.query&&(t.query=this.query),this.fragment&&(t.fragment=this.fragment),t}}const g={58:\"%3A\",47:\"%2F\",63:\"%3F\",35:\"%23\",91:\"%5B\",93:\"%5D\",64:\"%40\",33:\"%21\",36:\"%24\",38:\"%26\",39:\"%27\",40:\"%28\",41:\"%29\",42:\"%2A\",43:\"%2B\",44:\"%2C\",59:\"%3B\",61:\"%3D\",32:\"%20\"};function d(t,e,r){let n,i=-1;for(let o=0;o<t.length;o++){const s=t.charCodeAt(o);if(s>=97&&s<=122||s>=65&&s<=90||s>=48&&s<=57||45===s||46===s||95===s||126===s||e&&47===s||r&&91===s||r&&93===s||r&&58===s)-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),void 0!==n&&(n+=t.charAt(o));else{void 0===n&&(n=t.substr(0,o));const e=g[s];void 0!==e?(-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),n+=e):-1===i&&(i=o)}}return-1!==i&&(n+=encodeURIComponent(t.substring(i))),void 0!==n?n:t}function p(t){let e;for(let r=0;r<t.length;r++){const n=t.charCodeAt(r);35===n||63===n?(void 0===e&&(e=t.substr(0,r)),e+=g[n]):void 0!==e&&(e+=t[r])}return void 0!==e?e:t}function m(e,r){let n;return n=e.authority&&e.path.length>1&&\"file\"===e.scheme?`//${e.authority}${e.path}`:47===e.path.charCodeAt(0)&&(e.path.charCodeAt(1)>=65&&e.path.charCodeAt(1)<=90||e.path.charCodeAt(1)>=97&&e.path.charCodeAt(1)<=122)&&58===e.path.charCodeAt(2)?r?e.path.substr(1):e.path[1].toLowerCase()+e.path.substr(2):e.path,t&&(n=n.replace(/\\//g,\"\\\\\")),n}function y(t,e){const r=e?p:d;let n=\"\",{scheme:i,authority:o,path:s,query:h,fragment:c}=t;if(i&&(n+=i,n+=\":\"),(o||\"file\"===i)&&(n+=a,n+=a),o){let t=o.indexOf(\"@\");if(-1!==t){const e=o.substr(0,t);o=o.substr(t+1),t=e.lastIndexOf(\":\"),-1===t?n+=r(e,!1,!1):(n+=r(e.substr(0,t),!1,!1),n+=\":\",n+=r(e.substr(t+1),!1,!0)),n+=\"@\"}o=o.toLowerCase(),t=o.lastIndexOf(\":\"),-1===t?n+=r(o,!1,!0):(n+=r(o.substr(0,t),!1,!0),n+=o.substr(t))}if(s){if(s.length>=3&&47===s.charCodeAt(0)&&58===s.charCodeAt(2)){const t=s.charCodeAt(1);t>=65&&t<=90&&(s=`/${String.fromCharCode(t+32)}:${s.substr(3)}`)}else if(s.length>=2&&58===s.charCodeAt(1)){const t=s.charCodeAt(0);t>=65&&t<=90&&(s=`${String.fromCharCode(t+32)}:${s.substr(2)}`)}n+=r(s,!0,!1)}return h&&(n+=\"?\",n+=r(h,!1,!1)),c&&(n+=\"#\",n+=e?c:d(c,!1,!1)),n}function v(t){try{return decodeURIComponent(t)}catch{return t.length>3?t.substr(0,3)+v(t.substr(3)):t}}const b=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function C(t){return t.match(b)?t.replace(b,(t=>v(t))):t}var A=r(470);const w=A.posix||A,x=\"/\";var P;!function(t){t.joinPath=function(t,...e){return t.with({path:w.join(t.path,...e)})},t.resolvePath=function(t,...e){let r=t.path,n=!1;r[0]!==x&&(r=x+r,n=!0);let i=w.resolve(r,...e);return n&&i[0]===x&&!t.authority&&(i=i.substring(1)),t.with({path:i})},t.dirname=function(t){if(0===t.path.length||t.path===x)return t;let e=w.dirname(t.path);return 1===e.length&&46===e.charCodeAt(0)&&(e=\"\"),t.with({path:e})},t.basename=function(t){return w.basename(t.path)},t.extname=function(t){return w.extname(t.path)}}(P||(P={}))})(),LIB=n})();export const{URI,Utils}=LIB;\n//# sourceMappingURL=index.mjs.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI, Utils } from 'vscode-uri';\nexport { URI };\nexport var UriUtils;\n(function (UriUtils) {\n    UriUtils.basename = Utils.basename;\n    UriUtils.dirname = Utils.dirname;\n    UriUtils.extname = Utils.extname;\n    UriUtils.joinPath = Utils.joinPath;\n    UriUtils.resolvePath = Utils.resolvePath;\n    function equals(a, b) {\n        return (a === null || a === void 0 ? void 0 : a.toString()) === (b === null || b === void 0 ? void 0 : b.toString());\n    }\n    UriUtils.equals = equals;\n    function relative(from, to) {\n        const fromPath = typeof from === 'string' ? from : from.path;\n        const toPath = typeof to === 'string' ? to : to.path;\n        const fromParts = fromPath.split('/').filter(e => e.length > 0);\n        const toParts = toPath.split('/').filter(e => e.length > 0);\n        let i = 0;\n        for (; i < fromParts.length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n                break;\n            }\n        }\n        const backPart = '../'.repeat(fromParts.length - i);\n        const toPart = toParts.slice(i).join('/');\n        return backPart + toPart;\n    }\n    UriUtils.relative = relative;\n})(UriUtils || (UriUtils = {}));\n//# sourceMappingURL=uri-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * Re-export 'TextDocument' from 'vscode-languageserver-textdocument' for convenience,\n *  including both type _and_ symbol (namespace), as we here and there also refer to the symbol,\n *  the overhead is very small, just a few kilobytes.\n * Everything else of that package (at the time contributing) is also defined\n *  in 'vscode-languageserver-protocol' or 'vscode-languageserver-types'.\n */\nexport { TextDocument } from 'vscode-languageserver-textdocument';\nimport { TextDocument } from './documents.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { URI } from '../utils/uri-utils.js';\n/**\n * A document is subject to several phases that are run in predefined order. Any state value implies that\n * smaller state values are finished as well.\n */\nexport var DocumentState;\n(function (DocumentState) {\n    /**\n     * The text content has changed and needs to be parsed again. The AST held by this outdated\n     * document instance is no longer valid.\n     */\n    DocumentState[DocumentState[\"Changed\"] = 0] = \"Changed\";\n    /**\n     * An AST has been created from the text content. The document structure can be traversed,\n     * but cross-references cannot be resolved yet. If necessary, the structure can be manipulated\n     * at this stage as a preprocessing step.\n     */\n    DocumentState[DocumentState[\"Parsed\"] = 1] = \"Parsed\";\n    /**\n     * The `IndexManager` service has processed AST nodes of this document. This means the\n     * exported symbols are available in the global scope and can be resolved from other documents.\n     */\n    DocumentState[DocumentState[\"IndexedContent\"] = 2] = \"IndexedContent\";\n    /**\n     * The `ScopeComputation` service has processed this document. This means the local symbols\n     * are stored in a MultiMap so they can be looked up by the `ScopeProvider` service.\n     * Once a document has reached this state, you may follow every reference - it will lazily\n     * resolve its `ref` property and yield either the target AST node or `undefined` in case\n     * the target is not in scope.\n     */\n    DocumentState[DocumentState[\"ComputedScopes\"] = 3] = \"ComputedScopes\";\n    /**\n     * The `Linker` service has processed this document. All outgoing references have been\n     * resolved or marked as erroneous.\n     */\n    DocumentState[DocumentState[\"Linked\"] = 4] = \"Linked\";\n    /**\n     * The `IndexManager` service has processed AST node references of this document. This is\n     * necessary to determine which documents are affected by a change in one of the workspace\n     * documents.\n     */\n    DocumentState[DocumentState[\"IndexedReferences\"] = 5] = \"IndexedReferences\";\n    /**\n     * The `DocumentValidator` service has processed this document. The language server listens\n     * to the results of this phase and sends diagnostics to the client.\n     */\n    DocumentState[DocumentState[\"Validated\"] = 6] = \"Validated\";\n})(DocumentState || (DocumentState = {}));\nexport class DefaultLangiumDocumentFactory {\n    constructor(services) {\n        this.serviceRegistry = services.ServiceRegistry;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n    }\n    async fromUri(uri, cancellationToken = CancellationToken.None) {\n        const content = await this.fileSystemProvider.readFile(uri);\n        return this.createAsync(uri, content, cancellationToken);\n    }\n    fromTextDocument(textDocument, uri, cancellationToken) {\n        uri = uri !== null && uri !== void 0 ? uri : URI.parse(textDocument.uri);\n        if (cancellationToken) {\n            return this.createAsync(uri, textDocument, cancellationToken);\n        }\n        else {\n            return this.create(uri, textDocument);\n        }\n    }\n    fromString(text, uri, cancellationToken) {\n        if (cancellationToken) {\n            return this.createAsync(uri, text, cancellationToken);\n        }\n        else {\n            return this.create(uri, text);\n        }\n    }\n    fromModel(model, uri) {\n        return this.create(uri, { $model: model });\n    }\n    create(uri, content) {\n        if (typeof content === 'string') {\n            const parseResult = this.parse(uri, content);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else if ('$model' in content) {\n            const parseResult = { value: content.$model, parserErrors: [], lexerErrors: [] };\n            return this.createLangiumDocument(parseResult, uri);\n        }\n        else {\n            const parseResult = this.parse(uri, content.getText());\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    async createAsync(uri, content, cancelToken) {\n        if (typeof content === 'string') {\n            const parseResult = await this.parseAsync(uri, content, cancelToken);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else {\n            const parseResult = await this.parseAsync(uri, content.getText(), cancelToken);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    /**\n     * Create a LangiumDocument from a given parse result.\n     *\n     * A TextDocument is created on demand if it is not provided as argument here. Usually this\n     * should not be necessary because the main purpose of the TextDocument is to convert between\n     * text ranges and offsets, which is done solely in LSP request handling.\n     *\n     * With the introduction of {@link update} below this method is supposed to be mainly called\n     * during workspace initialization and on addition/recognition of new files, while changes in\n     * existing documents are processed via {@link update}.\n     */\n    createLangiumDocument(parseResult, uri, textDocument, text) {\n        let document;\n        if (textDocument) {\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                textDocument\n            };\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(uri, text);\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                get textDocument() {\n                    return textDocumentGetter();\n                }\n            };\n        }\n        parseResult.value.$document = document;\n        return document;\n    }\n    async update(document, cancellationToken) {\n        var _a, _b;\n        // The CST full text property contains the original text that was used to create the AST.\n        const oldText = (_a = document.parseResult.value.$cstNode) === null || _a === void 0 ? void 0 : _a.root.fullText;\n        const textDocument = (_b = this.textDocuments) === null || _b === void 0 ? void 0 : _b.get(document.uri.toString());\n        const text = textDocument ? textDocument.getText() : await this.fileSystemProvider.readFile(document.uri);\n        if (textDocument) {\n            Object.defineProperty(document, 'textDocument', {\n                value: textDocument\n            });\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(document.uri, text);\n            Object.defineProperty(document, 'textDocument', {\n                get: textDocumentGetter\n            });\n        }\n        // Some of these documents can be pretty large, so parsing them again can be quite expensive.\n        // Therefore, we only parse if the text has actually changed.\n        if (oldText !== text) {\n            document.parseResult = await this.parseAsync(document.uri, text, cancellationToken);\n            document.parseResult.value.$document = document;\n        }\n        document.state = DocumentState.Parsed;\n        return document;\n    }\n    parse(uri, text) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.LangiumParser.parse(text);\n    }\n    parseAsync(uri, text, cancellationToken) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.AsyncParser.parse(text, cancellationToken);\n    }\n    createTextDocumentGetter(uri, text) {\n        const serviceRegistry = this.serviceRegistry;\n        let textDoc = undefined;\n        return () => {\n            return textDoc !== null && textDoc !== void 0 ? textDoc : (textDoc = TextDocument.create(uri.toString(), serviceRegistry.getServices(uri).LanguageMetaData.languageId, 0, text !== null && text !== void 0 ? text : ''));\n        };\n    }\n}\nexport class DefaultLangiumDocuments {\n    constructor(services) {\n        this.documentMap = new Map();\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n    }\n    get all() {\n        return stream(this.documentMap.values());\n    }\n    addDocument(document) {\n        const uriString = document.uri.toString();\n        if (this.documentMap.has(uriString)) {\n            throw new Error(`A document with the URI '${uriString}' is already present.`);\n        }\n        this.documentMap.set(uriString, document);\n    }\n    getDocument(uri) {\n        const uriString = uri.toString();\n        return this.documentMap.get(uriString);\n    }\n    async getOrCreateDocument(uri, cancellationToken) {\n        let document = this.getDocument(uri);\n        if (document) {\n            return document;\n        }\n        document = await this.langiumDocumentFactory.fromUri(uri, cancellationToken);\n        this.addDocument(document);\n        return document;\n    }\n    createDocument(uri, text, cancellationToken) {\n        if (cancellationToken) {\n            return this.langiumDocumentFactory.fromString(text, uri, cancellationToken).then(document => {\n                this.addDocument(document);\n                return document;\n            });\n        }\n        else {\n            const document = this.langiumDocumentFactory.fromString(text, uri);\n            this.addDocument(document);\n            return document;\n        }\n    }\n    hasDocument(uri) {\n        return this.documentMap.has(uri.toString());\n    }\n    invalidateDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            langiumDoc.state = DocumentState.Changed;\n            langiumDoc.precomputedScopes = undefined;\n            langiumDoc.references = [];\n            langiumDoc.diagnostics = undefined;\n        }\n        return langiumDoc;\n    }\n    deleteDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            langiumDoc.state = DocumentState.Changed;\n            this.documentMap.delete(uriString);\n        }\n        return langiumDoc;\n    }\n}\n//# sourceMappingURL=documents.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { MultiMap } from '../utils/collections.js';\nimport { isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\n/**\n * Create DiagnosticData for a given diagnostic code. The result can be put into the `data` field of a DiagnosticInfo.\n */\nexport function diagnosticData(code) {\n    return { code };\n}\nexport var ValidationCategory;\n(function (ValidationCategory) {\n    ValidationCategory.all = ['fast', 'slow', 'built-in'];\n})(ValidationCategory || (ValidationCategory = {}));\n/**\n * Manages a set of `ValidationCheck`s to be applied when documents are validated.\n */\nexport class ValidationRegistry {\n    constructor(services) {\n        this.entries = new MultiMap();\n        this.reflection = services.shared.AstReflection;\n    }\n    /**\n     * Register a set of validation checks. Each value in the record can be either a single validation check (i.e. a function)\n     * or an array of validation checks.\n     *\n     * @param checksRecord Set of validation checks to register.\n     * @param category Optional category for the validation checks (defaults to `'fast'`).\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    register(checksRecord, thisObj = this, category = 'fast') {\n        if (category === 'built-in') {\n            throw new Error(\"The 'built-in' category is reserved for lexer, parser, and linker errors.\");\n        }\n        for (const [type, ch] of Object.entries(checksRecord)) {\n            const callbacks = ch;\n            if (Array.isArray(callbacks)) {\n                for (const check of callbacks) {\n                    const entry = {\n                        check: this.wrapValidationException(check, thisObj),\n                        category\n                    };\n                    this.addEntry(type, entry);\n                }\n            }\n            else if (typeof callbacks === 'function') {\n                const entry = {\n                    check: this.wrapValidationException(callbacks, thisObj),\n                    category\n                };\n                this.addEntry(type, entry);\n            }\n        }\n    }\n    wrapValidationException(check, thisObj) {\n        return async (node, accept, cancelToken) => {\n            try {\n                await check.call(thisObj, node, accept, cancelToken);\n            }\n            catch (err) {\n                if (isOperationCancelled(err)) {\n                    throw err;\n                }\n                console.error('An error occurred during validation:', err);\n                const message = err instanceof Error ? err.message : String(err);\n                if (err instanceof Error && err.stack) {\n                    console.error(err.stack);\n                }\n                accept('error', 'An error occurred during validation: ' + message, { node });\n            }\n        };\n    }\n    addEntry(type, entry) {\n        if (type === 'AstNode') {\n            this.entries.add('AstNode', entry);\n            return;\n        }\n        for (const subtype of this.reflection.getAllSubTypes(type)) {\n            this.entries.add(subtype, entry);\n        }\n    }\n    getChecks(type, categories) {\n        let checks = stream(this.entries.get(type))\n            .concat(this.entries.get('AstNode'));\n        if (categories) {\n            checks = checks.filter(entry => categories.includes(entry.category));\n        }\n        return checks.map(entry => entry.check);\n    }\n}\n//# sourceMappingURL=validation-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { findNodeForKeyword, findNodeForProperty } from '../utils/grammar-utils.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { tokenToRange } from '../utils/cst-utils.js';\nimport { interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { diagnosticData } from './validation-registry.js';\nexport class DefaultDocumentValidator {\n    constructor(services) {\n        this.validationRegistry = services.validation.ValidationRegistry;\n        this.metadata = services.LanguageMetaData;\n    }\n    async validateDocument(document, options = {}, cancelToken = CancellationToken.None) {\n        const parseResult = document.parseResult;\n        const diagnostics = [];\n        await interruptAndCheck(cancelToken);\n        if (!options.categories || options.categories.includes('built-in')) {\n            this.processLexingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterLexingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LexingError; })) {\n                return diagnostics;\n            }\n            this.processParsingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterParsingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.ParsingError; })) {\n                return diagnostics;\n            }\n            this.processLinkingErrors(document, diagnostics, options);\n            if (options.stopAfterLinkingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LinkingError; })) {\n                return diagnostics;\n            }\n        }\n        // Process custom validations\n        try {\n            diagnostics.push(...await this.validateAst(parseResult.value, options, cancelToken));\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error('An error occurred during validation:', err);\n        }\n        await interruptAndCheck(cancelToken);\n        return diagnostics;\n    }\n    processLexingErrors(parseResult, diagnostics, _options) {\n        for (const lexerError of parseResult.lexerErrors) {\n            const diagnostic = {\n                severity: toDiagnosticSeverity('error'),\n                range: {\n                    start: {\n                        line: lexerError.line - 1,\n                        character: lexerError.column - 1\n                    },\n                    end: {\n                        line: lexerError.line - 1,\n                        character: lexerError.column + lexerError.length - 1\n                    }\n                },\n                message: lexerError.message,\n                data: diagnosticData(DocumentValidator.LexingError),\n                source: this.getSource()\n            };\n            diagnostics.push(diagnostic);\n        }\n    }\n    processParsingErrors(parseResult, diagnostics, _options) {\n        for (const parserError of parseResult.parserErrors) {\n            let range = undefined;\n            // We can run into the chevrotain error recovery here\n            // The token contained in the parser error might be automatically inserted\n            // In this case every position value will be `NaN`\n            if (isNaN(parserError.token.startOffset)) {\n                // Some special parser error types contain a `previousToken`\n                // We can simply append our diagnostic to that token\n                if ('previousToken' in parserError) {\n                    const token = parserError.previousToken;\n                    if (!isNaN(token.startOffset)) {\n                        const position = { line: token.endLine - 1, character: token.endColumn };\n                        range = { start: position, end: position };\n                    }\n                    else {\n                        // No valid prev token. Might be empty document or containing only hidden tokens.\n                        // Point to document start\n                        const position = { line: 0, character: 0 };\n                        range = { start: position, end: position };\n                    }\n                }\n            }\n            else {\n                range = tokenToRange(parserError.token);\n            }\n            if (range) {\n                const diagnostic = {\n                    severity: toDiagnosticSeverity('error'),\n                    range,\n                    message: parserError.message,\n                    data: diagnosticData(DocumentValidator.ParsingError),\n                    source: this.getSource()\n                };\n                diagnostics.push(diagnostic);\n            }\n        }\n    }\n    processLinkingErrors(document, diagnostics, _options) {\n        for (const reference of document.references) {\n            const linkingError = reference.error;\n            if (linkingError) {\n                const info = {\n                    node: linkingError.container,\n                    property: linkingError.property,\n                    index: linkingError.index,\n                    data: {\n                        code: DocumentValidator.LinkingError,\n                        containerType: linkingError.container.$type,\n                        property: linkingError.property,\n                        refText: linkingError.reference.$refText\n                    }\n                };\n                diagnostics.push(this.toDiagnostic('error', linkingError.message, info));\n            }\n        }\n    }\n    async validateAst(rootNode, options, cancelToken = CancellationToken.None) {\n        const validationItems = [];\n        const acceptor = (severity, message, info) => {\n            validationItems.push(this.toDiagnostic(severity, message, info));\n        };\n        await Promise.all(streamAst(rootNode).map(async (node) => {\n            await interruptAndCheck(cancelToken);\n            const checks = this.validationRegistry.getChecks(node.$type, options.categories);\n            for (const check of checks) {\n                await check(node, acceptor, cancelToken);\n            }\n        }));\n        return validationItems;\n    }\n    toDiagnostic(severity, message, info) {\n        return {\n            message,\n            range: getDiagnosticRange(info),\n            severity: toDiagnosticSeverity(severity),\n            code: info.code,\n            codeDescription: info.codeDescription,\n            tags: info.tags,\n            relatedInformation: info.relatedInformation,\n            data: info.data,\n            source: this.getSource()\n        };\n    }\n    getSource() {\n        return this.metadata.languageId;\n    }\n}\nexport function getDiagnosticRange(info) {\n    if (info.range) {\n        return info.range;\n    }\n    let cstNode;\n    if (typeof info.property === 'string') {\n        cstNode = findNodeForProperty(info.node.$cstNode, info.property, info.index);\n    }\n    else if (typeof info.keyword === 'string') {\n        cstNode = findNodeForKeyword(info.node.$cstNode, info.keyword, info.index);\n    }\n    cstNode !== null && cstNode !== void 0 ? cstNode : (cstNode = info.node.$cstNode);\n    if (!cstNode) {\n        return {\n            start: { line: 0, character: 0 },\n            end: { line: 0, character: 0 }\n        };\n    }\n    return cstNode.range;\n}\nexport function toDiagnosticSeverity(severity) {\n    switch (severity) {\n        case 'error':\n            return 1; // according to vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity.Error\n        case 'warning':\n            return 2; // according to vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity.Warning\n        case 'info':\n            return 3; // according to vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity.Information\n        case 'hint':\n            return 4; // according to vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity.Hint\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport var DocumentValidator;\n(function (DocumentValidator) {\n    DocumentValidator.LexingError = 'lexing-error';\n    DocumentValidator.ParsingError = 'parsing-error';\n    DocumentValidator.LinkingError = 'linking-error';\n})(DocumentValidator || (DocumentValidator = {}));\n//# sourceMappingURL=document-validator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Disposable;\n(function (Disposable) {\n    function create(callback) {\n        return {\n            dispose: async () => await callback()\n        };\n    }\n    Disposable.create = create;\n})(Disposable || (Disposable = {}));\n//# sourceMappingURL=disposable.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isAstNode, isAstNodeDescription, isLinkingError } from '../syntax-tree.js';\nimport { getDocument, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { DocumentState } from '../workspace/documents.js';\nexport class DefaultLinker {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.langiumDocuments = () => services.shared.workspace.LangiumDocuments;\n        this.scopeProvider = services.references.ScopeProvider;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n    }\n    async link(document, cancelToken = CancellationToken.None) {\n        for (const node of streamAst(document.parseResult.value)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(node).forEach(ref => this.doLink(ref, document));\n        }\n    }\n    doLink(refInfo, document) {\n        const ref = refInfo.reference;\n        // The reference may already have been resolved lazily by accessing its `ref` property.\n        if (ref._ref === undefined) {\n            try {\n                const description = this.getCandidate(refInfo);\n                if (isLinkingError(description)) {\n                    ref._ref = description;\n                }\n                else {\n                    ref._nodeDescription = description;\n                    if (this.langiumDocuments().hasDocument(description.documentUri)) {\n                        // The target document is already loaded\n                        const linkedNode = this.loadAstNode(description);\n                        ref._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : this.createLinkingError(refInfo, description);\n                    }\n                }\n            }\n            catch (err) {\n                ref._ref = Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${ref.$refText}': ${err}` });\n            }\n        }\n        // Add the reference to the document's array of references\n        document.references.push(ref);\n    }\n    unlink(document) {\n        for (const ref of document.references) {\n            delete ref._ref;\n            delete ref._nodeDescription;\n        }\n        document.references = [];\n    }\n    getCandidate(refInfo) {\n        const scope = this.scopeProvider.getScope(refInfo);\n        const description = scope.getElement(refInfo.reference.$refText);\n        return description !== null && description !== void 0 ? description : this.createLinkingError(refInfo);\n    }\n    buildReference(node, property, refNode, refText) {\n        // See behavior description in doc of Linker, update that on changes in here.\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const linker = this;\n        const reference = {\n            $refNode: refNode,\n            $refText: refText,\n            get ref() {\n                var _a;\n                if (isAstNode(this._ref)) {\n                    // Most frequent case: the target is already resolved.\n                    return this._ref;\n                }\n                else if (isAstNodeDescription(this._nodeDescription)) {\n                    // A candidate has been found before, but it is not loaded yet.\n                    const linkedNode = linker.loadAstNode(this._nodeDescription);\n                    this._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : linker.createLinkingError({ reference, container: node, property }, this._nodeDescription);\n                }\n                else if (this._ref === undefined) {\n                    // The reference has not been linked yet, so do that now.\n                    const refData = linker.getLinkedNode({ reference, container: node, property });\n                    if (refData.error && getDocument(node).state < DocumentState.ComputedScopes) {\n                        // Document scope is not ready, don't set `this._ref` so linker can retry later.\n                        return undefined;\n                    }\n                    this._ref = (_a = refData.node) !== null && _a !== void 0 ? _a : refData.error;\n                    this._nodeDescription = refData.descr;\n                }\n                return isAstNode(this._ref) ? this._ref : undefined;\n            },\n            get $nodeDescription() {\n                return this._nodeDescription;\n            },\n            get error() {\n                return isLinkingError(this._ref) ? this._ref : undefined;\n            }\n        };\n        return reference;\n    }\n    getLinkedNode(refInfo) {\n        try {\n            const description = this.getCandidate(refInfo);\n            if (isLinkingError(description)) {\n                return { error: description };\n            }\n            const linkedNode = this.loadAstNode(description);\n            if (linkedNode) {\n                return { node: linkedNode, descr: description };\n            }\n            else {\n                return {\n                    descr: description,\n                    error: this.createLinkingError(refInfo, description)\n                };\n            }\n        }\n        catch (err) {\n            return {\n                error: Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${refInfo.reference.$refText}': ${err}` })\n            };\n        }\n    }\n    loadAstNode(nodeDescription) {\n        if (nodeDescription.node) {\n            return nodeDescription.node;\n        }\n        const doc = this.langiumDocuments().getDocument(nodeDescription.documentUri);\n        if (!doc) {\n            return undefined;\n        }\n        return this.astNodeLocator.getAstNode(doc.parseResult.value, nodeDescription.path);\n    }\n    createLinkingError(refInfo, targetDescription) {\n        // Check whether the document is sufficiently processed by the DocumentBuilder. If not, this is a hint for a bug\n        // in the language implementation.\n        const document = getDocument(refInfo.container);\n        if (document.state < DocumentState.ComputedScopes) {\n            console.warn(`Attempted reference resolution before document reached ComputedScopes state (${document.uri}).`);\n        }\n        const referenceType = this.reflection.getReferenceType(refInfo);\n        return Object.assign(Object.assign({}, refInfo), { message: `Could not resolve reference to ${referenceType} named '${refInfo.reference.$refText}'.`, targetDescription });\n    }\n}\n//# sourceMappingURL=linker.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findNodeForProperty } from '../utils/grammar-utils.js';\nexport function isNamed(node) {\n    return typeof node.name === 'string';\n}\nexport class DefaultNameProvider {\n    getName(node) {\n        if (isNamed(node)) {\n            return node.name;\n        }\n        return undefined;\n    }\n    getNameNode(node) {\n        return findNodeForProperty(node.$cstNode, 'name');\n    }\n}\n//# sourceMappingURL=name-provider.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findAssignment } from '../utils/grammar-utils.js';\nimport { isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isChildNode, toDocumentSegment } from '../utils/cst-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultReferences {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.index = services.shared.workspace.IndexManager;\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    findDeclaration(sourceCstNode) {\n        if (sourceCstNode) {\n            const assignment = findAssignment(sourceCstNode);\n            const nodeElem = sourceCstNode.astNode;\n            if (assignment && nodeElem) {\n                const reference = nodeElem[assignment.feature];\n                if (isReference(reference)) {\n                    return reference.ref;\n                }\n                else if (Array.isArray(reference)) {\n                    for (const ref of reference) {\n                        if (isReference(ref) && ref.$refNode\n                            && ref.$refNode.offset <= sourceCstNode.offset\n                            && ref.$refNode.end >= sourceCstNode.end) {\n                            return ref.ref;\n                        }\n                    }\n                }\n            }\n            if (nodeElem) {\n                const nameNode = this.nameProvider.getNameNode(nodeElem);\n                // Only return the targeted node in case the targeted cst node is the name node or part of it\n                if (nameNode && (nameNode === sourceCstNode || isChildNode(sourceCstNode, nameNode))) {\n                    return nodeElem;\n                }\n            }\n        }\n        return undefined;\n    }\n    findDeclarationNode(sourceCstNode) {\n        const astNode = this.findDeclaration(sourceCstNode);\n        if (astNode === null || astNode === void 0 ? void 0 : astNode.$cstNode) {\n            const targetNode = this.nameProvider.getNameNode(astNode);\n            return targetNode !== null && targetNode !== void 0 ? targetNode : astNode.$cstNode;\n        }\n        return undefined;\n    }\n    findReferences(targetNode, options) {\n        const refs = [];\n        if (options.includeDeclaration) {\n            const ref = this.getReferenceToSelf(targetNode);\n            if (ref) {\n                refs.push(ref);\n            }\n        }\n        let indexReferences = this.index.findAllReferences(targetNode, this.nodeLocator.getAstNodePath(targetNode));\n        if (options.documentUri) {\n            indexReferences = indexReferences.filter(ref => UriUtils.equals(ref.sourceUri, options.documentUri));\n        }\n        refs.push(...indexReferences);\n        return stream(refs);\n    }\n    getReferenceToSelf(targetNode) {\n        const nameNode = this.nameProvider.getNameNode(targetNode);\n        if (nameNode) {\n            const doc = getDocument(targetNode);\n            const path = this.nodeLocator.getAstNodePath(targetNode);\n            return {\n                sourceUri: doc.uri,\n                sourcePath: path,\n                targetUri: doc.uri,\n                targetPath: path,\n                segment: toDocumentSegment(nameNode),\n                local: true\n            };\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=references.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Reduction, stream } from './stream.js';\n/**\n * A multimap is a variation of a Map that has potentially multiple values for every key.\n */\nexport class MultiMap {\n    constructor(elements) {\n        this.map = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.add(key, value);\n            }\n        }\n    }\n    /**\n     * The total number of values in the multimap.\n     */\n    get size() {\n        return Reduction.sum(stream(this.map.values()).map(a => a.length));\n    }\n    /**\n     * Clear all entries in the multimap.\n     */\n    clear() {\n        this.map.clear();\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method deletes the specific key / value pair from the multimap.\n     *  * Without a value, all values associated with the given key are deleted.\n     *\n     * @returns `true` if a value existed and has been removed, or `false` if the specified\n     *     key / value does not exist.\n     */\n    delete(key, value) {\n        if (value === undefined) {\n            return this.map.delete(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                const index = values.indexOf(value);\n                if (index >= 0) {\n                    if (values.length === 1) {\n                        this.map.delete(key);\n                    }\n                    else {\n                        values.splice(index, 1);\n                    }\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n    /**\n     * Returns an array of all values associated with the given key. If no value exists,\n     * an empty array is returned.\n     *\n     * _Note:_ The returned array is assumed not to be modified. Use the `set` method to add a\n     * value and `delete` to remove a value from the multimap.\n     */\n    get(key) {\n        var _a;\n        return (_a = this.map.get(key)) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method returns `true` if the specific key / value pair is present in the multimap.\n     *  * Without a value, this method returns `true` if the given key is present in the multimap.\n     */\n    has(key, value) {\n        if (value === undefined) {\n            return this.map.has(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                return values.indexOf(value) >= 0;\n            }\n            return false;\n        }\n    }\n    /**\n     * Add the given key / value pair to the multimap.\n     */\n    add(key, value) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(value);\n        }\n        else {\n            this.map.set(key, [value]);\n        }\n        return this;\n    }\n    /**\n     * Add the given set of key / value pairs to the multimap.\n     */\n    addAll(key, values) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(...values);\n        }\n        else {\n            this.map.set(key, Array.from(values));\n        }\n        return this;\n    }\n    /**\n     * Invokes the given callback function for every key / value pair in the multimap.\n     */\n    forEach(callbackfn) {\n        this.map.forEach((array, key) => array.forEach(value => callbackfn(value, key, this)));\n    }\n    /**\n     * Returns an iterator of key, value pairs for every entry in the map.\n     */\n    [Symbol.iterator]() {\n        return this.entries().iterator();\n    }\n    /**\n     * Returns a stream of key, value pairs for every entry in the map.\n     */\n    entries() {\n        return stream(this.map.entries())\n            .flatMap(([key, array]) => array.map(value => [key, value]));\n    }\n    /**\n     * Returns a stream of keys in the map.\n     */\n    keys() {\n        return stream(this.map.keys());\n    }\n    /**\n     * Returns a stream of values in the map.\n     */\n    values() {\n        return stream(this.map.values()).flat();\n    }\n    /**\n     * Returns a stream of key, value set pairs for every key in the map.\n     */\n    entriesGroupedByKey() {\n        return stream(this.map.entries());\n    }\n}\nexport class BiMap {\n    get size() {\n        return this.map.size;\n    }\n    constructor(elements) {\n        this.map = new Map();\n        this.inverse = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this.map.clear();\n        this.inverse.clear();\n    }\n    set(key, value) {\n        this.map.set(key, value);\n        this.inverse.set(value, key);\n        return this;\n    }\n    get(key) {\n        return this.map.get(key);\n    }\n    getKey(value) {\n        return this.inverse.get(value);\n    }\n    delete(key) {\n        const value = this.map.get(key);\n        if (value !== undefined) {\n            this.map.delete(key);\n            this.inverse.delete(value);\n            return true;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=collections.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { streamAllContents, streamContents } from '../utils/ast-utils.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\n/**\n * The default scope computation creates and collectes descriptions of the AST nodes to be exported into the\n * _global_ scope from the given document. By default those are the document's root AST node and its directly\n * contained child nodes.\n *\n * Besides, it gathers all AST nodes that have a name (according to the `NameProvider` service) and includes them\n * in the local scope of their particular container nodes. As a result, for every cross-reference in the AST,\n * target elements from the same level (siblings) and further up towards the root (parents and siblings of parents)\n * are visible. Elements being nested inside lower levels (children, children of siblings and parents' siblings)\n * are _invisible_ by default, but that can be changed by customizing this service.\n */\nexport class DefaultScopeComputation {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n    }\n    async computeExports(document, cancelToken = CancellationToken.None) {\n        return this.computeExportsForNode(document.parseResult.value, document, undefined, cancelToken);\n    }\n    /**\n     * Creates {@link AstNodeDescription AstNodeDescriptions} for the given {@link AstNode parentNode} and its children.\n     * The list of children to be considered is determined by the function parameter {@link children}.\n     * By default only the direct children of {@link parentNode} are visited, nested nodes are not exported.\n     *\n     * @param parentNode AST node to be exported, i.e., of which an {@link AstNodeDescription} shall be added to the returned list.\n     * @param document The document containing the AST node to be exported.\n     * @param children A function called with {@link parentNode} as single argument and returning an {@link Iterable} supplying the children to be visited, which must be directly or transitively contained in {@link parentNode}.\n     * @param cancelToken Indicates when to cancel the current operation.\n     * @throws `OperationCanceled` if a user action occurs during execution.\n     * @returns A list of {@link AstNodeDescription AstNodeDescriptions} to be published to index.\n     */\n    async computeExportsForNode(parentNode, document, children = streamContents, cancelToken = CancellationToken.None) {\n        const exports = [];\n        this.exportNode(parentNode, exports, document);\n        for (const node of children(parentNode)) {\n            await interruptAndCheck(cancelToken);\n            this.exportNode(node, exports, document);\n        }\n        return exports;\n    }\n    /**\n     * Add a single node to the list of exports if it has a name. Override this method to change how\n     * symbols are exported, e.g. by modifying their exported name.\n     */\n    exportNode(node, exports, document) {\n        const name = this.nameProvider.getName(node);\n        if (name) {\n            exports.push(this.descriptions.createDescription(node, name, document));\n        }\n    }\n    async computeLocalScopes(document, cancelToken = CancellationToken.None) {\n        const rootNode = document.parseResult.value;\n        const scopes = new MultiMap();\n        // Here we navigate the full AST - local scopes shall be available in the whole document\n        for (const node of streamAllContents(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            this.processNode(node, document, scopes);\n        }\n        return scopes;\n    }\n    /**\n     * Process a single node during scopes computation. The default implementation makes the node visible\n     * in the subtree of its container (if the node has a name). Override this method to change this,\n     * e.g. by increasing the visibility to a higher level in the AST.\n     */\n    processNode(node, document, scopes) {\n        const container = node.$container;\n        if (container) {\n            const name = this.nameProvider.getName(node);\n            if (name) {\n                scopes.add(container, this.descriptions.createDescription(node, name, document));\n            }\n        }\n    }\n}\n//# sourceMappingURL=scope-computation.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_STREAM, stream } from '../utils/stream.js';\n/**\n * The default scope implementation is based on a `Stream`. It has an optional _outer scope_ describing\n * the next level of elements, which are queried when a target element is not found in the stream provided\n * to this scope.\n */\nexport class StreamScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = elements;\n        this.outerScope = outerScope;\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n    }\n    getAllElements() {\n        if (this.outerScope) {\n            return this.elements.concat(this.outerScope.getAllElements());\n        }\n        else {\n            return this.elements;\n        }\n    }\n    getElement(name) {\n        const local = this.caseInsensitive\n            ? this.elements.find(e => e.name.toLowerCase() === name.toLowerCase())\n            : this.elements.find(e => e.name === name);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n}\nexport class MapScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = new Map();\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n        for (const element of elements) {\n            const name = this.caseInsensitive\n                ? element.name.toLowerCase()\n                : element.name;\n            this.elements.set(name, element);\n        }\n        this.outerScope = outerScope;\n    }\n    getElement(name) {\n        const localName = this.caseInsensitive ? name.toLowerCase() : name;\n        const local = this.elements.get(localName);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n    getAllElements() {\n        let elementStream = stream(this.elements.values());\n        if (this.outerScope) {\n            elementStream = elementStream.concat(this.outerScope.getAllElements());\n        }\n        return elementStream;\n    }\n}\nexport const EMPTY_SCOPE = {\n    getElement() {\n        return undefined;\n    },\n    getAllElements() {\n        return EMPTY_STREAM;\n    }\n};\n//# sourceMappingURL=scope.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DisposableCache {\n    constructor() {\n        this.toDispose = [];\n        this.isDisposed = false;\n    }\n    onDispose(disposable) {\n        this.toDispose.push(disposable);\n    }\n    dispose() {\n        this.throwIfDisposed();\n        this.clear();\n        this.isDisposed = true;\n        this.toDispose.forEach(disposable => disposable.dispose());\n    }\n    throwIfDisposed() {\n        if (this.isDisposed) {\n            throw new Error('This cache has already been disposed');\n        }\n    }\n}\nexport class SimpleCache extends DisposableCache {\n    constructor() {\n        super(...arguments);\n        this.cache = new Map();\n    }\n    has(key) {\n        this.throwIfDisposed();\n        return this.cache.has(key);\n    }\n    set(key, value) {\n        this.throwIfDisposed();\n        this.cache.set(key, value);\n    }\n    get(key, provider) {\n        this.throwIfDisposed();\n        if (this.cache.has(key)) {\n            return this.cache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            this.cache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(key) {\n        this.throwIfDisposed();\n        return this.cache.delete(key);\n    }\n    clear() {\n        this.throwIfDisposed();\n        this.cache.clear();\n    }\n}\nexport class ContextCache extends DisposableCache {\n    constructor(converter) {\n        super();\n        this.cache = new Map();\n        this.converter = converter !== null && converter !== void 0 ? converter : (value => value);\n    }\n    has(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).has(key);\n    }\n    set(contextKey, key, value) {\n        this.throwIfDisposed();\n        this.cacheForContext(contextKey).set(key, value);\n    }\n    get(contextKey, key, provider) {\n        this.throwIfDisposed();\n        const contextCache = this.cacheForContext(contextKey);\n        if (contextCache.has(key)) {\n            return contextCache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            contextCache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).delete(key);\n    }\n    clear(contextKey) {\n        this.throwIfDisposed();\n        if (contextKey) {\n            const mapKey = this.converter(contextKey);\n            this.cache.delete(mapKey);\n        }\n        else {\n            this.cache.clear();\n        }\n    }\n    cacheForContext(contextKey) {\n        const mapKey = this.converter(contextKey);\n        let documentCache = this.cache.get(mapKey);\n        if (!documentCache) {\n            documentCache = new Map();\n            this.cache.set(mapKey, documentCache);\n        }\n        return documentCache;\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to a document.\n * If this document is changed or deleted, all associated key/value pairs are deleted.\n */\nexport class DocumentCache extends ContextCache {\n    constructor(sharedServices) {\n        super(uri => uri.toString());\n        this.onDispose(sharedServices.workspace.DocumentBuilder.onUpdate((changed, deleted) => {\n            const allUris = changed.concat(deleted);\n            for (const uri of allUris) {\n                this.clear(uri);\n            }\n        }));\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to the whole workspace.\n * If any document in the workspace changes, the whole cache is evicted.\n */\nexport class WorkspaceCache extends SimpleCache {\n    constructor(sharedServices) {\n        super();\n        this.onDispose(sharedServices.workspace.DocumentBuilder.onUpdate(() => {\n            this.clear();\n        }));\n    }\n}\n//# sourceMappingURL=caching.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { MapScope, StreamScope } from './scope.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { WorkspaceCache } from '../utils/caching.js';\nexport class DefaultScopeProvider {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.globalScopeCache = new WorkspaceCache(services.shared);\n    }\n    getScope(context) {\n        const scopes = [];\n        const referenceType = this.reflection.getReferenceType(context);\n        const precomputed = getDocument(context.container).precomputedScopes;\n        if (precomputed) {\n            let currentNode = context.container;\n            do {\n                const allDescriptions = precomputed.get(currentNode);\n                if (allDescriptions.length > 0) {\n                    scopes.push(stream(allDescriptions).filter(desc => this.reflection.isSubtype(desc.type, referenceType)));\n                }\n                currentNode = currentNode.$container;\n            } while (currentNode);\n        }\n        let result = this.getGlobalScope(referenceType, context);\n        for (let i = scopes.length - 1; i >= 0; i--) {\n            result = this.createScope(scopes[i], result);\n        }\n        return result;\n    }\n    /**\n     * Create a scope for the given collection of AST node descriptions.\n     */\n    createScope(elements, outerScope, options) {\n        return new StreamScope(stream(elements), outerScope, options);\n    }\n    /**\n     * Create a scope for the given collection of AST nodes, which need to be transformed into respective\n     * descriptions first. This is done using the `NameProvider` and `AstNodeDescriptionProvider` services.\n     */\n    createScopeForNodes(elements, outerScope, options) {\n        const s = stream(elements).map(e => {\n            const name = this.nameProvider.getName(e);\n            if (name) {\n                return this.descriptions.createDescription(e, name);\n            }\n            return undefined;\n        }).nonNullable();\n        return new StreamScope(s, outerScope, options);\n    }\n    /**\n     * Create a global scope filtered for the given reference type.\n     */\n    getGlobalScope(referenceType, _context) {\n        return this.globalScopeCache.get(referenceType, () => new MapScope(this.indexManager.allElements(referenceType)));\n    }\n}\n//# sourceMappingURL=scope-provider.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI } from 'vscode-uri';\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { findNodesForProperty } from '../utils/grammar-utils.js';\nexport function isAstNodeWithComment(node) {\n    return typeof node.$comment === 'string';\n}\nfunction isIntermediateReference(obj) {\n    return typeof obj === 'object' && !!obj && ('$ref' in obj || '$error' in obj);\n}\nexport class DefaultJsonSerializer {\n    constructor(services) {\n        /** The set of AstNode properties to be ignored by the serializer. */\n        this.ignoreProperties = new Set(['$container', '$containerProperty', '$containerIndex', '$document', '$cstNode']);\n        this.langiumDocuments = services.shared.workspace.LangiumDocuments;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    serialize(node, options = {}) {\n        const specificReplacer = options === null || options === void 0 ? void 0 : options.replacer;\n        const defaultReplacer = (key, value) => this.replacer(key, value, options);\n        const replacer = specificReplacer ? (key, value) => specificReplacer(key, value, defaultReplacer) : defaultReplacer;\n        try {\n            this.currentDocument = getDocument(node);\n            return JSON.stringify(node, replacer, options === null || options === void 0 ? void 0 : options.space);\n        }\n        finally {\n            this.currentDocument = undefined;\n        }\n    }\n    deserialize(content, options = {}) {\n        const root = JSON.parse(content);\n        this.linkNode(root, root, options);\n        return root;\n    }\n    replacer(key, value, { refText, sourceText, textRegions, comments, uriConverter }) {\n        var _a, _b, _c, _d;\n        if (this.ignoreProperties.has(key)) {\n            return undefined;\n        }\n        else if (isReference(value)) {\n            const refValue = value.ref;\n            const $refText = refText ? value.$refText : undefined;\n            if (refValue) {\n                const targetDocument = getDocument(refValue);\n                let targetUri = '';\n                if (this.currentDocument && this.currentDocument !== targetDocument) {\n                    if (uriConverter) {\n                        targetUri = uriConverter(targetDocument.uri, value);\n                    }\n                    else {\n                        targetUri = targetDocument.uri.toString();\n                    }\n                }\n                const targetPath = this.astNodeLocator.getAstNodePath(refValue);\n                return {\n                    $ref: `${targetUri}#${targetPath}`,\n                    $refText\n                };\n            }\n            else {\n                return {\n                    $error: (_b = (_a = value.error) === null || _a === void 0 ? void 0 : _a.message) !== null && _b !== void 0 ? _b : 'Could not resolve reference',\n                    $refText\n                };\n            }\n        }\n        else if (isAstNode(value)) {\n            let astNode = undefined;\n            if (textRegions) {\n                astNode = this.addAstNodeRegionWithAssignmentsTo(Object.assign({}, value));\n                if ((!key || value.$document) && (astNode === null || astNode === void 0 ? void 0 : astNode.$textRegion)) {\n                    // The document URI is added to the root node of the resulting JSON tree\n                    astNode.$textRegion.documentURI = (_c = this.currentDocument) === null || _c === void 0 ? void 0 : _c.uri.toString();\n                }\n            }\n            if (sourceText && !key) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                astNode.$sourceText = (_d = value.$cstNode) === null || _d === void 0 ? void 0 : _d.text;\n            }\n            if (comments) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                const comment = this.commentProvider.getComment(value);\n                if (comment) {\n                    astNode.$comment = comment.replace(/\\r/g, '');\n                }\n            }\n            return astNode !== null && astNode !== void 0 ? astNode : value;\n        }\n        else {\n            return value;\n        }\n    }\n    addAstNodeRegionWithAssignmentsTo(node) {\n        const createDocumentSegment = cstNode => ({\n            offset: cstNode.offset,\n            end: cstNode.end,\n            length: cstNode.length,\n            range: cstNode.range,\n        });\n        if (node.$cstNode) {\n            const textRegion = node.$textRegion = createDocumentSegment(node.$cstNode);\n            const assignments = textRegion.assignments = {};\n            Object.keys(node).filter(key => !key.startsWith('$')).forEach(key => {\n                const propertyAssignments = findNodesForProperty(node.$cstNode, key).map(createDocumentSegment);\n                if (propertyAssignments.length !== 0) {\n                    assignments[key] = propertyAssignments;\n                }\n            });\n            return node;\n        }\n        return undefined;\n    }\n    linkNode(node, root, options, container, containerProperty, containerIndex) {\n        for (const [propertyName, item] of Object.entries(node)) {\n            if (Array.isArray(item)) {\n                for (let index = 0; index < item.length; index++) {\n                    const element = item[index];\n                    if (isIntermediateReference(element)) {\n                        item[index] = this.reviveReference(node, propertyName, root, element, options);\n                    }\n                    else if (isAstNode(element)) {\n                        this.linkNode(element, root, options, node, propertyName, index);\n                    }\n                }\n            }\n            else if (isIntermediateReference(item)) {\n                node[propertyName] = this.reviveReference(node, propertyName, root, item, options);\n            }\n            else if (isAstNode(item)) {\n                this.linkNode(item, root, options, node, propertyName);\n            }\n        }\n        const mutable = node;\n        mutable.$container = container;\n        mutable.$containerProperty = containerProperty;\n        mutable.$containerIndex = containerIndex;\n    }\n    reviveReference(container, property, root, reference, options) {\n        let refText = reference.$refText;\n        let error = reference.$error;\n        if (reference.$ref) {\n            const ref = this.getRefNode(root, reference.$ref, options.uriConverter);\n            if (isAstNode(ref)) {\n                if (!refText) {\n                    refText = this.nameProvider.getName(ref);\n                }\n                return {\n                    $refText: refText !== null && refText !== void 0 ? refText : '',\n                    ref\n                };\n            }\n            else {\n                error = ref;\n            }\n        }\n        if (error) {\n            const ref = {\n                $refText: refText !== null && refText !== void 0 ? refText : ''\n            };\n            ref.error = {\n                container,\n                property,\n                message: error,\n                reference: ref\n            };\n            return ref;\n        }\n        else {\n            return undefined;\n        }\n    }\n    getRefNode(root, uri, uriConverter) {\n        try {\n            const fragmentIndex = uri.indexOf('#');\n            if (fragmentIndex === 0) {\n                const node = this.astNodeLocator.getAstNode(root, uri.substring(1));\n                if (!node) {\n                    return 'Could not resolve path: ' + uri;\n                }\n                return node;\n            }\n            if (fragmentIndex < 0) {\n                const documentUri = uriConverter ? uriConverter(uri) : URI.parse(uri);\n                const document = this.langiumDocuments.getDocument(documentUri);\n                if (!document) {\n                    return 'Could not find document for URI: ' + uri;\n                }\n                return document.parseResult.value;\n            }\n            const documentUri = uriConverter ? uriConverter(uri.substring(0, fragmentIndex)) : URI.parse(uri.substring(0, fragmentIndex));\n            const document = this.langiumDocuments.getDocument(documentUri);\n            if (!document) {\n                return 'Could not find document for URI: ' + uri;\n            }\n            if (fragmentIndex === uri.length - 1) {\n                return document.parseResult.value;\n            }\n            const node = this.astNodeLocator.getAstNode(document.parseResult.value, uri.substring(fragmentIndex + 1));\n            if (!node) {\n                return 'Could not resolve URI: ' + uri;\n            }\n            return node;\n        }\n        catch (err) {\n            return String(err);\n        }\n    }\n}\n//# sourceMappingURL=json-serializer.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { UriUtils } from './utils/uri-utils.js';\n/**\n * Generic registry for Langium services, but capable of being used with extending service sets as well (such as the lsp-complete LangiumCoreServices set)\n */\nexport class DefaultServiceRegistry {\n    register(language) {\n        if (!this.singleton && !this.map) {\n            // This is the first language to be registered; store it as singleton.\n            this.singleton = language;\n            return;\n        }\n        if (!this.map) {\n            this.map = {};\n            if (this.singleton) {\n                // Move the previous singleton instance to the new map.\n                for (const ext of this.singleton.LanguageMetaData.fileExtensions) {\n                    this.map[ext] = this.singleton;\n                }\n                this.singleton = undefined;\n            }\n        }\n        // Store the language services in the map.\n        for (const ext of language.LanguageMetaData.fileExtensions) {\n            if (this.map[ext] !== undefined && this.map[ext] !== language) {\n                console.warn(`The file extension ${ext} is used by multiple languages. It is now assigned to '${language.LanguageMetaData.languageId}'.`);\n            }\n            this.map[ext] = language;\n        }\n    }\n    getServices(uri) {\n        if (this.singleton !== undefined) {\n            return this.singleton;\n        }\n        if (this.map === undefined) {\n            throw new Error('The service registry is empty. Use `register` to register the services of a language.');\n        }\n        const ext = UriUtils.extname(uri);\n        const services = this.map[ext];\n        if (!services) {\n            throw new Error(`The service registry contains no services for the extension '${ext}'.`);\n        }\n        return services;\n    }\n    get all() {\n        if (this.singleton !== undefined) {\n            return [this.singleton];\n        }\n        if (this.map !== undefined) {\n            return Object.values(this.map);\n        }\n        return [];\n    }\n}\n//# sourceMappingURL=service-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isLinkingError } from '../syntax-tree.js';\nimport { getDocument, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { toDocumentSegment } from '../utils/cst-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultAstNodeDescriptionProvider {\n    constructor(services) {\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n    }\n    createDescription(node, name, document = getDocument(node)) {\n        name !== null && name !== void 0 ? name : (name = this.nameProvider.getName(node));\n        const path = this.astNodeLocator.getAstNodePath(node);\n        if (!name) {\n            throw new Error(`Node at path ${path} has no name.`);\n        }\n        let nameNodeSegment;\n        const nameSegmentGetter = () => { var _a; return nameNodeSegment !== null && nameNodeSegment !== void 0 ? nameNodeSegment : (nameNodeSegment = toDocumentSegment((_a = this.nameProvider.getNameNode(node)) !== null && _a !== void 0 ? _a : node.$cstNode)); };\n        return {\n            node,\n            name,\n            get nameSegment() {\n                return nameSegmentGetter();\n            },\n            selectionSegment: toDocumentSegment(node.$cstNode),\n            type: node.$type,\n            documentUri: document.uri,\n            path\n        };\n    }\n}\nexport class DefaultReferenceDescriptionProvider {\n    constructor(services) {\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    async createDescriptions(document, cancelToken = CancellationToken.None) {\n        const descr = [];\n        const rootNode = document.parseResult.value;\n        for (const astNode of streamAst(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(astNode).filter(refInfo => !isLinkingError(refInfo)).forEach(refInfo => {\n                // TODO: Consider logging a warning or throw an exception when DocumentState is < than Linked\n                const description = this.createDescription(refInfo);\n                if (description) {\n                    descr.push(description);\n                }\n            });\n        }\n        return descr;\n    }\n    createDescription(refInfo) {\n        const targetNodeDescr = refInfo.reference.$nodeDescription;\n        const refCstNode = refInfo.reference.$refNode;\n        if (!targetNodeDescr || !refCstNode) {\n            return undefined;\n        }\n        const docUri = getDocument(refInfo.container).uri;\n        return {\n            sourceUri: docUri,\n            sourcePath: this.nodeLocator.getAstNodePath(refInfo.container),\n            targetUri: targetNodeDescr.documentUri,\n            targetPath: targetNodeDescr.path,\n            segment: toDocumentSegment(refCstNode),\n            local: UriUtils.equals(targetNodeDescr.documentUri, docUri)\n        };\n    }\n}\n//# sourceMappingURL=ast-descriptions.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DefaultAstNodeLocator {\n    constructor() {\n        this.segmentSeparator = '/';\n        this.indexSeparator = '@';\n    }\n    getAstNodePath(node) {\n        if (node.$container) {\n            const containerPath = this.getAstNodePath(node.$container);\n            const newSegment = this.getPathSegment(node);\n            const nodePath = containerPath + this.segmentSeparator + newSegment;\n            return nodePath;\n        }\n        return '';\n    }\n    getPathSegment({ $containerProperty, $containerIndex }) {\n        if (!$containerProperty) {\n            throw new Error(\"Missing '$containerProperty' in AST node.\");\n        }\n        if ($containerIndex !== undefined) {\n            return $containerProperty + this.indexSeparator + $containerIndex;\n        }\n        return $containerProperty;\n    }\n    getAstNode(node, path) {\n        const segments = path.split(this.segmentSeparator);\n        return segments.reduce((previousValue, currentValue) => {\n            if (!previousValue || currentValue.length === 0) {\n                return previousValue;\n            }\n            const propertyIndex = currentValue.indexOf(this.indexSeparator);\n            if (propertyIndex > 0) {\n                const property = currentValue.substring(0, propertyIndex);\n                const arrayIndex = parseInt(currentValue.substring(propertyIndex + 1));\n                const array = previousValue[property];\n                return array === null || array === void 0 ? void 0 : array[arrayIndex];\n            }\n            return previousValue[currentValue];\n        }, node);\n    }\n}\n//# sourceMappingURL=ast-node-locator.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Deferred } from '../utils/promise-utils.js';\n/**\n * Base configuration provider for building up other configuration providers\n */\nexport class DefaultConfigurationProvider {\n    constructor(services) {\n        this._ready = new Deferred();\n        this.settings = {};\n        this.workspaceConfig = false;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    initialize(params) {\n        var _a, _b;\n        this.workspaceConfig = (_b = (_a = params.capabilities.workspace) === null || _a === void 0 ? void 0 : _a.configuration) !== null && _b !== void 0 ? _b : false;\n    }\n    async initialized(params) {\n        if (this.workspaceConfig) {\n            if (params.register) {\n                // params.register(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const languages = this.serviceRegistry.all;\n                params.register({\n                    // Listen to configuration changes for all languages\n                    section: languages.map(lang => this.toSectionName(lang.LanguageMetaData.languageId))\n                });\n            }\n            if (params.fetchConfiguration) {\n                // params.fetchConfiguration(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const configToUpdate = this.serviceRegistry.all.map(lang => ({\n                    // Fetch the configuration changes for all languages\n                    section: this.toSectionName(lang.LanguageMetaData.languageId)\n                }));\n                // get workspace configurations (default scope URI)\n                const configs = await params.fetchConfiguration(configToUpdate);\n                configToUpdate.forEach((conf, idx) => {\n                    this.updateSectionConfiguration(conf.section, configs[idx]);\n                });\n            }\n        }\n        this._ready.resolve();\n    }\n    /**\n     *  Updates the cached configurations using the `change` notification parameters.\n     *\n     * @param change The parameters of a change configuration notification.\n     * `settings` property of the change object could be expressed as `Record<string, Record<string, any>>`\n     */\n    updateConfiguration(change) {\n        if (!change.settings) {\n            return;\n        }\n        Object.keys(change.settings).forEach(section => {\n            this.updateSectionConfiguration(section, change.settings[section]);\n        });\n    }\n    updateSectionConfiguration(section, configuration) {\n        this.settings[section] = configuration;\n    }\n    /**\n    * Returns a configuration value stored for the given language.\n    *\n    * @param language The language id\n    * @param configuration Configuration name\n    */\n    async getConfiguration(language, configuration) {\n        await this.ready;\n        const sectionName = this.toSectionName(language);\n        if (this.settings[sectionName]) {\n            return this.settings[sectionName][configuration];\n        }\n    }\n    toSectionName(languageId) {\n        return `${languageId}`;\n    }\n}\n//# sourceMappingURL=configuration.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Disposable } from '../utils/disposable.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { OperationCancelled, interruptAndCheck } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { ValidationCategory } from '../validation/validation-registry.js';\nimport { DocumentState } from './documents.js';\nexport class DefaultDocumentBuilder {\n    constructor(services) {\n        this.updateBuildOptions = {\n            // Default: run only the built-in validation checks and those in the _fast_ category (includes those without category)\n            validation: {\n                categories: ['built-in', 'fast']\n            }\n        };\n        this.updateListeners = [];\n        this.buildPhaseListeners = new MultiMap();\n        this.buildState = new Map();\n        this.documentBuildWaiters = new Map();\n        this.currentState = DocumentState.Changed;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.indexManager = services.workspace.IndexManager;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    async build(documents, options = {}, cancelToken = CancellationToken.None) {\n        var _a, _b;\n        for (const document of documents) {\n            const key = document.uri.toString();\n            if (document.state === DocumentState.Validated) {\n                if (typeof options.validation === 'boolean' && options.validation) {\n                    // Force re-running all validation checks\n                    document.state = DocumentState.IndexedReferences;\n                    document.diagnostics = undefined;\n                    this.buildState.delete(key);\n                }\n                else if (typeof options.validation === 'object') {\n                    const buildState = this.buildState.get(key);\n                    const previousCategories = (_a = buildState === null || buildState === void 0 ? void 0 : buildState.result) === null || _a === void 0 ? void 0 : _a.validationChecks;\n                    if (previousCategories) {\n                        // Validation with explicit options was requested for a document that has already been partly validated.\n                        // In this case, we need to merge the previous validation categories with the new ones.\n                        const newCategories = (_b = options.validation.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n                        const categories = newCategories.filter(c => !previousCategories.includes(c));\n                        if (categories.length > 0) {\n                            this.buildState.set(key, {\n                                completed: false,\n                                options: {\n                                    validation: Object.assign(Object.assign({}, options.validation), { categories })\n                                },\n                                result: buildState.result\n                            });\n                            document.state = DocumentState.IndexedReferences;\n                        }\n                    }\n                }\n            }\n            else {\n                // Default: forget any previous build options\n                this.buildState.delete(key);\n            }\n        }\n        this.currentState = DocumentState.Changed;\n        await this.emitUpdate(documents.map(e => e.uri), []);\n        await this.buildDocuments(documents, options, cancelToken);\n    }\n    async update(changed, deleted, cancelToken = CancellationToken.None) {\n        this.currentState = DocumentState.Changed;\n        // Remove all metadata of documents that are reported as deleted\n        for (const deletedUri of deleted) {\n            this.langiumDocuments.deleteDocument(deletedUri);\n            this.buildState.delete(deletedUri.toString());\n            this.indexManager.remove(deletedUri);\n        }\n        // Set the state of all changed documents to `Changed` so they are completely rebuilt\n        for (const changedUri of changed) {\n            const invalidated = this.langiumDocuments.invalidateDocument(changedUri);\n            if (!invalidated) {\n                // We create an unparsed, invalid document.\n                // This will be parsed as soon as we reach the first document builder phase.\n                // This allows to cancel the parsing process later in case we need it.\n                const newDocument = this.langiumDocumentFactory.fromModel({ $type: 'INVALID' }, changedUri);\n                newDocument.state = DocumentState.Changed;\n                this.langiumDocuments.addDocument(newDocument);\n            }\n            this.buildState.delete(changedUri.toString());\n        }\n        // Set the state of all documents that should be relinked to `ComputedScopes` (if not already lower)\n        const allChangedUris = stream(changed).concat(deleted).map(uri => uri.toString()).toSet();\n        this.langiumDocuments.all\n            .filter(doc => !allChangedUris.has(doc.uri.toString()) && this.shouldRelink(doc, allChangedUris))\n            .forEach(doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            linker.unlink(doc);\n            doc.state = Math.min(doc.state, DocumentState.ComputedScopes);\n            doc.diagnostics = undefined;\n        });\n        // Notify listeners of the update\n        await this.emitUpdate(changed, deleted);\n        // Only allow interrupting the execution after all state changes are done\n        await interruptAndCheck(cancelToken);\n        // Collect all documents that we should rebuild\n        const rebuildDocuments = this.langiumDocuments.all\n            .filter(doc => {\n            var _a;\n            // This includes those that were reported as changed and those that we selected for relinking\n            return doc.state < DocumentState.Linked\n                // This includes those for which a previous build has been cancelled\n                || !((_a = this.buildState.get(doc.uri.toString())) === null || _a === void 0 ? void 0 : _a.completed);\n        })\n            .toArray();\n        await this.buildDocuments(rebuildDocuments, this.updateBuildOptions, cancelToken);\n    }\n    async emitUpdate(changed, deleted) {\n        await Promise.all(this.updateListeners.map(listener => listener(changed, deleted)));\n    }\n    /**\n     * Check whether the given document should be relinked after changes were found in the given URIs.\n     */\n    shouldRelink(document, changedUris) {\n        // Relink documents with linking errors -- maybe those references can be resolved now\n        if (document.references.some(ref => ref.error !== undefined)) {\n            return true;\n        }\n        // Check whether the document is affected by any of the changed URIs\n        return this.indexManager.isAffected(document, changedUris);\n    }\n    onUpdate(callback) {\n        this.updateListeners.push(callback);\n        return Disposable.create(() => {\n            const index = this.updateListeners.indexOf(callback);\n            if (index >= 0) {\n                this.updateListeners.splice(index, 1);\n            }\n        });\n    }\n    /**\n     * Build the given documents by stepping through all build phases. If a document's state indicates\n     * that a certain build phase is already done, the phase is skipped for that document.\n     */\n    async buildDocuments(documents, options, cancelToken) {\n        this.prepareBuild(documents, options);\n        // 0. Parse content\n        await this.runCancelable(documents, DocumentState.Parsed, cancelToken, doc => this.langiumDocumentFactory.update(doc, cancelToken));\n        // 1. Index content\n        await this.runCancelable(documents, DocumentState.IndexedContent, cancelToken, doc => this.indexManager.updateContent(doc, cancelToken));\n        // 2. Compute scopes\n        await this.runCancelable(documents, DocumentState.ComputedScopes, cancelToken, async (doc) => {\n            const scopeComputation = this.serviceRegistry.getServices(doc.uri).references.ScopeComputation;\n            doc.precomputedScopes = await scopeComputation.computeLocalScopes(doc, cancelToken);\n        });\n        // 3. Linking\n        await this.runCancelable(documents, DocumentState.Linked, cancelToken, doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            return linker.link(doc, cancelToken);\n        });\n        // 4. Index references\n        await this.runCancelable(documents, DocumentState.IndexedReferences, cancelToken, doc => this.indexManager.updateReferences(doc, cancelToken));\n        // 5. Validation\n        const toBeValidated = documents.filter(doc => this.shouldValidate(doc));\n        await this.runCancelable(toBeValidated, DocumentState.Validated, cancelToken, doc => this.validate(doc, cancelToken));\n        // If we've made it to this point without being cancelled, we can mark the build state as completed.\n        for (const doc of documents) {\n            const state = this.buildState.get(doc.uri.toString());\n            if (state) {\n                state.completed = true;\n            }\n        }\n    }\n    prepareBuild(documents, options) {\n        for (const doc of documents) {\n            const key = doc.uri.toString();\n            const state = this.buildState.get(key);\n            // If the document has no previous build state, we set it. If it has one, but it's already marked\n            // as completed, we overwrite it. If the previous build was not completed, we keep its state\n            // and continue where it was cancelled.\n            if (!state || state.completed) {\n                this.buildState.set(key, {\n                    completed: false,\n                    options,\n                    result: state === null || state === void 0 ? void 0 : state.result\n                });\n            }\n        }\n    }\n    async runCancelable(documents, targetState, cancelToken, callback) {\n        const filtered = documents.filter(e => e.state < targetState);\n        for (const document of filtered) {\n            await interruptAndCheck(cancelToken);\n            await callback(document);\n            document.state = targetState;\n        }\n        await this.notifyBuildPhase(filtered, targetState, cancelToken);\n        this.currentState = targetState;\n    }\n    onBuildPhase(targetState, callback) {\n        this.buildPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.buildPhaseListeners.delete(targetState, callback);\n        });\n    }\n    waitUntil(state, uriOrToken, cancelToken) {\n        let uri = undefined;\n        if (uriOrToken && 'path' in uriOrToken) {\n            uri = uriOrToken;\n        }\n        else {\n            cancelToken = uriOrToken;\n        }\n        cancelToken !== null && cancelToken !== void 0 ? cancelToken : (cancelToken = CancellationToken.None);\n        if (uri) {\n            const document = this.langiumDocuments.getDocument(uri);\n            if (document && document.state > state) {\n                return Promise.resolve(uri);\n            }\n        }\n        if (this.currentState >= state) {\n            return Promise.resolve(undefined);\n        }\n        else if (cancelToken.isCancellationRequested) {\n            return Promise.reject(OperationCancelled);\n        }\n        return new Promise((resolve, reject) => {\n            const buildDisposable = this.onBuildPhase(state, () => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                if (uri) {\n                    const document = this.langiumDocuments.getDocument(uri);\n                    resolve(document === null || document === void 0 ? void 0 : document.uri);\n                }\n                else {\n                    resolve(undefined);\n                }\n            });\n            const cancelDisposable = cancelToken.onCancellationRequested(() => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                reject(OperationCancelled);\n            });\n        });\n    }\n    async notifyBuildPhase(documents, state, cancelToken) {\n        if (documents.length === 0) {\n            // Don't notify when no document has been processed\n            return;\n        }\n        const listeners = this.buildPhaseListeners.get(state);\n        for (const listener of listeners) {\n            await interruptAndCheck(cancelToken);\n            await listener(documents, cancelToken);\n        }\n    }\n    /**\n     * Determine whether the given document should be validated during a build. The default\n     * implementation checks the `validation` property of the build options. If it's set to `true`\n     * or a `ValidationOptions` object, the document is included in the validation phase.\n     */\n    shouldValidate(document) {\n        return Boolean(this.getBuildOptions(document).validation);\n    }\n    /**\n     * Run validation checks on the given document and store the resulting diagnostics in the document.\n     * If the document already contains diagnostics, the new ones are added to the list.\n     */\n    async validate(document, cancelToken) {\n        var _a, _b;\n        const validator = this.serviceRegistry.getServices(document.uri).validation.DocumentValidator;\n        const validationSetting = this.getBuildOptions(document).validation;\n        const options = typeof validationSetting === 'object' ? validationSetting : undefined;\n        const diagnostics = await validator.validateDocument(document, options, cancelToken);\n        if (document.diagnostics) {\n            document.diagnostics.push(...diagnostics);\n        }\n        else {\n            document.diagnostics = diagnostics;\n        }\n        // Store information about the executed validation in the build state\n        const state = this.buildState.get(document.uri.toString());\n        if (state) {\n            (_a = state.result) !== null && _a !== void 0 ? _a : (state.result = {});\n            const newCategories = (_b = options === null || options === void 0 ? void 0 : options.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n            if (state.result.validationChecks) {\n                state.result.validationChecks.push(...newCategories);\n            }\n            else {\n                state.result.validationChecks = [...newCategories];\n            }\n        }\n    }\n    getBuildOptions(document) {\n        var _a, _b;\n        return (_b = (_a = this.buildState.get(document.uri.toString())) === null || _a === void 0 ? void 0 : _a.options) !== null && _b !== void 0 ? _b : {};\n    }\n}\n//# sourceMappingURL=document-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { ContextCache } from '../utils/caching.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultIndexManager {\n    constructor(services) {\n        /**\n         * The symbol index stores all `AstNodeDescription` items exported by a document.\n         * The key used in this map is the string representation of the specific document URI.\n         */\n        this.symbolIndex = new Map();\n        /**\n         * This is a cache for the `allElements()` method.\n         * It caches the descriptions from `symbolIndex` grouped by types.\n         */\n        this.symbolByTypeIndex = new ContextCache();\n        /**\n         * This index keeps track of all `ReferenceDescription` items exported by a document.\n         * This is used to compute which elements are affected by a document change\n         * and for finding references to an AST node.\n         */\n        this.referenceIndex = new Map();\n        this.documents = services.workspace.LangiumDocuments;\n        this.serviceRegistry = services.ServiceRegistry;\n        this.astReflection = services.AstReflection;\n    }\n    findAllReferences(targetNode, astNodePath) {\n        const targetDocUri = getDocument(targetNode).uri;\n        const result = [];\n        this.referenceIndex.forEach(docRefs => {\n            docRefs.forEach(refDescr => {\n                if (UriUtils.equals(refDescr.targetUri, targetDocUri) && refDescr.targetPath === astNodePath) {\n                    result.push(refDescr);\n                }\n            });\n        });\n        return stream(result);\n    }\n    allElements(nodeType, uris) {\n        let documentUris = stream(this.symbolIndex.keys());\n        if (uris) {\n            documentUris = documentUris.filter(uri => !uris || uris.has(uri));\n        }\n        return documentUris\n            .map(uri => this.getFileDescriptions(uri, nodeType))\n            .flat();\n    }\n    getFileDescriptions(uri, nodeType) {\n        var _a;\n        if (!nodeType) {\n            return (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n        }\n        const descriptions = this.symbolByTypeIndex.get(uri, nodeType, () => {\n            var _a;\n            const allFileDescriptions = (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n            return allFileDescriptions.filter(e => this.astReflection.isSubtype(e.type, nodeType));\n        });\n        return descriptions;\n    }\n    remove(uri) {\n        const uriString = uri.toString();\n        this.symbolIndex.delete(uriString);\n        this.symbolByTypeIndex.clear(uriString);\n        this.referenceIndex.delete(uriString);\n    }\n    async updateContent(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const exports = await services.references.ScopeComputation.computeExports(document, cancelToken);\n        const uri = document.uri.toString();\n        this.symbolIndex.set(uri, exports);\n        this.symbolByTypeIndex.clear(uri);\n    }\n    async updateReferences(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const indexData = await services.workspace.ReferenceDescriptionProvider.createDescriptions(document, cancelToken);\n        this.referenceIndex.set(document.uri.toString(), indexData);\n    }\n    isAffected(document, changedUris) {\n        const references = this.referenceIndex.get(document.uri.toString());\n        if (!references) {\n            return false;\n        }\n        return references.some(ref => !ref.local && changedUris.has(ref.targetUri.toString()));\n    }\n}\n//# sourceMappingURL=index-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Deferred, interruptAndCheck } from '../utils/promise-utils.js';\nimport { URI, UriUtils } from '../utils/uri-utils.js';\nexport class DefaultWorkspaceManager {\n    constructor(services) {\n        this.initialBuildOptions = {};\n        this._ready = new Deferred();\n        this.serviceRegistry = services.ServiceRegistry;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.documentBuilder = services.workspace.DocumentBuilder;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n        this.mutex = services.workspace.WorkspaceLock;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    initialize(params) {\n        var _a;\n        this.folders = (_a = params.workspaceFolders) !== null && _a !== void 0 ? _a : undefined;\n    }\n    initialized(_params) {\n        // Initialize the workspace even if there are no workspace folders\n        // We still want to load additional documents (language library or similar) during initialization\n        return this.mutex.write(token => { var _a; return this.initializeWorkspace((_a = this.folders) !== null && _a !== void 0 ? _a : [], token); });\n    }\n    async initializeWorkspace(folders, cancelToken = CancellationToken.None) {\n        const documents = await this.performStartup(folders);\n        // Only after creating all documents do we check whether we need to cancel the initialization\n        // The document builder will later pick up on all unprocessed documents\n        await interruptAndCheck(cancelToken);\n        await this.documentBuilder.build(documents, this.initialBuildOptions, cancelToken);\n    }\n    /**\n     * Performs the uninterruptable startup sequence of the workspace manager.\n     * This methods loads all documents in the workspace and other documents and returns them.\n     */\n    async performStartup(folders) {\n        const fileExtensions = this.serviceRegistry.all.flatMap(e => e.LanguageMetaData.fileExtensions);\n        const documents = [];\n        const collector = (document) => {\n            documents.push(document);\n            if (!this.langiumDocuments.hasDocument(document.uri)) {\n                this.langiumDocuments.addDocument(document);\n            }\n        };\n        // Even though we don't await the initialization of the workspace manager,\n        // we can still assume that all library documents and file documents are loaded by the time we start building documents.\n        // The mutex prevents anything from performing a workspace build until we check the cancellation token\n        await this.loadAdditionalDocuments(folders, collector);\n        await Promise.all(folders.map(wf => [wf, this.getRootFolder(wf)])\n            .map(async (entry) => this.traverseFolder(...entry, fileExtensions, collector)));\n        this._ready.resolve();\n        return documents;\n    }\n    /**\n     * Load all additional documents that shall be visible in the context of the given workspace\n     * folders and add them to the collector. This can be used to include built-in libraries of\n     * your language, which can be either loaded from provided files or constructed in memory.\n     */\n    loadAdditionalDocuments(_folders, _collector) {\n        return Promise.resolve();\n    }\n    /**\n     * Determine the root folder of the source documents in the given workspace folder.\n     * The default implementation returns the URI of the workspace folder, but you can override\n     * this to return a subfolder like `src` instead.\n     */\n    getRootFolder(workspaceFolder) {\n        return URI.parse(workspaceFolder.uri);\n    }\n    /**\n     * Traverse the file system folder identified by the given URI and its subfolders. All\n     * contained files that match the file extensions are added to the collector.\n     */\n    async traverseFolder(workspaceFolder, folderPath, fileExtensions, collector) {\n        const content = await this.fileSystemProvider.readDirectory(folderPath);\n        await Promise.all(content.map(async (entry) => {\n            if (this.includeEntry(workspaceFolder, entry, fileExtensions)) {\n                if (entry.isDirectory) {\n                    await this.traverseFolder(workspaceFolder, entry.uri, fileExtensions, collector);\n                }\n                else if (entry.isFile) {\n                    const document = await this.langiumDocuments.getOrCreateDocument(entry.uri);\n                    collector(document);\n                }\n            }\n        }));\n    }\n    /**\n     * Determine whether the given folder entry shall be included while indexing the workspace.\n     */\n    includeEntry(_workspaceFolder, entry, fileExtensions) {\n        const name = UriUtils.basename(entry.uri);\n        if (name.startsWith('.')) {\n            return false;\n        }\n        if (entry.isDirectory) {\n            return name !== 'node_modules' && name !== 'out';\n        }\n        else if (entry.isFile) {\n            const extname = UriUtils.extname(entry.uri);\n            return fileExtensions.includes(extname);\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=workspace-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer as ChevrotainLexer } from 'chevrotain';\nexport class DefaultLexer {\n    constructor(services) {\n        const tokens = services.parser.TokenBuilder.buildTokens(services.Grammar, {\n            caseInsensitive: services.LanguageMetaData.caseInsensitive\n        });\n        this.tokenTypes = this.toTokenTypeDictionary(tokens);\n        const lexerTokens = isTokenTypeDictionary(tokens) ? Object.values(tokens) : tokens;\n        this.chevrotainLexer = new ChevrotainLexer(lexerTokens, {\n            positionTracking: 'full'\n        });\n    }\n    get definition() {\n        return this.tokenTypes;\n    }\n    tokenize(text) {\n        var _a;\n        const chevrotainResult = this.chevrotainLexer.tokenize(text);\n        return {\n            tokens: chevrotainResult.tokens,\n            errors: chevrotainResult.errors,\n            hidden: (_a = chevrotainResult.groups.hidden) !== null && _a !== void 0 ? _a : []\n        };\n    }\n    toTokenTypeDictionary(buildTokens) {\n        if (isTokenTypeDictionary(buildTokens))\n            return buildTokens;\n        const tokens = isIMultiModeLexerDefinition(buildTokens) ? Object.values(buildTokens.modes).flat() : buildTokens;\n        const res = {};\n        tokens.forEach(token => res[token.name] = token);\n        return res;\n    }\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenType array\n */\nexport function isTokenTypeArray(tokenVocabulary) {\n    return Array.isArray(tokenVocabulary) && (tokenVocabulary.length === 0 || 'name' in tokenVocabulary[0]);\n}\n/**\n * Returns a check whether the given TokenVocabulary is IMultiModeLexerDefinition\n */\nexport function isIMultiModeLexerDefinition(tokenVocabulary) {\n    return tokenVocabulary && 'modes' in tokenVocabulary && 'defaultMode' in tokenVocabulary;\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenTypeDictionary\n */\nexport function isTokenTypeDictionary(tokenVocabulary) {\n    return !isTokenTypeArray(tokenVocabulary) && !isIMultiModeLexerDefinition(tokenVocabulary);\n}\n//# sourceMappingURL=lexer.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position, Range } from 'vscode-languageserver-types';\nimport { NEWLINE_REGEXP, escapeRegExp } from '../utils/regexp-utils.js';\nimport { URI } from '../utils/uri-utils.js';\nexport function parseJSDoc(node, start, options) {\n    let opts;\n    let position;\n    if (typeof node === 'string') {\n        position = start;\n        opts = options;\n    }\n    else {\n        position = node.range.start;\n        opts = start;\n    }\n    if (!position) {\n        position = Position.create(0, 0);\n    }\n    const lines = getLines(node);\n    const normalizedOptions = normalizeOptions(opts);\n    const tokens = tokenize({\n        lines,\n        position,\n        options: normalizedOptions\n    });\n    return parseJSDocComment({\n        index: 0,\n        tokens,\n        position\n    });\n}\nexport function isJSDoc(node, options) {\n    const normalizedOptions = normalizeOptions(options);\n    const lines = getLines(node);\n    if (lines.length === 0) {\n        return false;\n    }\n    const first = lines[0];\n    const last = lines[lines.length - 1];\n    const firstRegex = normalizedOptions.start;\n    const lastRegex = normalizedOptions.end;\n    return Boolean(firstRegex === null || firstRegex === void 0 ? void 0 : firstRegex.exec(first)) && Boolean(lastRegex === null || lastRegex === void 0 ? void 0 : lastRegex.exec(last));\n}\nfunction getLines(node) {\n    let content = '';\n    if (typeof node === 'string') {\n        content = node;\n    }\n    else {\n        content = node.text;\n    }\n    const lines = content.split(NEWLINE_REGEXP);\n    return lines;\n}\nconst tagRegex = /\\s*(@([\\p{L}][\\p{L}\\p{N}]*)?)/uy;\nconst inlineTagRegex = /\\{(@[\\p{L}][\\p{L}\\p{N}]*)(\\s*)([^\\r\\n}]+)?\\}/gu;\nfunction tokenize(context) {\n    var _a, _b, _c;\n    const tokens = [];\n    let currentLine = context.position.line;\n    let currentCharacter = context.position.character;\n    for (let i = 0; i < context.lines.length; i++) {\n        const first = i === 0;\n        const last = i === context.lines.length - 1;\n        let line = context.lines[i];\n        let index = 0;\n        if (first && context.options.start) {\n            const match = (_a = context.options.start) === null || _a === void 0 ? void 0 : _a.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        else {\n            const match = (_b = context.options.line) === null || _b === void 0 ? void 0 : _b.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        if (last) {\n            const match = (_c = context.options.end) === null || _c === void 0 ? void 0 : _c.exec(line);\n            if (match) {\n                line = line.substring(0, match.index);\n            }\n        }\n        line = line.substring(0, lastCharacter(line));\n        const whitespaceEnd = skipWhitespace(line, index);\n        if (whitespaceEnd >= line.length) {\n            // Only create a break token when we already have previous tokens\n            if (tokens.length > 0) {\n                const position = Position.create(currentLine, currentCharacter);\n                tokens.push({\n                    type: 'break',\n                    content: '',\n                    range: Range.create(position, position)\n                });\n            }\n        }\n        else {\n            tagRegex.lastIndex = index;\n            const tagMatch = tagRegex.exec(line);\n            if (tagMatch) {\n                const fullMatch = tagMatch[0];\n                const value = tagMatch[1];\n                const start = Position.create(currentLine, currentCharacter + index);\n                const end = Position.create(currentLine, currentCharacter + index + fullMatch.length);\n                tokens.push({\n                    type: 'tag',\n                    content: value,\n                    range: Range.create(start, end)\n                });\n                index += fullMatch.length;\n                index = skipWhitespace(line, index);\n            }\n            if (index < line.length) {\n                const rest = line.substring(index);\n                const inlineTagMatches = Array.from(rest.matchAll(inlineTagRegex));\n                tokens.push(...buildInlineTokens(inlineTagMatches, rest, currentLine, currentCharacter + index));\n            }\n        }\n        currentLine++;\n        currentCharacter = 0;\n    }\n    // Remove last break token if there is one\n    if (tokens.length > 0 && tokens[tokens.length - 1].type === 'break') {\n        return tokens.slice(0, -1);\n    }\n    return tokens;\n}\nfunction buildInlineTokens(tags, line, lineIndex, characterIndex) {\n    const tokens = [];\n    if (tags.length === 0) {\n        const start = Position.create(lineIndex, characterIndex);\n        const end = Position.create(lineIndex, characterIndex + line.length);\n        tokens.push({\n            type: 'text',\n            content: line,\n            range: Range.create(start, end)\n        });\n    }\n    else {\n        let lastIndex = 0;\n        for (const match of tags) {\n            const matchIndex = match.index;\n            const startContent = line.substring(lastIndex, matchIndex);\n            if (startContent.length > 0) {\n                tokens.push({\n                    type: 'text',\n                    content: line.substring(lastIndex, matchIndex),\n                    range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, matchIndex + characterIndex))\n                });\n            }\n            let offset = startContent.length + 1;\n            const tagName = match[1];\n            tokens.push({\n                type: 'inline-tag',\n                content: tagName,\n                range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + tagName.length + characterIndex))\n            });\n            offset += tagName.length;\n            if (match.length === 4) {\n                offset += match[2].length;\n                const value = match[3];\n                tokens.push({\n                    type: 'text',\n                    content: value,\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + value.length + characterIndex))\n                });\n            }\n            else {\n                tokens.push({\n                    type: 'text',\n                    content: '',\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + characterIndex))\n                });\n            }\n            lastIndex = matchIndex + match[0].length;\n        }\n        const endContent = line.substring(lastIndex);\n        if (endContent.length > 0) {\n            tokens.push({\n                type: 'text',\n                content: endContent,\n                range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, lastIndex + characterIndex + endContent.length))\n            });\n        }\n    }\n    return tokens;\n}\nconst nonWhitespaceRegex = /\\S/;\nconst whitespaceEndRegex = /\\s*$/;\nfunction skipWhitespace(line, index) {\n    const match = line.substring(index).match(nonWhitespaceRegex);\n    if (match) {\n        return index + match.index;\n    }\n    else {\n        return line.length;\n    }\n}\nfunction lastCharacter(line) {\n    const match = line.match(whitespaceEndRegex);\n    if (match && typeof match.index === 'number') {\n        return match.index;\n    }\n    return undefined;\n}\n// Parsing\nfunction parseJSDocComment(context) {\n    var _a, _b, _c, _d;\n    const startPosition = Position.create(context.position.line, context.position.character);\n    if (context.tokens.length === 0) {\n        return new JSDocCommentImpl([], Range.create(startPosition, startPosition));\n    }\n    const elements = [];\n    while (context.index < context.tokens.length) {\n        const element = parseJSDocElement(context, elements[elements.length - 1]);\n        if (element) {\n            elements.push(element);\n        }\n    }\n    const start = (_b = (_a = elements[0]) === null || _a === void 0 ? void 0 : _a.range.start) !== null && _b !== void 0 ? _b : startPosition;\n    const end = (_d = (_c = elements[elements.length - 1]) === null || _c === void 0 ? void 0 : _c.range.end) !== null && _d !== void 0 ? _d : startPosition;\n    return new JSDocCommentImpl(elements, Range.create(start, end));\n}\nfunction parseJSDocElement(context, last) {\n    const next = context.tokens[context.index];\n    if (next.type === 'tag') {\n        return parseJSDocTag(context, false);\n    }\n    else if (next.type === 'text' || next.type === 'inline-tag') {\n        return parseJSDocText(context);\n    }\n    else {\n        appendEmptyLine(next, last);\n        context.index++;\n        return undefined;\n    }\n}\nfunction appendEmptyLine(token, element) {\n    if (element) {\n        const line = new JSDocLineImpl('', token.range);\n        if ('inlines' in element) {\n            element.inlines.push(line);\n        }\n        else {\n            element.content.inlines.push(line);\n        }\n    }\n}\nfunction parseJSDocText(context) {\n    let token = context.tokens[context.index];\n    const firstToken = token;\n    let lastToken = token;\n    const lines = [];\n    while (token && token.type !== 'break' && token.type !== 'tag') {\n        lines.push(parseJSDocInline(context));\n        lastToken = token;\n        token = context.tokens[context.index];\n    }\n    return new JSDocTextImpl(lines, Range.create(firstToken.range.start, lastToken.range.end));\n}\nfunction parseJSDocInline(context) {\n    const token = context.tokens[context.index];\n    if (token.type === 'inline-tag') {\n        return parseJSDocTag(context, true);\n    }\n    else {\n        return parseJSDocLine(context);\n    }\n}\nfunction parseJSDocTag(context, inline) {\n    const tagToken = context.tokens[context.index++];\n    const name = tagToken.content.substring(1);\n    const nextToken = context.tokens[context.index];\n    if ((nextToken === null || nextToken === void 0 ? void 0 : nextToken.type) === 'text') {\n        if (inline) {\n            const docLine = parseJSDocLine(context);\n            return new JSDocTagImpl(name, new JSDocTextImpl([docLine], docLine.range), inline, Range.create(tagToken.range.start, docLine.range.end));\n        }\n        else {\n            const textDoc = parseJSDocText(context);\n            return new JSDocTagImpl(name, textDoc, inline, Range.create(tagToken.range.start, textDoc.range.end));\n        }\n    }\n    else {\n        const range = tagToken.range;\n        return new JSDocTagImpl(name, new JSDocTextImpl([], range), inline, range);\n    }\n}\nfunction parseJSDocLine(context) {\n    const token = context.tokens[context.index++];\n    return new JSDocLineImpl(token.content, token.range);\n}\nfunction normalizeOptions(options) {\n    if (!options) {\n        return normalizeOptions({\n            start: '/**',\n            end: '*/',\n            line: '*'\n        });\n    }\n    const { start, end, line } = options;\n    return {\n        start: normalizeOption(start, true),\n        end: normalizeOption(end, false),\n        line: normalizeOption(line, true)\n    };\n}\nfunction normalizeOption(option, start) {\n    if (typeof option === 'string' || typeof option === 'object') {\n        const escaped = typeof option === 'string' ? escapeRegExp(option) : option.source;\n        if (start) {\n            return new RegExp(`^\\\\s*${escaped}`);\n        }\n        else {\n            return new RegExp(`\\\\s*${escaped}\\\\s*$`);\n        }\n    }\n    else {\n        return option;\n    }\n}\nclass JSDocCommentImpl {\n    constructor(elements, range) {\n        this.elements = elements;\n        this.range = range;\n    }\n    getTag(name) {\n        return this.getAllTags().find(e => e.name === name);\n    }\n    getTags(name) {\n        return this.getAllTags().filter(e => e.name === name);\n    }\n    getAllTags() {\n        return this.elements.filter((e) => 'name' in e);\n    }\n    toString() {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toString();\n            }\n            else {\n                const text = element.toString();\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n    toMarkdown(options) {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toMarkdown(options);\n            }\n            else {\n                const text = element.toMarkdown(options);\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n}\nclass JSDocTagImpl {\n    constructor(name, content, inline, range) {\n        this.name = name;\n        this.content = content;\n        this.inline = inline;\n        this.range = range;\n    }\n    toString() {\n        let text = `@${this.name}`;\n        const content = this.content.toString();\n        if (this.content.inlines.length === 1) {\n            text = `${text} ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n    toMarkdown(options) {\n        var _a, _b;\n        return (_b = (_a = options === null || options === void 0 ? void 0 : options.renderTag) === null || _a === void 0 ? void 0 : _a.call(options, this)) !== null && _b !== void 0 ? _b : this.toMarkdownDefault(options);\n    }\n    toMarkdownDefault(options) {\n        const content = this.content.toMarkdown(options);\n        if (this.inline) {\n            const rendered = renderInlineTag(this.name, content, options !== null && options !== void 0 ? options : {});\n            if (typeof rendered === 'string') {\n                return rendered;\n            }\n        }\n        let marker = '';\n        if ((options === null || options === void 0 ? void 0 : options.tag) === 'italic' || (options === null || options === void 0 ? void 0 : options.tag) === undefined) {\n            marker = '*';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold') {\n            marker = '**';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold-italic') {\n            marker = '***';\n        }\n        let text = `${marker}@${this.name}${marker}`;\n        if (this.content.inlines.length === 1) {\n            text = `${text} — ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n}\nfunction renderInlineTag(tag, content, options) {\n    var _a, _b;\n    if (tag === 'linkplain' || tag === 'linkcode' || tag === 'link') {\n        const index = content.indexOf(' ');\n        let display = content;\n        if (index > 0) {\n            const displayStart = skipWhitespace(content, index);\n            display = content.substring(displayStart);\n            content = content.substring(0, index);\n        }\n        if (tag === 'linkcode' || (tag === 'link' && options.link === 'code')) {\n            // Surround the display value in a markdown inline code block\n            display = `\\`${display}\\``;\n        }\n        const renderedLink = (_b = (_a = options.renderLink) === null || _a === void 0 ? void 0 : _a.call(options, content, display)) !== null && _b !== void 0 ? _b : renderLinkDefault(content, display);\n        return renderedLink;\n    }\n    return undefined;\n}\nfunction renderLinkDefault(content, display) {\n    try {\n        URI.parse(content, true);\n        return `[${display}](${content})`;\n    }\n    catch (_a) {\n        return content;\n    }\n}\nclass JSDocTextImpl {\n    constructor(lines, range) {\n        this.inlines = lines;\n        this.range = range;\n    }\n    toString() {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toString();\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n    toMarkdown(options) {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toMarkdown(options);\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n}\nclass JSDocLineImpl {\n    constructor(text, range) {\n        this.text = text;\n        this.range = range;\n    }\n    toString() {\n        return this.text;\n    }\n    toMarkdown() {\n        return this.text;\n    }\n}\nfunction fillNewlines(text) {\n    if (text.endsWith('\\n')) {\n        return '\\n';\n    }\n    else {\n        return '\\n\\n';\n    }\n}\n//# sourceMappingURL=jsdoc.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isJSDoc, parseJSDoc } from './jsdoc.js';\nexport class JSDocDocumentationProvider {\n    constructor(services) {\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    getDocumentation(node) {\n        const comment = this.commentProvider.getComment(node);\n        if (comment && isJSDoc(comment)) {\n            const parsedJSDoc = parseJSDoc(comment);\n            return parsedJSDoc.toMarkdown({\n                renderLink: (link, display) => {\n                    return this.documentationLinkRenderer(node, link, display);\n                },\n                renderTag: (tag) => {\n                    return this.documentationTagRenderer(node, tag);\n                }\n            });\n        }\n        return undefined;\n    }\n    documentationLinkRenderer(node, name, display) {\n        var _a;\n        const description = (_a = this.findNameInPrecomputedScopes(node, name)) !== null && _a !== void 0 ? _a : this.findNameInGlobalScope(node, name);\n        if (description && description.nameSegment) {\n            const line = description.nameSegment.range.start.line + 1;\n            const character = description.nameSegment.range.start.character + 1;\n            const uri = description.documentUri.with({ fragment: `L${line},${character}` });\n            return `[${display}](${uri.toString()})`;\n        }\n        else {\n            return undefined;\n        }\n    }\n    documentationTagRenderer(_node, _tag) {\n        // Fall back to the default tag rendering\n        return undefined;\n    }\n    findNameInPrecomputedScopes(node, name) {\n        const document = getDocument(node);\n        const precomputed = document.precomputedScopes;\n        if (!precomputed) {\n            return undefined;\n        }\n        let currentNode = node;\n        do {\n            const allDescriptions = precomputed.get(currentNode);\n            const description = allDescriptions.find(e => e.name === name);\n            if (description) {\n                return description;\n            }\n            currentNode = currentNode.$container;\n        } while (currentNode);\n        return undefined;\n    }\n    findNameInGlobalScope(node, name) {\n        const description = this.indexManager.allElements().find(e => e.name === name);\n        return description;\n    }\n}\n//# sourceMappingURL=documentation-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNodeWithComment } from '../serializer/json-serializer.js';\nimport { findCommentNode } from '../utils/cst-utils.js';\nexport class DefaultCommentProvider {\n    constructor(services) {\n        this.grammarConfig = () => services.parser.GrammarConfig;\n    }\n    getComment(node) {\n        var _a;\n        if (isAstNodeWithComment(node)) {\n            return node.$comment;\n        }\n        return (_a = findCommentNode(node.$cstNode, this.grammarConfig().multilineCommentRules)) === null || _a === void 0 ? void 0 : _a.text;\n    }\n}\n//# sourceMappingURL=comment-provider.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Module;\n(function (Module) {\n    Module.merge = (m1, m2) => _merge(_merge({}, m1), m2);\n})(Module || (Module = {}));\n/**\n * Given a set of modules, the inject function returns a lazily evaluated injector\n * that injects dependencies into the requested service when it is requested the\n * first time. Subsequent requests will return the same service.\n *\n * In the case of cyclic dependencies, an Error will be thrown. This can be fixed\n * by injecting a provider `() => T` instead of a `T`.\n *\n * Please note that the arguments may be objects or arrays. However, the result will\n * be an object. Using it with for..of will have no effect.\n *\n * @param module1 first Module\n * @param module2 (optional) second Module\n * @param module3 (optional) third Module\n * @param module4 (optional) fourth Module\n * @param module5 (optional) fifth Module\n * @param module6 (optional) sixth Module\n * @param module7 (optional) seventh Module\n * @param module8 (optional) eighth Module\n * @param module9 (optional) ninth Module\n * @returns a new object of type I\n */\nexport function inject(module1, module2, module3, module4, module5, module6, module7, module8, module9) {\n    const module = [module1, module2, module3, module4, module5, module6, module7, module8, module9].reduce(_merge, {});\n    return _inject(module);\n}\nconst isProxy = Symbol('isProxy');\n/**\n * Eagerly load all services in the given dependency injection container. This is sometimes\n * necessary because services can register event listeners in their constructors.\n */\nexport function eagerLoad(item) {\n    if (item && item[isProxy]) {\n        for (const value of Object.values(item)) {\n            eagerLoad(value);\n        }\n    }\n    return item;\n}\n/**\n * Helper function that returns an injector by creating a proxy.\n * Invariant: injector is of type I. If injector is undefined, then T = I.\n */\nfunction _inject(module, injector) {\n    const proxy = new Proxy({}, {\n        deleteProperty: () => false,\n        get: (obj, prop) => _resolve(obj, prop, module, injector || proxy),\n        getOwnPropertyDescriptor: (obj, prop) => (_resolve(obj, prop, module, injector || proxy), Object.getOwnPropertyDescriptor(obj, prop)),\n        has: (_, prop) => prop in module,\n        ownKeys: () => [...Reflect.ownKeys(module), isProxy] // used by for..in\n    });\n    proxy[isProxy] = true;\n    return proxy;\n}\n/**\n * Internally used to tag a requested dependency, directly before calling the factory.\n * This allows us to find cycles during instance creation.\n */\nconst __requested__ = Symbol();\n/**\n * Returns the value `obj[prop]`. If the value does not exist, yet, it is resolved from\n * the module description. The result of service factories is cached. Groups are\n * recursively proxied.\n *\n * @param obj an object holding all group proxies and services\n * @param prop the key of a value within obj\n * @param module an object containing groups and service factories\n * @param injector the first level proxy that provides access to all values\n * @returns the requested value `obj[prop]`\n * @throws Error if a dependency cycle is detected\n */\nfunction _resolve(obj, prop, module, injector) {\n    if (prop in obj) {\n        if (obj[prop] instanceof Error) {\n            throw new Error('Construction failure. Please make sure that your dependencies are constructable.', { cause: obj[prop] });\n        }\n        if (obj[prop] === __requested__) {\n            throw new Error('Cycle detected. Please make \"' + String(prop) + '\" lazy. See https://langium.org/docs/configuration-services/#resolving-cyclic-dependencies');\n        }\n        return obj[prop];\n    }\n    else if (prop in module) {\n        const value = module[prop];\n        obj[prop] = __requested__;\n        try {\n            obj[prop] = (typeof value === 'function') ? value(injector) : _inject(value, injector);\n        }\n        catch (error) {\n            obj[prop] = error instanceof Error ? error : undefined;\n            throw error;\n        }\n        return obj[prop];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * Performs a deep-merge of two modules by writing source entries into the target module.\n *\n * @param target the module which is written\n * @param source the module which is read\n * @returns the target module\n */\nfunction _merge(target, source) {\n    if (source) {\n        for (const [key, value2] of Object.entries(source)) {\n            if (value2 !== undefined) {\n                const value1 = target[key];\n                if (value1 !== null && value2 !== null && typeof value1 === 'object' && typeof value2 === 'object') {\n                    target[key] = _merge(value1, value2);\n                }\n                else {\n                    target[key] = value2;\n                }\n            }\n        }\n    }\n    return target;\n}\n//# sourceMappingURL=dependency-injection.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Deferred, OperationCancelled } from '../utils/promise-utils.js';\nimport { Emitter } from '../utils/event.js';\n/**\n * Default implementation of the async parser. This implementation only wraps the sync parser in a promise.\n *\n * A real implementation would create worker threads or web workers to offload the parsing work.\n */\nexport class DefaultAsyncParser {\n    constructor(services) {\n        this.syncParser = services.parser.LangiumParser;\n    }\n    parse(text) {\n        return Promise.resolve(this.syncParser.parse(text));\n    }\n}\nexport class AbstractThreadedAsyncParser {\n    constructor(services) {\n        /**\n         * The thread count determines how many threads are used to parse files in parallel.\n         * The default value is 8. Decreasing this value increases startup performance, but decreases parallel parsing performance.\n         */\n        this.threadCount = 8;\n        /**\n         * The termination delay determines how long the parser waits for a thread to finish after a cancellation request.\n         * The default value is 200(ms).\n         */\n        this.terminationDelay = 200;\n        this.workerPool = [];\n        this.queue = [];\n        this.hydrator = services.serializer.Hydrator;\n    }\n    initializeWorkers() {\n        while (this.workerPool.length < this.threadCount) {\n            const worker = this.createWorker();\n            worker.onReady(() => {\n                if (this.queue.length > 0) {\n                    const deferred = this.queue.shift();\n                    if (deferred) {\n                        worker.lock();\n                        deferred.resolve(worker);\n                    }\n                }\n            });\n            this.workerPool.push(worker);\n        }\n    }\n    async parse(text, cancelToken) {\n        const worker = await this.acquireParserWorker(cancelToken);\n        const deferred = new Deferred();\n        let timeout;\n        // If the cancellation token is requested, we wait for a certain time before terminating the worker.\n        // Since the cancellation token lives longer than the parsing process, we need to dispose the event listener.\n        // Otherwise, we might accidentally terminate the worker after the parsing process has finished.\n        const cancellation = cancelToken.onCancellationRequested(() => {\n            timeout = setTimeout(() => {\n                this.terminateWorker(worker);\n            }, this.terminationDelay);\n        });\n        worker.parse(text).then(result => {\n            const hydrated = this.hydrator.hydrate(result);\n            deferred.resolve(hydrated);\n        }).catch(err => {\n            deferred.reject(err);\n        }).finally(() => {\n            cancellation.dispose();\n            clearTimeout(timeout);\n        });\n        return deferred.promise;\n    }\n    terminateWorker(worker) {\n        worker.terminate();\n        const index = this.workerPool.indexOf(worker);\n        if (index >= 0) {\n            this.workerPool.splice(index, 1);\n        }\n    }\n    async acquireParserWorker(cancelToken) {\n        this.initializeWorkers();\n        for (const worker of this.workerPool) {\n            if (worker.ready) {\n                worker.lock();\n                return worker;\n            }\n        }\n        const deferred = new Deferred();\n        cancelToken.onCancellationRequested(() => {\n            const index = this.queue.indexOf(deferred);\n            if (index >= 0) {\n                this.queue.splice(index, 1);\n            }\n            deferred.reject(OperationCancelled);\n        });\n        this.queue.push(deferred);\n        return deferred.promise;\n    }\n}\nexport class ParserWorker {\n    get ready() {\n        return this._ready;\n    }\n    get onReady() {\n        return this.onReadyEmitter.event;\n    }\n    constructor(sendMessage, onMessage, onError, terminate) {\n        this.onReadyEmitter = new Emitter();\n        this.deferred = new Deferred();\n        this._ready = true;\n        this._parsing = false;\n        this.sendMessage = sendMessage;\n        this._terminate = terminate;\n        onMessage(result => {\n            const parseResult = result;\n            this.deferred.resolve(parseResult);\n            this.unlock();\n        });\n        onError(error => {\n            this.deferred.reject(error);\n            this.unlock();\n        });\n    }\n    terminate() {\n        this.deferred.reject(OperationCancelled);\n        this._terminate();\n    }\n    lock() {\n        this._ready = false;\n    }\n    unlock() {\n        this._parsing = false;\n        this._ready = true;\n        this.onReadyEmitter.fire();\n    }\n    parse(text) {\n        if (this._parsing) {\n            throw new Error('Parser worker is busy');\n        }\n        this._parsing = true;\n        this.deferred = new Deferred();\n        this.sendMessage(text);\n        return this.deferred.promise;\n    }\n}\n//# sourceMappingURL=async-parser.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\nimport { Deferred, isOperationCancelled } from '../utils/promise-utils.js';\nexport class DefaultWorkspaceLock {\n    constructor() {\n        this.previousTokenSource = new CancellationTokenSource();\n        this.writeQueue = [];\n        this.readQueue = [];\n        this.done = true;\n    }\n    write(action) {\n        this.cancelWrite();\n        const tokenSource = new CancellationTokenSource();\n        this.previousTokenSource = tokenSource;\n        return this.enqueue(this.writeQueue, action, tokenSource.token);\n    }\n    read(action) {\n        return this.enqueue(this.readQueue, action);\n    }\n    enqueue(queue, action, cancellationToken) {\n        const deferred = new Deferred();\n        const entry = {\n            action,\n            deferred,\n            cancellationToken: cancellationToken !== null && cancellationToken !== void 0 ? cancellationToken : CancellationToken.None\n        };\n        queue.push(entry);\n        this.performNextOperation();\n        return deferred.promise;\n    }\n    async performNextOperation() {\n        if (!this.done) {\n            return;\n        }\n        const entries = [];\n        if (this.writeQueue.length > 0) {\n            // Just perform the next write action\n            entries.push(this.writeQueue.shift());\n        }\n        else if (this.readQueue.length > 0) {\n            // Empty the read queue and perform all actions in parallel\n            entries.push(...this.readQueue.splice(0, this.readQueue.length));\n        }\n        else {\n            return;\n        }\n        this.done = false;\n        await Promise.all(entries.map(async ({ action, deferred, cancellationToken }) => {\n            try {\n                // Move the execution of the action to the next event loop tick via `Promise.resolve()`\n                const result = await Promise.resolve().then(() => action(cancellationToken));\n                deferred.resolve(result);\n            }\n            catch (err) {\n                if (isOperationCancelled(err)) {\n                    // If the operation was cancelled, we don't want to reject the promise\n                    deferred.resolve(undefined);\n                }\n                else {\n                    deferred.reject(err);\n                }\n            }\n        }));\n        this.done = true;\n        this.performNextOperation();\n    }\n    cancelWrite() {\n        this.previousTokenSource.cancel();\n    }\n}\n//# sourceMappingURL=workspace-lock.js.map","/******************************************************************************\n * Copyright 2024 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CompositeCstNodeImpl, LeafCstNodeImpl, RootCstNodeImpl } from '../parser/cst-node-builder.js';\nimport { isAbstractElement } from '../languages/generated/ast.js';\nimport { isRootCstNode, isCompositeCstNode, isLeafCstNode, isAstNode, isReference } from '../syntax-tree.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { BiMap } from '../utils/collections.js';\nimport { streamCst } from '../utils/cst-utils.js';\nexport class DefaultHydrator {\n    constructor(services) {\n        this.grammarElementIdMap = new BiMap();\n        this.tokenTypeIdMap = new BiMap();\n        this.grammar = services.Grammar;\n        this.lexer = services.parser.Lexer;\n        this.linker = services.references.Linker;\n    }\n    dehydrate(result) {\n        return {\n            // We need to create shallow copies of the errors\n            // The original errors inherit from the `Error` class, which is not transferable across worker threads\n            lexerErrors: result.lexerErrors.map(e => (Object.assign({}, e))),\n            parserErrors: result.parserErrors.map(e => (Object.assign({}, e))),\n            value: this.dehydrateAstNode(result.value, this.createDehyrationContext(result.value))\n        };\n    }\n    createDehyrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                cstNodes.set(cstNode, {});\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    dehydrateAstNode(node, context) {\n        const obj = context.astNodes.get(node);\n        obj.$type = node.$type;\n        obj.$containerIndex = node.$containerIndex;\n        obj.$containerProperty = node.$containerProperty;\n        if (node.$cstNode !== undefined) {\n            obj.$cstNode = this.dehydrateCstNode(node.$cstNode, context);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                obj[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.dehydrateAstNode(item, context));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.dehydrateReference(item, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                obj[name] = this.dehydrateAstNode(value, context);\n            }\n            else if (isReference(value)) {\n                obj[name] = this.dehydrateReference(value, context);\n            }\n            else if (value !== undefined) {\n                obj[name] = value;\n            }\n        }\n        return obj;\n    }\n    dehydrateReference(reference, context) {\n        const obj = {};\n        obj.$refText = reference.$refText;\n        if (reference.$refNode) {\n            obj.$refNode = context.cstNodes.get(reference.$refNode);\n        }\n        return obj;\n    }\n    dehydrateCstNode(node, context) {\n        const cstNode = context.cstNodes.get(node);\n        if (isRootCstNode(node)) {\n            cstNode.fullText = node.fullText;\n        }\n        else {\n            // Note: This returns undefined for hidden nodes (i.e. comments)\n            cstNode.grammarSource = this.getGrammarElementId(node.grammarSource);\n        }\n        cstNode.hidden = node.hidden;\n        cstNode.astNode = context.astNodes.get(node.astNode);\n        if (isCompositeCstNode(node)) {\n            cstNode.content = node.content.map(child => this.dehydrateCstNode(child, context));\n        }\n        else if (isLeafCstNode(node)) {\n            cstNode.tokenType = node.tokenType.name;\n            cstNode.offset = node.offset;\n            cstNode.length = node.length;\n            cstNode.startLine = node.range.start.line;\n            cstNode.startColumn = node.range.start.character;\n            cstNode.endLine = node.range.end.line;\n            cstNode.endColumn = node.range.end.character;\n        }\n        return cstNode;\n    }\n    hydrate(result) {\n        const node = result.value;\n        const context = this.createHydrationContext(node);\n        if ('$cstNode' in node) {\n            this.hydrateCstNode(node.$cstNode, context);\n        }\n        return {\n            lexerErrors: result.lexerErrors,\n            parserErrors: result.parserErrors,\n            value: this.hydrateAstNode(node, context)\n        };\n    }\n    createHydrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        let root;\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                let cst;\n                if ('fullText' in cstNode) {\n                    cst = new RootCstNodeImpl(cstNode.fullText);\n                    root = cst;\n                }\n                else if ('content' in cstNode) {\n                    cst = new CompositeCstNodeImpl();\n                }\n                else if ('tokenType' in cstNode) {\n                    cst = this.hydrateCstLeafNode(cstNode);\n                }\n                if (cst) {\n                    cstNodes.set(cstNode, cst);\n                    cst.root = root;\n                }\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    hydrateAstNode(node, context) {\n        const astNode = context.astNodes.get(node);\n        astNode.$type = node.$type;\n        astNode.$containerIndex = node.$containerIndex;\n        astNode.$containerProperty = node.$containerProperty;\n        if (node.$cstNode) {\n            astNode.$cstNode = context.cstNodes.get(node.$cstNode);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                astNode[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.setParent(this.hydrateAstNode(item, context), astNode));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.hydrateReference(item, astNode, name, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                astNode[name] = this.setParent(this.hydrateAstNode(value, context), astNode);\n            }\n            else if (isReference(value)) {\n                astNode[name] = this.hydrateReference(value, astNode, name, context);\n            }\n            else if (value !== undefined) {\n                astNode[name] = value;\n            }\n        }\n        return astNode;\n    }\n    setParent(node, parent) {\n        node.$container = parent;\n        return node;\n    }\n    hydrateReference(reference, node, name, context) {\n        return this.linker.buildReference(node, name, context.cstNodes.get(reference.$refNode), reference.$refText);\n    }\n    hydrateCstNode(cstNode, context, num = 0) {\n        const cstNodeObj = context.cstNodes.get(cstNode);\n        if (typeof cstNode.grammarSource === 'number') {\n            cstNodeObj.grammarSource = this.getGrammarElement(cstNode.grammarSource);\n        }\n        cstNodeObj.astNode = context.astNodes.get(cstNode.astNode);\n        if (isCompositeCstNode(cstNodeObj)) {\n            for (const child of cstNode.content) {\n                const hydrated = this.hydrateCstNode(child, context, num++);\n                cstNodeObj.content.push(hydrated);\n            }\n        }\n        return cstNodeObj;\n    }\n    hydrateCstLeafNode(cstNode) {\n        const tokenType = this.getTokenType(cstNode.tokenType);\n        const offset = cstNode.offset;\n        const length = cstNode.length;\n        const startLine = cstNode.startLine;\n        const startColumn = cstNode.startColumn;\n        const endLine = cstNode.endLine;\n        const endColumn = cstNode.endColumn;\n        const hidden = cstNode.hidden;\n        const node = new LeafCstNodeImpl(offset, length, {\n            start: {\n                line: startLine,\n                character: startColumn\n            },\n            end: {\n                line: endLine,\n                character: endColumn\n            }\n        }, tokenType, hidden);\n        return node;\n    }\n    getTokenType(name) {\n        return this.lexer.definition[name];\n    }\n    getGrammarElementId(node) {\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        return this.grammarElementIdMap.get(node);\n    }\n    getGrammarElement(id) {\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        const element = this.grammarElementIdMap.getKey(id);\n        if (element) {\n            return element;\n        }\n        else {\n            throw new Error('Invalid grammar element id: ' + id);\n        }\n    }\n    createGrammarElementIdMap() {\n        let id = 0;\n        for (const element of streamAst(this.grammar)) {\n            if (isAbstractElement(element)) {\n                this.grammarElementIdMap.set(element, id++);\n            }\n        }\n    }\n}\n//# sourceMappingURL=hydrator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n******************************************************************************/\nimport { createGrammarConfig } from './languages/grammar-config.js';\nimport { createCompletionParser } from './parser/completion-parser-builder.js';\nimport { createLangiumParser } from './parser/langium-parser-builder.js';\nimport { DefaultTokenBuilder } from './parser/token-builder.js';\nimport { DefaultValueConverter } from './parser/value-converter.js';\nimport { DefaultLinker } from './references/linker.js';\nimport { DefaultNameProvider } from './references/name-provider.js';\nimport { DefaultReferences } from './references/references.js';\nimport { DefaultScopeComputation } from './references/scope-computation.js';\nimport { DefaultScopeProvider } from './references/scope-provider.js';\nimport { DefaultJsonSerializer } from './serializer/json-serializer.js';\nimport { DefaultServiceRegistry } from './service-registry.js';\nimport { DefaultDocumentValidator } from './validation/document-validator.js';\nimport { ValidationRegistry } from './validation/validation-registry.js';\nimport { DefaultAstNodeDescriptionProvider, DefaultReferenceDescriptionProvider } from './workspace/ast-descriptions.js';\nimport { DefaultAstNodeLocator } from './workspace/ast-node-locator.js';\nimport { DefaultConfigurationProvider } from './workspace/configuration.js';\nimport { DefaultDocumentBuilder } from './workspace/document-builder.js';\nimport { DefaultLangiumDocumentFactory, DefaultLangiumDocuments } from './workspace/documents.js';\nimport { DefaultIndexManager } from './workspace/index-manager.js';\nimport { DefaultWorkspaceManager } from './workspace/workspace-manager.js';\nimport { DefaultLexer } from './parser/lexer.js';\nimport { JSDocDocumentationProvider } from './documentation/documentation-provider.js';\nimport { DefaultCommentProvider } from './documentation/comment-provider.js';\nimport { LangiumParserErrorMessageProvider } from './parser/langium-parser.js';\nimport { DefaultAsyncParser } from './parser/async-parser.js';\nimport { DefaultWorkspaceLock } from './workspace/workspace-lock.js';\nimport { DefaultHydrator } from './serializer/hydrator.js';\n/**\n * Creates a dependency injection module configuring the default core services.\n * This is a set of services that are dedicated to a specific language.\n */\nexport function createDefaultCoreModule(context) {\n    return {\n        documentation: {\n            CommentProvider: (services) => new DefaultCommentProvider(services),\n            DocumentationProvider: (services) => new JSDocDocumentationProvider(services)\n        },\n        parser: {\n            AsyncParser: (services) => new DefaultAsyncParser(services),\n            GrammarConfig: (services) => createGrammarConfig(services),\n            LangiumParser: (services) => createLangiumParser(services),\n            CompletionParser: (services) => createCompletionParser(services),\n            ValueConverter: () => new DefaultValueConverter(),\n            TokenBuilder: () => new DefaultTokenBuilder(),\n            Lexer: (services) => new DefaultLexer(services),\n            ParserErrorMessageProvider: () => new LangiumParserErrorMessageProvider()\n        },\n        workspace: {\n            AstNodeLocator: () => new DefaultAstNodeLocator(),\n            AstNodeDescriptionProvider: (services) => new DefaultAstNodeDescriptionProvider(services),\n            ReferenceDescriptionProvider: (services) => new DefaultReferenceDescriptionProvider(services)\n        },\n        references: {\n            Linker: (services) => new DefaultLinker(services),\n            NameProvider: () => new DefaultNameProvider(),\n            ScopeProvider: (services) => new DefaultScopeProvider(services),\n            ScopeComputation: (services) => new DefaultScopeComputation(services),\n            References: (services) => new DefaultReferences(services)\n        },\n        serializer: {\n            Hydrator: (services) => new DefaultHydrator(services),\n            JsonSerializer: (services) => new DefaultJsonSerializer(services)\n        },\n        validation: {\n            DocumentValidator: (services) => new DefaultDocumentValidator(services),\n            ValidationRegistry: (services) => new ValidationRegistry(services)\n        },\n        shared: () => context.shared\n    };\n}\n/**\n * Creates a dependency injection module configuring the default shared core services.\n * This is the set of services that are shared between multiple languages.\n */\nexport function createDefaultSharedCoreModule(context) {\n    return {\n        ServiceRegistry: () => new DefaultServiceRegistry(),\n        workspace: {\n            LangiumDocuments: (services) => new DefaultLangiumDocuments(services),\n            LangiumDocumentFactory: (services) => new DefaultLangiumDocumentFactory(services),\n            DocumentBuilder: (services) => new DefaultDocumentBuilder(services),\n            IndexManager: (services) => new DefaultIndexManager(services),\n            WorkspaceManager: (services) => new DefaultWorkspaceManager(services),\n            FileSystemProvider: (services) => context.fileSystemProvider(services),\n            WorkspaceLock: () => new DefaultWorkspaceLock(),\n            ConfigurationProvider: (services) => new DefaultConfigurationProvider(services)\n        }\n    };\n}\n//# sourceMappingURL=default-module.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { DefaultNameRegexp } from '../utils/cst-utils.js';\nimport { isCommentTerminal, terminalRegex } from '../utils/grammar-utils.js';\nimport { isMultilineComment } from '../utils/regexp-utils.js';\nimport { isTerminalRule } from './generated/ast.js';\n/**\n * Create the default grammar configuration (used by `createDefaultModule`). This can be overridden in a\n * language-specific module.\n */\nexport function createGrammarConfig(services) {\n    const rules = [];\n    const grammar = services.Grammar;\n    for (const rule of grammar.rules) {\n        if (isTerminalRule(rule) && isCommentTerminal(rule) && isMultilineComment(terminalRegex(rule))) {\n            rules.push(rule.name);\n        }\n    }\n    return {\n        multilineCommentRules: rules,\n        nameRegexp: DefaultNameRegexp\n    };\n}\n//# sourceMappingURL=grammar-config.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\n/**\n * Create and finalize a Langium parser. The parser rules are derived from the grammar, which is\n * available at `services.Grammar`.\n */\nexport function createLangiumParser(services) {\n    const parser = prepareLangiumParser(services);\n    parser.finalize();\n    return parser;\n}\n/**\n * Create a Langium parser without finalizing it. This is used to extract more detailed error\n * information when the parser is initially validated.\n */\nexport function prepareLangiumParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumParser(services);\n    return createParser(grammar, parser, lexer.definition);\n}\n//# sourceMappingURL=langium-parser-builder.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumCompletionParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\nexport function createCompletionParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumCompletionParser(services);\n    createParser(grammar, parser, lexer.definition);\n    parser.finalize();\n    return parser;\n}\n//# sourceMappingURL=completion-parser-builder.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class EmptyFileSystemProvider {\n    readFile() {\n        throw new Error('No file system is available.');\n    }\n    async readDirectory() {\n        return [];\n    }\n}\nexport const EmptyFileSystem = {\n    fileSystemProvider: () => new EmptyFileSystemProvider()\n};\n//# sourceMappingURL=file-system-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { createDefaultCoreModule, createDefaultSharedCoreModule } from '../default-module.js';\nimport { inject } from '../dependency-injection.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { EmptyFileSystem } from '../workspace/file-system-provider.js';\nimport { URI } from './uri-utils.js';\nconst minimalGrammarModule = {\n    Grammar: () => undefined,\n    LanguageMetaData: () => ({\n        caseInsensitive: false,\n        fileExtensions: ['.langium'],\n        languageId: 'langium'\n    })\n};\nconst minimalSharedGrammarModule = {\n    AstReflection: () => new ast.LangiumGrammarAstReflection()\n};\nfunction createMinimalGrammarServices() {\n    const shared = inject(createDefaultSharedCoreModule(EmptyFileSystem), minimalSharedGrammarModule);\n    const grammar = inject(createDefaultCoreModule({ shared }), minimalGrammarModule);\n    shared.ServiceRegistry.register(grammar);\n    return grammar;\n}\n/**\n * Load a Langium grammar for your language from a JSON string. This is used by several services,\n * most notably the parser builder which interprets the grammar to create a parser.\n */\nexport function loadGrammarFromJson(json) {\n    var _a;\n    const services = createMinimalGrammarServices();\n    const astNode = services.serializer.JsonSerializer.deserialize(json);\n    services.shared.workspace.LangiumDocumentFactory.fromModel(astNode, URI.parse(`memory://${(_a = astNode.name) !== null && _a !== void 0 ? _a : 'grammar'}.langium`));\n    return astNode;\n}\n//# sourceMappingURL=grammar-loader.js.map","import isSymbol from './isSymbol.js';\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nexport default baseExtremum;\n","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nexport default baseLt;\n","import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","import baseRest from './_baseRest.js';\nimport eq from './eq.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keysIn from './keysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nexport default defaults;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n","import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n","import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nexport default baseHas;\n","import baseHas from './_baseHas.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nexport default has;\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n","import baseExtremum from './_baseExtremum.js';\nimport baseLt from './_baseLt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\nfunction min(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseLt)\n    : undefined;\n}\n\nexport default min;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n"],"names":["exports","ral_1","Is","events_1","CancellationToken","None","Object","freeze","isCancellationRequested","onCancellationRequested","Event","Cancelled","is","value","candidate","boolean","shortcutEvent","callback","context","handle","default","timer","setTimeout","bind","dispose","MutableToken","constructor","this","_isCancelled","cancel","_emitter","fire","undefined","Emitter","event","token","_token","defineProperty","_disposable","CallbackList","add","bucket","_callbacks","_contexts","push","Array","isArray","remove","foundCallbackWithDifferentContext","i","len","length","splice","Error","invoke","args","ret","callbacks","slice","contexts","apply","e","console","error","isEmpty","_options","_event","listener","thisArgs","disposables","onFirstListenerAdd","result","_noop","onLastListenerRemove","call","string","String","array","stringArray","func","number","Number","every","elem","_ral","RAL","install","ral","InfoTokenBuilder","super","InfoModule","parser","TokenBuilder","ValueConverter","createInfoServices","shared","Info","ServiceRegistry","register","PieTokenBuilder","PieValueConverter","runCustomConverter","rule","input","_cstNode","name","replace","trim","PieModule","createPieServices","Pie","PacketTokenBuilder","PacketModule","createPacketServices","Packet","ArchitectureTokenBuilder","ArchitectureValueConverter","ArchitectureModule","createArchitectureServices","Architecture","GitGraphTokenBuilder","GitGraphModule","createGitGraphServices","GitGraph","__defProp","__name","target","configurable","item","reflection","isInstance","Branch","Commit","Merge","loadedInfoGrammar","loadedPacketGrammar","loadedPieGrammar","loadedArchitectureGrammar","loadedGitGraphGrammar","MermaidAstReflection","getAllTypes","computeIsSubtype","subtype","supertype","isSubtype","getReferenceType","refInfo","referenceId","container","$type","property","getTypeMetaData","type","properties","defaultValue","InfoGrammar","PacketGrammar","PieGrammar","ArchitectureGrammar","GitGraphGrammar","InfoLanguageMetaData","languageId","fileExtensions","caseInsensitive","PacketLanguageMetaData","PieLanguageMetaData","ArchitectureLanguageMetaData","GitGraphLanguageMetaData","MermaidGeneratedSharedModule","AstReflection","InfoGeneratedModule","Grammar","LanguageMetaData","PacketGeneratedModule","PieGeneratedModule","ArchitectureGeneratedModule","GitGraphGeneratedModule","rulesRegexes","ACC_DESCR","ACC_TITLE","TITLE","AbstractMermaidValueConverter","runConverter","cstNode","runCommonConverter","regex","match","exec","CommonValueConverter","_rule","_input","AbstractMermaidTokenBuilder","keywords","Set","buildKeywordTokens","rules","terminalTokens","options","tokenTypes","forEach","tokenType","has","PATTERN","RegExp","toString","parsers","initializers","info","async","createInfoServices2","LangiumParser","packet","createPacketServices2","pie","createPieServices2","architecture","createArchitectureServices2","gitGraph","createGitGraphServices2","parse","diagramType","text","initializer","lexerErrors","parserErrors","MermaidParseError","map","err","message","join","obj","$refText","isLinkingError","reference","AbstractAstReflection","subtypes","allSubtypes","node","nested","existing","getAllSubTypes","allTypes","types","possibleSubType","content","isRootCstNode","fullText","StreamImpl","startFn","nextFn","iterator","state","next","Symbol","Boolean","done","count","toArray","toSet","toMap","keyFn","valueFn","entryStream","element","Map","concat","other","first","firstDone","DONE_RESULT","separator","addSeparator","prototype","indexOf","searchElement","fromIndex","index","predicate","some","callbackfn","filter","nonNullable","reduce","initialValue","previousValue","reduceRight","recursiveReduce","find","findIndex","includes","flatMap","mapped","isIterable","flat","depth","stream","head","tail","skipCount","limit","maxSize","size","distinct","by","set","exclude","key","otherKeySet","ownKey","EMPTY_STREAM","collections","collection","collIndex","arrIndex","TreeStreamImpl","root","children","iterators","includeRoot","pruned","pop","prune","Reduction","RangeComparison","streamCst","tokenToRange","start","character","startColumn","line","startLine","end","endColumn","endLine","toDocumentSegment","offset","range","sum","a","b","product","min","Math","max","DefaultNameRegexp","isCommentNode","commentNames","ErrorWithLocation","assertUnreachable","_","AbstractRule","AbstractType","Condition","ValueLiteral","AbstractElement","BooleanLiteral","Conjunction","Disjunction","InferredType","isInferredType","Interface","isInterface","Negation","ParameterReference","ParserRule","isParserRule","ReturnType","SimpleType","TerminalRule","isTerminalRule","Type","isType","Action","isAction","Alternatives","isAlternatives","Assignment","isAssignment","CharacterRange","CrossReference","isCrossReference","EndOfFile","Group","isGroup","Keyword","isKeyword","NegatedToken","RegexToken","RuleCall","isRuleCall","TerminalAlternatives","TerminalGroup","TerminalRuleCall","isTerminalRuleCall","UnorderedGroup","isUnorderedGroup","UntilToken","Wildcard","LangiumGrammarAstReflection","getContainerOfType","typePredicate","$container","getDocument","rootNode","findRootNode","$document","streamContents","keys","keyIndex","arrayIndex","startsWith","isAstNodeInRange","streamAst","astNode","_a","nodeRange","$cstNode","to","comparison","Before","After","startInside","endInside","Inside","OverlapBack","OverlapFront","compareRange","inRange","streamReferences","copyDefaultValue","propertyType","cc","char","charCodeAt","insertToSet","subItem","addFlag","flagObj","flagKey","ASSERT_EXISTS","ASSERT_NEVER_REACH_HERE","isCharacter","digitsCharCodes","wordCharCodes","whitespaceCodes","hexDigitPattern","decimalPattern","decimalPatternNoZero","RegExpParser","idx","groupIdx","saveState","restoreState","newState","pattern","consumeChar","disjunction","flags","loc","begin","global","ignoreCase","multiLine","unicode","sticky","isRegExpFlag","popChar","substring","alts","alternative","peekChar","terms","isTerm","term","isAssertion","assertion","atom","quantifier","isBacktracking","atLeast","atMost","Infinity","integerIncludingZero","isDigit","greedy","dotAll","atomEscape","characterClass","group","isPatternCharacter","patternCharacter","isQuantifier","complement","decimalEscapeAtom","characterClassEscape","controlEscapeAtom","controlLetterEscapeAtom","nulCharacterAtom","hexEscapeSequenceAtom","regExpUnicodeEscapeSequenceAtom","identityEscapeAtom","positiveInteger","escapeCode","letter","test","toUpperCase","parseHexDigits","classPatternCharacterAtom","isClassAtom","from","classAtom","isRangeDash","classEscape","capturing","groupAst","parseInt","nextChar","howMuch","isAtom","prevState","howMany","hexString","hexChar","BaseRegExpVisitor","visitChildren","child","hasOwnProperty","visit","subChild","visitPattern","visitFlags","visitDisjunction","visitAlternative","visitStartAnchor","visitEndAnchor","visitWordBoundary","visitNonWordBoundary","visitLookahead","visitNegativeLookahead","visitCharacter","visitSet","visitGroup","visitGroupBackReference","visitQuantifier","NEWLINE_REGEXP","regexpParser","visitor","arguments","isStarting","endRegexpStack","multiline","endRegex","reset","startRegexp","fromCharCode","escapedChar","escapeRegExp","isMultilineComment","regexp","isWhitespace","getAllReachableRules","grammar","allTerminals","ruleNames","entryRule","entry","getEntryRule","topMostRules","hidden","getHiddenRules","ruleDfs","visitedSet","refRule","ref","findNodeForProperty","nodes","findNodesForPropertyInternal","nodeFeature","grammarSource","feature","findNameAssignment","startNode","findNameAssignmentInternal","cache","go","refType","childAssignment","get","toLowerCase","typeRef","isDataTypeRule","isDataTypeRuleInternal","visited","definition","getExplicitRuleType","inferredType","dataType","returnType","getTypeName","actionType","action","getActionType","terminalRegex","terminalRule","s","u","source","abstractElementToRegex","flagText","entries","WILDCARD","withCardinality","alternatives","elements","cardinality","lookahead","right","keywordToRegex","left","wrap","negate","until","terminal","lastSlash","lastIndexOf","regexFlags","keyword","toFastProperties","toBecomeFast","FakeConstructor","fakeInstance","fakeAccess","bar","n","guard","toInteger","object","isArrayLike","props","prop","path","nodeIsRegExp","isRegExp","isObjectLike","AbstractProduction","_definition","accept","prod","v","referencedRule","Rule","orgText","Alternative","ignoreAmbiguities","Option","RepetitionMandatory","RepetitionMandatoryWithSeparator","Repetition","RepetitionWithSeparator","Alternation","hasPredicates","Terminal","serializeProduction","convertDefinition","serializedNonTerminal","nonTerminalName","isString","label","terminalType","serializedTerminal","tokType","LABEL","terminalLabel","nodeAny","visitNonTerminal","visitOption","visitRepetitionMandatory","visitRepetitionMandatoryWithSeparator","visitRepetitionWithSeparator","visitRepetition","visitAlternation","visitTerminal","visitRule","nativeMax","isOptionalProd","alreadyVisited","subProd","getProductionDslName","RestWalker","walk","prevRest","currRest","walkProdRef","walkTerminal","walkFlat","walkOption","walkAtLeastOne","walkAtLeastOneSep","walkManySep","walkMany","walkOr","refProd","flatProd","fullOrRest","optionProd","atLeastOneProd","fullAtLeastOneRest","atLeastOneSepProd","fullAtLeastOneSepRest","restForRepetitionWithSeparator","manyProd","fullManyRest","manySepProd","fullManySepRest","orProd","alt","prodWrapper","repSepProd","isSequenceProd","firstSet","seq","currSubProd","nextSubProdIdx","hasInnerProdsRemaining","isLastInnerProdOptional","firstForSequence","isBranchingProd","allAlternativesFirsts","innerProd","firstForBranching","ResyncFollowsWalker","topProd","follows","startWalking","followName","inner","occurenceInParent","fullRest","t_in_topProd_follows","TypeError","values","isArrayLikeObject","iteratee","comparator","isCommon","valuesLength","outer","computed","valuesIndex","resIndex","PRINT_ERROR","msg","PRINT_WARNING","warn","regExpAstCache","regExpParser","getRegExpAst","regExp","regExpStr","regExpAst","complementErrorMessage","failedOptimizationPrefixMsg","getOptimizedStartCodesIndices","ensureOptimizations","ast","firstCharOptimizedIndices","msgSuffix","addOptimizedIdxToResult","code","rangeCode","minOptimizationVal","minUnOptVal","maxUnOptVal","minOptIdx","charCodeToOptimizedIndex","maxOptIdx","currOptIdx","isOptionalQuantifier","isWholeOptional","optimizedCharIdx","upperChar","lowerChar","handleIgnoreCase","findCode","setNode","targetCharCodes","codeOrRange","targetCode","CharCodeFinder","found","canMatchCharCode","charCodes","charCodeFinder","DEFAULT_MODE","MODES","SUPPORT_STICKY","end_of_input","start_of_input","addStartOfInput","addStickyFlag","isCustomPattern","isFunction","isShortPattern","LineTerminatorOptimizedTester","lastIndex","c","checkLineBreaksIssues","lineTerminatorCharCodes","issue","LexerDefinitionErrorType","IDENTIFY_TERMINATOR","errMsg","CUSTOM_LINE_BREAK","getCharCodes","charsOrCodes","numOrString","addToMapOfArrays","charCodeToOptimizedIdxMap","charCode","Date","getTime","val","time","tokenStructuredMatcher","tokInstance","tokConstructor","instanceType","tokenTypeIdx","isParent","categoryMatchesMap","tokenStructuredMatcherNoCategories","tokenShortNameIdx","tokenIdxToClass","augmentTokenTypes","tokenTypesAndParents","clone","categories","searching","currTokType","CATEGORIES","newCategories","expandCategories","hasShortKeyProperty","hasCategoriesProperty","categoryMatches","hasExtendingTokensTypesMapProperty","assignTokenDefaultProps","singleAssignCategoriesToksMap","assignCategoriesMapProp","assignCategoriesTokensProp","nextNode","pathNode","nextCategory","newPath","isTokenType","DEFAULT_LEXER_CONFIG","deferDefinitionErrorsHandling","positionTracking","lineTerminatorsPattern","lineTerminatorCharacters","safeMode","errorMessageProvider","buildUnableToPopLexerModeMessage","image","buildUnexpectedCharactersMessage","startOffset","column","charAt","traceInitPerf","skipValidations","recoveryEnabled","Lexer","lexerDefinition","config","lexerDefinitionErrors","lexerDefinitionWarning","patternIdxToConfig","charCodeToPatternIdxToConfig","modes","emptyGroups","trackStartLines","trackEndLines","hasCustom","canModeBeOptimized","TRACE_INIT","phaseDesc","phaseImpl","traceInitIndent","indent","traceInitMaxIdent","log","traceMethod","traceInitVal","actualDefinition","hasOnlySingleMode","defaultMode","errors","MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE","MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY","MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST","currModeValue","currModeName","currIdx","isUndefined","LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED","longerAlt","LONGER_ALT","currLongerAlt","MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE","performRuntimeChecks","trackLines","warnings","hasAnyLineBreak","allTokenTypes","concreteTokenTypes","currType","NA","terminatorCharCodes","currIssue","details","buildLineBreakIssueMessage","warningDescriptor","LINE_BREAKS","NO_LINE_BREAKS_FLAGS","performWarningRuntimeChecks","allModeNames","currModDef","currModName","validModesNames","missingResult","tokenTypesWithMissingPattern","MISSING_PATTERN","valid","findMissingPatterns","invalidResult","tokenTypesWithInvalidPattern","INVALID_PATTERN","findInvalidPatterns","validTokenTypes","withRegExpPatterns","EndAnchorFinder","invalidRegex","regexpAst","endAnchorVisitor","EOI_ANCHOR_FOUND","findEndOfInputAnchor","StartAnchorFinder","startAnchorVisitor","SOI_ANCHOR_FOUND","findStartOfInputAnchor","invalidFlags","UNSUPPORTED_FLAGS_FOUND","findUnsupportedFlags","identicalPatterns","outerType","innerType","duplicatePatterns","currIdenticalSet","setOfIdentical","tokenTypeNames","DUPLICATE_PATTERNS_FOUND","findDuplicatePatterns","matchesEmptyString","EMPTY_MATCH_PATTERN","findEmptyMatchRegExps","validateRegExpPattern","invalidTypes","clazz","GROUP","SKIPPED","INVALID_GROUP_TYPE_FOUND","findInvalidGroupType","validModes","invalidModes","PUSH_MODE","PUSH_MODE_DOES_NOT_EXIST","findModesThatDoNotExist","canBeTested","str","testIdx","regExpArray","testTokenType","UNREACHABLE_PATTERN","findUnreachablePatterns","validatePatterns","currAnalyzeResult","tracer","defaults","useSticky","debug","onlyRelevantTypes","initCharCodeToOptimizedIndexMap","allTransformedPatterns","patternIdxToType","patternIdxToGroup","patternIdxToLongerAltIdxArr","patternIdxToPushMode","patternIdxToPopMode","patternIdxToCanLineTerminator","patternIdxToIsCustom","patternIdxToShort","currPattern","regExpSource","escapedRegExpString","wrappedRegExp","groupName","longerAltType","acc","x","canLineTerminator","isCustom","short","canBeOptimized","optimizedIdx","START_CHARS_HINT","lastOptimizedIdx","charOrInt","currOptimizedIdx","optimizedCodes","analyzeTokenTypes","allErrMessagesString","chopInput","identity","matchWithTest","updateLastIndex","noop","matchWithExec","handleModes","computeNewColumn","updateTokenEndLineColumnLocation","createTokenInstance","createFullToken","createStartOnlyToken","createOffsetOnlyToken","addToken","addTokenUsingPush","handlePayload","handlePayloadWithCustom","addTokenUsingMemberAccess","handlePayloadNoCustom","unOptimizedModes","cannotBeOptimized","modeName","tokenize","initialMode","tokenizeInternal","j","k","matchAltImage","matchedImage","payload","altPayload","imageLength","newToken","errLength","orgLength","matchedTokensIndex","guessedNumberOfTokens","floor","matchedTokens","groups","clonedResult","groupKeys","currKey","currGroupValue","cloneEmptyGroups","lineTerminatorPattern","currModePatternsLength","currCharCodeToPatternIdxToConfig","modeStack","emptyArray","getPossiblePatterns","getPossiblePatternsSlow","getPossiblePatternsOptimized","possiblePatterns","pop_mode","popToken","newMode","last","modeCanBeOptimized","push_mode","currConfig","nextCharCode","chosenPatternIdxToConfig","chosenPatternsLength","singleCharCode","longerAltLength","longerAltConfig","longerAltPattern","foundTerminator","lastLTEndOffset","numOfLTsInMatch","errorStartOffset","errorLine","errorColumn","foundResyncPoint","tokens","pushMode","newLastIndex","lastLTIdx","lastCharIsLT","fixForEndingInLT","oldColumn","endOffset","tokenVector","tokenToAdd","POP_MODE","createToken","createTokenInternal","EOF","tokenMatcher","defaultParserErrorProvider","buildMismatchTokenMessage","expected","actual","previous","ruleName","buildNotAllInputParsedMessage","firstRedundant","buildNoViableAltMessage","expectedPathsPerAlt","customUserDescription","errPrefix","errSuffix","allLookAheadPaths","currAltPaths","nextValidTokenSequences","currPath","currTokenType","itemMsg","buildEarlyExitMessage","expectedIterationPaths","defaultGrammarResolverErrorProvider","buildRuleNotFoundError","topLevelRule","undefinedRule","defaultGrammarValidatorErrorProvider","buildDuplicateFoundError","duplicateProds","topLevelName","duplicateProd","dslName","extraArgument","buildNamespaceConflictError","buildAlternationPrefixAmbiguityError","pathMsg","prefixPath","currTok","occurrence","alternation","ambiguityIndices","buildAlternationAmbiguityError","currtok","currMessage","buildEmptyRepetitionError","repetition","buildTokenNameError","buildEmptyAlternationError","emptyChoiceIdx","buildTooManyAlternativesError","buildLeftRecursionError","leftRecursionPath","currRule","buildInvalidRuleNameError","buildDuplicateRuleNameError","grammarName","GastRefResolverVisitor","nameToTopRule","errMsgProvider","resolveRefs","currTopLevel","ParserDefinitionErrorType","UNRESOLVED_SUBRULE_REF","unresolvedRefName","setter","accumulator","AbstractNextPossibleTokensWalker","possibleTokTypes","nextProductionName","nextProductionOccurrence","isAtEndOfPath","ruleStack","reverse","occurrenceStack","updateExpectedNext","NextAfterTokenWalker","nextTerminalName","nextTerminalOccurrence","lastTok","lastTokOccurrence","restProd","AbstractNextTerminalAfterProductionWalker","topRule","isEndOfRule","NextTerminalAfterManyWalker","firstAfterMany","NextTerminalAfterManySepWalker","firstAfterManySep","NextTerminalAfterAtLeastOneWalker","firstAfterAtLeastOne","NextTerminalAfterAtLeastOneSepWalker","atleastOneSepProd","firstAfterfirstAfterAtLeastOneSep","possiblePathsFrom","targetDef","maxLength","getAlternativesForProd","newDef","currAlt","partialPath","suffixDef","nextPossibleTokensAfter","initialDef","tokMatcher","maxLookAhead","EXIT_NON_TERMINAL","EXIT_NON_TERMINAL_ARR","EXIT_ALTERNATIVE","foundCompletePath","tokenVectorLength","minimalAlternativesIndex","possiblePaths","def","currDef","currRuleStack","currOccurrenceStack","nextPath","nextIdx","nextTokenType","nextTokenOccurrence","newRuleStack","newOccurrenceStack","nextPathWithout","nextPathWith","secondIteration","separatorGast","nthRepetition","currAltPath","expandTopLevelRule","newCurrOccurrenceStack","PROD_TYPE","getProdType","OPTION","REPETITION","REPETITION_MANDATORY","REPETITION_MANDATORY_WITH_SEPARATOR","REPETITION_WITH_SEPARATOR","ALTERNATION","getLookaheadPaths","prodType","maxLookahead","getLookaheadPathsForOr","getLookaheadPathsForOptionalProd","buildAlternativesLookAheadFunc","dynamicTokensEnabled","numOfAlts","areAllOneTokenLookahead","orAlts","predicates","GATE","t","currNumOfPaths","currPredicate","currPathLength","nextToken","LA","singleTokenAlts","choiceToAlt","currExtendingType","buildSingleAlternativeLookaheadFunction","numOfPaths","singleTokensTypes","expectedTokenUniqueKey","RestDefinitionFinderWalker","targetOccurrence","targetProdType","restDef","checkIsTarget","expectedProdType","InsideDefinitionFinderVisitor","targetRef","expectedProdName","initializeArrayOfArrays","pathToHashKeys","longerKeys","currShorterKey","categoriesKeySuffix","isUniquePrefixHash","altKnownPathsKeys","searchPathKeys","currAltIdx","otherAltKnownPathsKeys","searchIdx","lookAheadSequenceFromAlternatives","altsDefs","partialAlts","finalResult","altsHashes","dict","newData","pathLength","currDataset","altIdx","currAltPathsAndSuffixes","currPathIdx","currPathPrefix","prefixKeys","currAltResult","containsPath","newPartialPathsAndSuffixes","ruleGrammar","insideDefVisitor","insideDef","afterDef","searchPath","compareOtherPath","otherPath","searchTok","otherTok","areTokenCategoriesNotUsed","lookAheadPaths","singleAltPaths","singlePath","identifyProductionForDuplicates","getExtraProductionArgument","OccurrenceValidationCollector","allProductions","subrule","option","manySep","atLeastOne","atLeastOneSep","many","or","validateNoLeftRecursion","nextNonTerminals","getFirstNoneTerminal","LEFT_RECURSION","validNextSteps","errorsFromNextSteps","currRefRule","firstProd","currSubDef","isFirstOptional","hasMore","rest","OrCollector","alternations","RepetitionCollector","MISMATCHED_TOKEN_EXCEPTION","NO_VIABLE_ALT_EXCEPTION","EARLY_EXIT_EXCEPTION","NOT_ALL_INPUT_PARSED_EXCEPTION","RECOGNITION_EXCEPTION_NAMES","isRecognitionException","RecognitionException","resyncedTokens","setPrototypeOf","captureStackTrace","MismatchedTokenException","previousToken","NoViableAltException","NotAllInputParsedException","EarlyExitException","EOF_FOLLOW_KEY","IN_RULE_RECOVERY_EXCEPTION","InRuleRecoveryException","attemptInRepetitionRecovery","prodFunc","lookaheadFunc","dslMethodIdx","prodOccurrence","nextToksWalker","notStuck","getKeyForAutomaticLookahead","firstAfterRepInfo","firstAfterRepMap","currRuleName","getCurrRuleFullName","getGAstProductions","expectTokAfterLastMatch","nextTokIdx","RULE_STACK","shouldInRepetitionRecoveryBeTried","tryInRepetitionRecovery","AT_LEAST_ONE_IDX","MANY_SEP_IDX","AT_LEAST_ONE_SEP_IDX","ruleIdx","LLkLookaheadStrategy","DEFAULT_PARSER_CONFIG","validate","leftRecursionErrors","emptyAltErrors","validateEmptyOrAlternatives","ambiguousAltsErrors","validateAmbiguousAlternationAlternatives","emptyRepetitionErrors","validateSomeNonEmptyLookaheadPath","currTopRule","orCollector","ors","currOr","exceptLast","currAlternative","possibleFirstInAlt","NONE_LAST_EMPTY_ALT","validateEmptyOrAlternative","globalMaxLookahead","currOccurrence","actualMaxLookahead","altsAmbiguityErrors","foundAmbiguousPaths","identicalAmbiguities","altsCurrPathAppearsIn","currOtherAlt","currOtherAltIdx","currAmbDescriptor","ambgIndices","AMBIGUOUS_ALTS","checkAlternativesAmbiguities","altsPrefixAmbiguityErrors","pathsAndIndices","currPathsAndIdx","currPathAndIdx","targetIdx","targetPath","prefixAmbiguitiesPathsAndIndices","searchPathAndIdx","prefix","otherTokType","currAmbPathAndIdx","AMBIGUOUS_PREFIX_ALTS","checkPrefixAlternativesAmbiguities","topLevelRules","collectorVisitor","allRuleProductions","currProd","pathsInsideProduction","NO_NON_EMPTY_LOOKAHEAD","buildLookaheadForAlternation","laFuncBuilder","buildLookaheadFuncForOr","buildLookaheadForOptional","lookaheadBuilder","buildLookaheadFuncForOptionalProd","dslMethods","repetitionWithSeparator","repetitionMandatory","repetitionMandatoryWithSeparator","setNodeLocationOnlyOffset","currNodeLocation","newLocationInfo","isNaN","setNodeLocationFull","defineNameProp","nameValue","enumerable","writable","defaultVisit","ctx","param","childrenNames","childrenNamesLength","currChildArray","currChildArrayLength","currChild","CstVisitorDefinitionError","RECORDING_NULL_OBJECT","description","HANDLE_SEPARATOR","MAX_METHOD_IDX","pow","RFT","RECORDING_PHASE_TOKEN","RECORDING_PHASE_CSTNODE","recordProd","prodConstructor","mainProdArg","handleSep","assertMethodIdxIsValid","prevProd","recordingProdStack","grammarAction","DEF","newProd","SEP","MAX_LOOKAHEAD","recordOrProd","hasOptions","newOrProd","IGNORE_AMBIGUITIES","currAltFlat","ALT","getIdxSuffix","KNOWN_RECORDER_ERROR","END_OF_FILE","NaN","outputCst","nodeLocationTracking","DEFAULT_RULE_CONFIG","recoveryValueFunc","resyncEnabled","derivedCtor","baseCtors","EMPTY_ALT","Parser","performSelfAnalysis","parserInstance","defErrorsMsgs","selfAnalysisDone","className","enableRecording","definedRulesNames","originalGrammarAction","recordedRuleGast","topLevelRuleRecord","gastProductionsCache","disableRecording","resolverErrors","actualOptions","topRulesTable","topLevels","refResolver","definitionErrors","validationErrors","tokensMap","duplicateErrors","productionGroups","duplicates","currGroup","currDuplicates","defError","DUPLICATE_PRODUCTIONS","parameter","validateDuplicateProductions","termsNamespaceConflictErrors","tokenNames","currToken","CONFLICT_TOKENS_RULES_NAMESPACE","checkTerminalAndNoneTerminalsNameSpace","tooManyAltsErrors","curRule","TOO_MANY_ALTS","validateTooManyAlts","duplicateRulesError","allRules","occurrences","DUPLICATE_RULE_NAME","validateRuleDoesNotAlreadyExist","lookaheadValidationErrors","lookaheadValidationErrorMessages","lookaheadStrategy","errorMessage","assign","CUSTOM_LOOKAHEAD_VALIDATION","validateLookahead","allFollows","topProductions","reSyncFollows","currRefsFollow","computeAllProdsFollows","resyncFollows","_b","initialize","preComputeLookaheadFunctions","DEFER_DEFINITION_ERRORS_HANDLING","tokenVocabulary","that","initErrorHandler","initLexerAdapter","initLooksAhead","initRecognizerEngine","initRecoverable","initTreeBuilder","initContentAssist","initGastRecorder","initPerformanceTracer","getTokenToInsert","tokToInsert","isInsertedInRecovery","canTokenTypeBeInsertedInRecovery","canTokenTypeBeDeletedInRecovery","grammarRule","grammarRuleArgs","lookAheadFunc","expectedTokType","reSyncTokType","findReSyncTokenType","savedLexerState","exportLexerState","passedResyncPoint","nextTokenWithoutResync","generateErrorMessage","SAVE_ERROR","SKIP_TOKEN","addToResyncTokens","importLexerState","isBackTracking","canPerformInRuleRecovery","getFollowsForInRuleRecovery","tokIdxInRule","grammarPath","getCurrentGrammarPath","getNextPossibleTokenTypes","tryInRuleRecovery","canRecoverWithSingleTokenInsertion","canRecoverWithSingleTokenDeletion","nextTok","consumeToken","expectedToken","mismatchedTok","possibleFollowsTokType","isInCurrentRuleReSyncSet","followKey","getCurrFollowKey","currentRuleReSyncSet","getFollowSetFromFollowKey","allPossibleReSyncTokTypes","flattenFollowSet","foundMatch","resyncTokType","currRuleShortName","getLastExplicitRuleShortName","currRuleIdx","getLastExplicitRuleOccurrenceIndex","prevRuleShortName","getPreviousExplicitRuleShortName","shortRuleNameToFullName","idxInCallingRule","inRule","buildFullFollowKeyStack","explicitRuleStack","explicitOccurrenceStack","RULE_OCCURRENCE_STACK","followStack","resyncTokens","reSyncTo","getHumanReadableRuleStack","currShortName","lookAheadFuncsCache","collectMethods","prodIdx","laFunc","fullRuleNameToShort","setLaFuncCache","computeLookaheadFunc","prodKey","prodMaxLookahead","dslMethodName","getLaFuncFromCache","CST_STACK","setNodeLocationFromToken","setNodeLocationFromNode","cstPostRule","setInitialNodeLocation","setInitialNodeLocationFullRecovery","cstPostRuleFull","setInitialNodeLocationFullRegular","setInitialNodeLocationOnlyOffsetRecovery","cstPostRuleOnlyOffset","setInitialNodeLocationOnlyOffsetRegular","cstInvocationStateUpdate","cstFinallyStateUpdate","cstPostTerminal","cstPostNonTerminal","location","fullRuleName","create","ruleCstNode","prevToken","consumedToken","rootCst","tokenTypeName","ruleCstResult","preCstNode","ruleResult","addNoneTerminalToCst","getBaseCstVisitorConstructor","baseCstVisitorConstructor","newBaseCstVisitorConstructor","derivedConstructor","semanticProto","validateVisitor","semanticDefinitionErrors","visitorInstance","missingErrors","missingRuleNames","MISSING_METHOD","methodName","validateMissingCstMethods","errorMessages","currDefError","_RULE_NAMES","createBaseSemanticVisitorConstructor","getBaseCstVisitorConstructorWithDefaults","baseCstVisitorWithDefaultsConstructor","newConstructor","baseConstructor","withDefaultsProto","createBaseVisitorConstructorWithDefaults","tokVector","tokVectorLength","newInput","soughtIdx","resetLexerState","moveToTerminatedState","getLexerPosition","shortRuleNameToFull","ruleShortNameIdx","subruleIdx","isBackTrackingStack","uniqueTokens","isObject","noTokenCategoriesUsed","tokenConstructor","defineRule","impl","shortName","invokeRuleWithTry","ruleInvocationStateUpdate","cst","invokeRuleCatch","ruleFinallyStateUpdate","resyncEnabledConfig","isFirstInvokedRule","reSyncEnabled","recogError","partialCstResult","recoveredNode","optionInternal","actionORMethodDef","optionInternalLogic","orgLookaheadFunction","atLeastOneInternal","laKey","atLeastOneInternalLogic","raiseEarlyExitException","ERR_MSG","doSingleRepetition","atLeastOneSepFirstInternal","atLeastOneSepFirstInternalLogic","separatorLookAheadFunc","CONSUME","repetitionSepSecondInternal","manyInternal","manyInternalLogic","lookaheadFunction","manySepFirstInternal","manySepFirstInternalLogic","nextTerminalAfterWalker","beforeIteration","orInternal","altsOrOpts","altIdxToTake","raiseNoAltException","isAtEndOfInput","firstRedundantTok","subruleInternal","ruleToCall","ARGS","subruleInternalError","consumeInternal","consumeInternalError","eFromConsumption","consumeInternalRecovery","eFromInRuleRecovery","saveRecogState","savedErrors","savedRuleStack","lexerState","reloadRecogState","fullName","ACTION","consume","CONSUME1","CONSUME2","CONSUME3","CONSUME4","CONSUME5","CONSUME6","CONSUME7","CONSUME8","CONSUME9","SUBRULE","SUBRULE1","SUBRULE2","SUBRULE3","SUBRULE4","SUBRULE5","SUBRULE6","SUBRULE7","SUBRULE8","SUBRULE9","OPTION1","OPTION2","OPTION3","OPTION4","OPTION5","OPTION6","OPTION7","OPTION8","OPTION9","OR","OR1","OR2","OR3","OR4","OR5","OR6","OR7","OR8","OR9","MANY","MANY1","MANY2","MANY3","MANY4","MANY5","MANY6","MANY7","MANY8","MANY9","MANY_SEP","MANY_SEP1","MANY_SEP2","MANY_SEP3","MANY_SEP4","MANY_SEP5","MANY_SEP6","MANY_SEP7","MANY_SEP8","MANY_SEP9","AT_LEAST_ONE","AT_LEAST_ONE1","AT_LEAST_ONE2","AT_LEAST_ONE3","AT_LEAST_ONE4","AT_LEAST_ONE5","AT_LEAST_ONE6","AT_LEAST_ONE7","AT_LEAST_ONE8","AT_LEAST_ONE9","AT_LEAST_ONE_SEP","AT_LEAST_ONE_SEP1","AT_LEAST_ONE_SEP2","AT_LEAST_ONE_SEP3","AT_LEAST_ONE_SEP4","AT_LEAST_ONE_SEP5","AT_LEAST_ONE_SEP6","AT_LEAST_ONE_SEP7","AT_LEAST_ONE_SEP8","AT_LEAST_ONE_SEP9","RULE","implementation","ruleImplementation","OVERRIDE_RULE","ruleErrors","INVALID_RULE_OVERRIDE","validateRuleIsOverridden","BACKTRACK","orgState","getSerializedGastProductions","topRules","_errors","ruleOccurrenceStack","newErrors","userDefinedErrMsg","insideProdPaths","actualTokens","errMsgTypes","lookAheadPathsPerAlternative","computeContentAssist","startRuleName","precedingInput","startRuleGast","topRuleName","topProduction","RECORDING_PHASE","arg1","arg2","consumeInternalRecord","subruleInternalRecord","optionInternalRecord","orInternalRecord","manyInternalRecord","manySepFirstInternalRecord","atLeastOneInternalRecord","atLeastOneSepFirstInternalRecord","ACTION_RECORD","BACKTRACK_RECORD","LA_RECORD","newTopLevelRule","originalError","mutabilityError","JSON","stringify","newNoneTerminal","userTraceInitPerf","traceIsNumber","baseCtor","baseProto","getOwnPropertyNames","propName","basePropDescriptor","getOwnPropertyDescriptor","EmbeddedActionsParser","configClone","buildATNKey","AbstractTransition","isEpsilon","AtomTransition","EpsilonTransition","RuleTransition","ruleStart","followState","atn","production","tokenRef","currentRule","nonTerminal","ruleToStartState","addTransition","ruleRef","defineDecisionState","makeAlts","optional","epsilon","decisionMap","block","starState","star","repetitionSep","plusState","plus","repetitionMandatorySep","handles","altsLength","transition","transitions","isRuleTransition","ruleTransition","removeState","makeBlock","sep","blkStart","blkEnd","loop","loopback","loopEnd","decisionStates","decision","buildRuleHandle","stop","ruleToStopState","partial","epsilonOnlyTransitions","nextTokenWithinRule","stateNumber","states","DFA_ERROR","ATNConfigSet","configs","finalize","getATNConfigKey","stack","createDFACache","startState","predicateSet","atnStartState","PredicateSet","EMPTY_PREDICATES","LLStarLookaheadStrategy","logging","ruleLength","createRuleStartAndStopATNStates","ruleBlock","createATN","dfas","decisionLength","decisionToDFA","initATNSimulator","decisionIndex","isLL1Sequence","prediction","gate","adaptivePredict","g","sequences","allowEmpty","fullSet","altSet","indices","dfaCaches","dfa","addDFAState","newDFAState","atnState","numberOfTransitions","closure","computeStartState","performLookahead","s0","previousD","d","edges","computeLookaheadTarget","buildAdaptivePredictError","isAcceptState","reach","intermediate","skippedStopStates","transitionLength","getReachableTarget","hasConfigInRuleStopState","computeReachSet","addDFAEdge","predictedAlt","getUniqueAlt","uniqueAlt","allConfigsInRuleStopStates","altSets","configToAlts","getConflictingAltSets","hasConflictingAltSet","hasStateAssociatedWithOneAlt","hasConflictTerminatingPrediction","reportLookaheadAmbiguity","buildAmbiguityError","current","nextTransitions","actualToken","possibleTokenTypes","tokenPath","mapKey","p","atnStack","getEpsilonTarget","DocumentUri","URI","integer","uinteger","Position","Range","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","DiagnosticTag","CodeDescription","Diagnostic","Command","TextEdit","ChangeAnnotation","ChangeAnnotationIdentifier","AnnotatedTextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","TextDocumentIdentifier","VersionedTextDocumentIdentifier","OptionalVersionedTextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItemTag","InsertReplaceEdit","InsertTextMode","CompletionItemLabelDetails","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolTag","SymbolInformation","WorkspaceSymbol","DocumentSymbol","CodeActionKind","CodeActionTriggerKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentLink","SelectionRange","SemanticTokenTypes","SemanticTokenModifiers","SemanticTokens","InlineValueText","InlineValueVariableLookup","InlineValueEvaluatableExpression","InlineValueContext","InlayHintKind","InlayHintLabelPart","InlayHint","StringValue","InlineCompletionItem","InlineCompletionList","InlineCompletionTriggerKind","SelectedCompletionInfo","InlineCompletionContext","WorkspaceFolder","TextDocument","MIN_VALUE","MAX_VALUE","objectLiteral","one","two","three","four","uri","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","numberRange","color","textEdit","additionalTextEdits","typedArray","Comment","Imports","Region","startCharacter","endCharacter","kind","collapsedText","defined","Warning","Information","Hint","Unnecessary","Deprecated","href","severity","relatedInformation","codeDescription","title","command","newText","insert","position","del","needsConfirmation","annotation","annotationId","textDocument","edits","overwrite","ignoreIfExists","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","change","version","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Module","Property","Unit","Value","Enum","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Operator","TypeParameter","asIs","adjustIndentation","detail","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","Key","Null","containerName","selectionRange","deprecated","tags","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","SourceFixAll","Invoked","Automatic","diagnostics","only","triggerKind","kindOrCommandOrEdit","checkKind","edit","isPreferred","data","tabSize","insertSpaces","parent","resultId","variableName","caseSensitiveLookup","expression","frameId","stoppedLocation","Parameter","tooltip","textEdits","paddingLeft","paddingRight","createSnippet","insertText","filterText","selectedCompletionInfo","mergeSort","compare","leftIdx","rightIdx","FullTextDocument","lineCount","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","diff","lastModifiedOffset","_uri","_languageId","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","ch","low","high","mid","lineOffset","nextLineOffset","check","CstNodeBuilder","nodeStack","buildRootNode","RootCstNodeImpl","buildCompositeNode","compositeNode","CompositeCstNodeImpl","buildLeafNode","leafNode","LeafCstNodeImpl","removeNode","construct","addHiddenTokens","hiddenTokens","hiddenNode","addHiddenToken","tokenStart","tokenEnd","childStart","childEnd","AbstractCstNode","_astNode","_offset","_length","_hidden","_tokenType","_range","CstNodeContainer","firstNonHiddenNode","lastNonHiddenNode","firstNode","lastNode","_rangeCache","firstRange","lastRange","addParents","unshift","_text","DatatypeSymbol","isDataTypeNode","withRuleSuffix","endsWith","AbstractLangiumParser","services","_unorderedGroups","lexer","wrapper","ChevrotainWrapper","ParserConfig","ParserErrorMessageProvider","choices","wrapOr","wrapOption","wrapMany","wrapAtLeastOne","isRecording","IS_RECORDING","unorderedGroups","getRuleStack","wrapSelfAnalysis","nodeBuilder","assignmentMap","linker","references","Linker","converter","astReflection","fragment","ruleMethod","DEFINE_RULE","startImplementation","mainRule","lexerResult","clear","wrapConsume","isValidToken","assignment","isCrossRef","getAssignment","convertedValue","convert","operator","subruleResult","wrapSubrule","performSubruleAssignment","resultKind","assignWithoutOverride","newItem","$containerProperty","$containerIndex","linkContentToContainer","typeMetaData","genericNode","assignMandatoryProperties","buildReference","existingValue","newValue","AbstractParserErrorMessageProvider","LangiumParserErrorMessageProvider","LangiumCompletionParser","elementStack","lastElementStack","nextTokenIndex","stackSize","resetState","tokenIndex","keepStackSize","resetStackSize","removeUnexpectedElements","before","after","defaultConfig","useDefaultLookahead","createParser","parserContext","reachable","parserRules","buildElement","buildRules","ignoreGuard","method","buildKeyword","buildAction","buildCrossReference","ruleCall","namedArgs","buildPredicate","ruleArgs","ruleTarget","buildRuleCallPredicate","getRule","getToken","buildRuleCall","methods","predicatedMethod","getGuardCondition","buildAlternatives","orIdx","idFunc","lParser","wrapped","groupState","trackedAlternatives","delete","buildUnorderedGroup","buildGroup","condition","isConjunction","isNegation","isParameterReference","isBooleanLiteral","true","guardCondition","crossRef","assignTerminal","getRuleName","DefaultTokenBuilder","buildTokens","reachableRules","buildTerminalTokens","terminalToken","buildTerminalToken","requiresCustomPattern","regexPatternFunction","stickyRegex","sort","buildKeywordToken","buildKeywordPattern","findLongerAlt","getCaseInsensitivePattern","longerAlts","re","process","tmp","appendRaw","nbChars","substr","appendOptional","partialRegExp","partialMatches","DefaultValueConverter","nameAssigment","getCrossReferenceTerminal","convertInt","convertString","convertID","_c","getRuleType","convertNumber","convertBoolean","convertBigint","convertDate","convertEscapeCharacter","BigInt","lastTick","isOperationCancelled","interruptAndCheck","now","Promise","resolve","setImmediate","promise","reject","arg","isIncremental","getWellformedRange","addedLineOffsets","computeLineOffsets","isFull","ensureBeforeEOL","isEOL","rangeLength","LIB","isAtLineStart","textOffset","getWellformedEdit","spans","r","o","h","cwd","normalize","isAbsolute","relative","f","l","_makeLong","dirname","basename","extname","format","dir","base","ext","delimiter","win32","posix","toStringTag","Utils","P","platform","navigator","userAgent","scheme","authority","query","isUri","fsPath","with","m","C","file","y","toJSON","revive","_formatted","external","_fsPath","_sep","$mid","encodeURIComponent","decodeURIComponent","A","w","joinPath","resolvePath","UriUtils","DocumentState","ValidationCategory","DocumentValidator","Disposable","equals","fromPath","toPath","fromParts","split","toParts","repeat","DefaultLangiumDocumentFactory","serviceRegistry","textDocuments","workspace","TextDocuments","fileSystemProvider","FileSystemProvider","fromUri","cancellationToken","readFile","createAsync","fromTextDocument","fromString","fromModel","model","$model","parseResult","createLangiumDocument","cancelToken","parseAsync","Parsed","textDocumentGetter","createTextDocumentGetter","oldText","getServices","AsyncParser","textDoc","DefaultLangiumDocuments","documentMap","langiumDocumentFactory","LangiumDocumentFactory","all","addDocument","uriString","getOrCreateDocument","createDocument","then","hasDocument","invalidateDocument","langiumDoc","Changed","precomputedScopes","deleteDocument","DefaultLinker","langiumDocuments","LangiumDocuments","scopeProvider","ScopeProvider","astNodeLocator","AstNodeLocator","link","doLink","_ref","getCandidate","_nodeDescription","documentUri","linkedNode","loadAstNode","createLinkingError","unlink","getScope","getElement","refNode","refText","$refNode","refData","getLinkedNode","ComputedScopes","descr","$nodeDescription","nodeDescription","doc","getAstNode","targetDescription","referenceType","DefaultNameProvider","getName","isNamed","getNameNode","DefaultReferences","nameProvider","NameProvider","IndexManager","nodeLocator","findDeclaration","sourceCstNode","findAssignment","nodeElem","nameNode","isChildNode","findDeclarationNode","targetNode","findReferences","refs","includeDeclaration","getReferenceToSelf","indexReferences","findAllReferences","getAstNodePath","sourceUri","sourcePath","segment","local","MultiMap","addAll","entriesGroupedByKey","BiMap","inverse","getKey","DefaultScopeComputation","descriptions","AstNodeDescriptionProvider","computeExports","computeExportsForNode","parentNode","exportNode","createDescription","computeLocalScopes","scopes","processNode","StreamScope","outerScope","getAllElements","MapScope","localName","elementStream","DisposableCache","toDispose","isDisposed","onDispose","disposable","throwIfDisposed","SimpleCache","provider","ContextCache","contextKey","cacheForContext","contextCache","documentCache","WorkspaceCache","sharedServices","DocumentBuilder","onUpdate","DefaultScopeProvider","indexManager","globalScopeCache","precomputed","currentNode","allDescriptions","desc","getGlobalScope","createScope","createScopeForNodes","_context","allElements","isIntermediateReference","DefaultJsonSerializer","ignoreProperties","commentProvider","CommentProvider","serialize","specificReplacer","replacer","defaultReplacer","currentDocument","space","deserialize","linkNode","sourceText","textRegions","comments","uriConverter","_d","refValue","targetDocument","$ref","$error","addAstNodeRegionWithAssignmentsTo","$textRegion","documentURI","$sourceText","comment","getComment","$comment","createDocumentSegment","assignments","propertyAssignments","findNodesForProperty","containerProperty","containerIndex","propertyName","reviveReference","mutable","getRefNode","fragmentIndex","DefaultServiceRegistry","singleton","diagnosticData","ValidationRegistry","checksRecord","thisObj","category","wrapValidationException","addEntry","getChecks","checks","DefaultDocumentValidator","validationRegistry","validation","metadata","validateDocument","processLexingErrors","stopAfterLexingErrors","LexingError","processParsingErrors","stopAfterParsingErrors","ParsingError","processLinkingErrors","stopAfterLinkingErrors","LinkingError","validateAst","lexerError","diagnostic","toDiagnosticSeverity","getSource","parserError","linkingError","containerType","toDiagnostic","validationItems","acceptor","getDiagnosticRange","treeIterator","keywordNodes","childNode","findNodesForKeywordInternal","findNodeForKeyword","DefaultAstNodeDescriptionProvider","nameNodeSegment","nameSegmentGetter","nameSegment","selectionSegment","DefaultReferenceDescriptionProvider","createDescriptions","targetNodeDescr","refCstNode","docUri","DefaultAstNodeLocator","segmentSeparator","indexSeparator","containerPath","newSegment","getPathSegment","currentValue","propertyIndex","DefaultConfigurationProvider","_ready","settings","workspaceConfig","ready","params","capabilities","configuration","initialized","languages","section","lang","toSectionName","fetchConfiguration","configToUpdate","conf","updateSectionConfiguration","updateConfiguration","getConfiguration","sectionName","DefaultDocumentBuilder","updateBuildOptions","updateListeners","buildPhaseListeners","buildState","documentBuildWaiters","currentState","build","documents","Validated","IndexedReferences","previousCategories","validationChecks","completed","emitUpdate","buildDocuments","changed","deleted","deletedUri","changedUri","newDocument","allChangedUris","shouldRelink","rebuildDocuments","Linked","changedUris","isAffected","prepareBuild","runCancelable","IndexedContent","updateContent","scopeComputation","ScopeComputation","updateReferences","toBeValidated","shouldValidate","targetState","filtered","notifyBuildPhase","onBuildPhase","waitUntil","uriOrToken","buildDisposable","cancelDisposable","listeners","getBuildOptions","validator","validationSetting","DefaultIndexManager","symbolIndex","symbolByTypeIndex","referenceIndex","astNodePath","targetDocUri","docRefs","refDescr","nodeType","uris","documentUris","getFileDescriptions","indexData","ReferenceDescriptionProvider","DefaultWorkspaceManager","initialBuildOptions","documentBuilder","mutex","WorkspaceLock","folders","workspaceFolders","_params","write","initializeWorkspace","performStartup","collector","loadAdditionalDocuments","wf","getRootFolder","traverseFolder","_folders","_collector","workspaceFolder","folderPath","readDirectory","includeEntry","isDirectory","isFile","_workspaceFolder","DefaultLexer","toTokenTypeDictionary","lexerTokens","isTokenTypeDictionary","chevrotainLexer","chevrotainResult","isIMultiModeLexerDefinition","res","isTokenTypeArray","getLines","tagRegex","inlineTagRegex","buildInlineTokens","lineIndex","characterIndex","matchIndex","startContent","tagName","endContent","nonWhitespaceRegex","whitespaceEndRegex","skipWhitespace","lastCharacter","parseJSDocElement","parseJSDocTag","parseJSDocText","JSDocLineImpl","inlines","appendEmptyLine","firstToken","lastToken","lines","parseJSDocInline","JSDocTextImpl","parseJSDocLine","inline","tagToken","docLine","JSDocTagImpl","normalizeOptions","normalizeOption","escaped","JSDocCommentImpl","getTag","getAllTags","getTags","fillNewlines","toMarkdown","renderTag","toMarkdownDefault","rendered","tag","display","displayStart","renderedLink","renderLink","renderLinkDefault","renderInlineTag","marker","JSDocDocumentationProvider","getDocumentation","normalizedOptions","isJSDoc","firstRegex","lastRegex","opts","currentLine","currentCharacter","tagMatch","fullMatch","inlineTagMatches","matchAll","startPosition","parseJSDocComment","parseJSDoc","documentationLinkRenderer","documentationTagRenderer","findNameInPrecomputedScopes","findNameInGlobalScope","_node","_tag","DefaultCommentProvider","grammarConfig","GrammarConfig","isAstNodeWithComment","getPreviousNode","findCommentNode","multilineCommentRules","DefaultAsyncParser","syncParser","DefaultWorkspaceLock","previousTokenSource","writeQueue","readQueue","cancelWrite","tokenSource","enqueue","read","queue","deferred","performNextOperation","shift","DefaultHydrator","grammarElementIdMap","tokenTypeIdMap","dehydrate","dehydrateAstNode","createDehyrationContext","astNodes","cstNodes","dehydrateCstNode","arr","dehydrateReference","getGrammarElementId","hydrate","createHydrationContext","hydrateCstNode","hydrateAstNode","hydrateCstLeafNode","setParent","hydrateReference","num","cstNodeObj","getGrammarElement","hydrated","getTokenType","createGrammarElementIdMap","id","createDefaultCoreModule","DocumentationProvider","nameRegexp","createGrammarConfig","prepareLangiumParser","createLangiumParser","CompletionParser","createCompletionParser","References","serializer","Hydrator","JsonSerializer","createDefaultSharedCoreModule","WorkspaceManager","ConfigurationProvider","inject","module1","module2","module3","module4","module5","module6","module7","module8","module9","_inject","_merge","merge","m1","m2","isProxy","module","injector","proxy","Proxy","deleteProperty","_resolve","ownKeys","Reflect","__requested__","cause","value2","value1","EmptyFileSystemProvider","EmptyFileSystem","minimalGrammarModule","minimalSharedGrammarModule","loadGrammarFromJson","json","createMinimalGrammarServices","customizer","objValue","paths","objectProto","sources","propsIndex","propsLength","findIndexFunc","iterable","reWhitespace","reTrimStart","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","INFINITY","isSymbol","valueOf","isBinary","remainder"],"sourceRoot":""}